id,type,smelly,lines_code,lines_blank,lines_comment,num_keys,num_suspicious_comments,num_tokens,text_entropy,num_imports,num_inputs,num_interfaces,num_node_templates,num_node_types,num_parameters,num_properties,num_relationship_templates,num_relationship_types,num_shell_scripts
2462,"{'org.alien4cloud.grafana.linux_ans.relationships.GrafanaConnectToGraphite': {'derived_from': 'tosca.relationships.ConnectsTo', 'properties': {'datasource_name': {'type': 'string', 'required': True, 'default': 'Graphite_DS'}}, 'valid_target_types': ['org.alien4cloud.graphite.pub.capabilities.GraphiteHttpEndpoint'], 'interfaces': {'Configure': {'add_target': {'inputs': {'ANSIBLE_VERBOSE': False, 'PLAYBOOK_ENTRY': 'connects_to_graphite.yml', 'graphite_host': {'get_attribute': ['TARGET', 'http_endpoint', 'ip_address']}, 'graphite_port': {'get_property': ['TARGET', 'http_endpoint', 'port']}, 'grafana_port': {'get_property': ['SOURCE', 'http_endpoint', 'port']}, 'grafana_user': {'get_property': ['SOURCE', 'http_endpoint', 'user']}, 'grafana_password': {'get_property': ['SOURCE', 'http_endpoint', 'password']}, 'datasource_name': {'get_property': ['SELF', 'datasource_name']}}, 'implementation': 'playbook/playbook.ansible'}}}}}",,45.0,0.0,0.0,27.0,0.0,52.0,4.99,0.0,0.0,1.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0
2350,"{'my.types.WordpressDbConnection': {'derived_from': 'tosca.relationships.ConnectsTo', 'properties': {'credential': {'user': 'db_user', 'token': 'db_pwd'}}}}",,6.0,0.0,0.0,6.0,0.0,9.0,3.17,0.0,0.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0
1580,"{'org.ystia.yorc.samples.tests.AnsibleIterationComponent': {'description': 'This component iterates on printing a message n times, sleeping a given\nnumber of seconds between each iteration.\n', 'derived_from': 'tosca.nodes.SoftwareComponent', 'properties': {'messageToPrint': {'description': 'Message to print on each iteration', 'type': 'string', 'default': 'Message'}, 'numberOfIterations': {'description': 'Number of iterations to perform', 'type': 'integer', 'default': 10}, 'pauseDuration': {'description': 'Duration in seconds of the pause after each iteration', 'type': 'integer', 'default': 1}}, 'interfaces': {'Standard': {'create': {'inputs': {'MESSAGE': {'get_property': ['SELF', 'messageToPrint']}, 'ITERATIONS': {'get_property': ['SELF', 'numberOfIterations']}, 'PAUSE_DURATION': {'get_property': ['SELF', 'pauseDuration']}}, 'implementation': 'ansible/create.yaml'}, 'start': {'implementation': 'ansible/iterate.yaml'}}, 'custom': {'iterate': {'inputs': None, 'implementation': 'ansible/iterate.yaml'}}}}}",,40.0,0.0,0.0,33.0,0.0,87.0,5.69,0.0,0.0,2.0,0.0,0.0,0.0,3.0,0.0,0.0,0.0
932,"{'tosca.nodes.Abstract.Compute': {'derived_from': 'tosca.nodes.Root', 'capabilities': {'host': {'type': 'tosca.capabilities.Compute', 'valid_source_types': []}}}}",,6.0,0.0,0.0,6.0,0.0,8.0,3.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
1291,"{'org.ystia.yorc.pub.location.GoogleConfig': {'derived_from': 'org.ystia.yorc.pub.location.LocationConfig', 'description': 'Google Compute Engine location configuration for Yorc\n', 'abstract': True, 'properties': {'project': {'description': 'Google Cloud project', 'type': 'string', 'required': True}, 'region': {'description': 'Google Compute Engine region', 'type': 'string', 'required': False}, 'application_credentials': {'description': 'Path to file containing service account private keys in JSON format', 'type': 'string', 'required': False}, 'credentials': {'description': 'Content of file containing service account private keys', 'type': 'string', 'required': False}, 'use_vault': {'description': 'Use vault to reference secrets in configuration', 'type': 'boolean', 'default': True}}, 'requirements': [{'host': {'capability': 'org.ystia.yorc.pub.capabilities.YorcConfigContainer', 'relationship': 'org.ystia.yorc.pub.relationships.YorcConfigHostedOnYorc', 'occurrences': [1, 1]}}]}}",,32.0,0.0,0.0,30.0,0.0,86.0,5.43,0.0,0.0,0.0,0.0,0.0,0.0,5.0,0.0,0.0,0.0
1858,"{'kubernetes.nodes.Deployment': {'derived_from': 'kubernetes.nodes.Root', 'properties': {'apiGroup': {'type': 'string', 'default': 'apps', 'required': True}, 'metadata': {'description': ""Standard object's metadata."", 'type': 'kubernetes.datatypes.ObjectMeta.name', 'required': True}, 'spec': {'type': 'kubernetes.datatypes.DeploymentSpec', 'required': True}}}}",,14.0,0.0,0.0,14.0,0.0,25.0,4.07,0.0,0.0,0.0,0.0,0.0,0.0,3.0,0.0,0.0,0.0
1994,"{'org.alien4cloud.nodes.AuroraExecutor': {'derived_from': 'tosca.nodes.SoftwareComponent', 'description': 'Aurora Executor\n', 'tags': {'icon': 'images/aurora_icon.png'}, 'requirements': [{'host': {'capability': 'org.alien4cloud.capabilities.MesosSlaveHost', 'relationship': 'org.alien4cloud.relationships.AuroraExecutorHostedOnSlave', 'occurrences': [1, 1], 'node_filter': {'properties': [{'component_version': {'equal': '0.25.0-0.2.70'}}]}}}], 'interfaces': {'Standard': {'create': {'inputs': {'OS': {'get_property': ['HOST', 'os', 'distribution']}}, 'implementation': 'scripts/install_executor.sh'}, 'configure': {'inputs': {'MESOS_WORK_DIR': {'get_property': ['HOST', 'work_dir']}}, 'implementation': 'scripts/configure_executor.sh'}}}}}",,33.0,0.0,0.0,26.0,0.0,42.0,5.15,0.0,0.0,1.0,0.0,0.0,0.0,1.0,0.0,0.0,2.0
2527,"{'tosca.relationships.Root': {'metadata': {'puccini.normative': 'true', 'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.0]', 'specification.location': '5.6.1'}, 'description': 'This is the default (root) TOSCA Relationship Type definition that all other TOSCA Relationship Types derive from.', 'attributes': {'tosca_id': {'description': 'A unique identifier of the realized instance of a Relationship Template that derives from any TOSCA normative type.', 'type': 'string'}, 'tosca_name': {'description': 'This attribute reflects the name of the Relationship Template as defined in the TOSCA service template. This name is not unique to the realized instance model of corresponding deployed application as each template in the model can result in one or more instances (e.g., scaled) when orchestrated to a provider environment.', 'type': 'string'}, 'state': {'description': 'The state of the relationship instance.', 'type': 'string', 'default': 'initial'}}, 'interfaces': {'Configure': {'type': 'tosca.interfaces.relationship.Configure'}}}}",,26.0,0.0,0.0,20.0,0.0,120.0,6.01,0.0,0.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
1066,{'tosca.nodes.EnterpriseServiceBus': {'derived_from': 'tosca.nodes.Middleware'}},,2.0,0.0,0.0,2.0,0.0,3.0,1.58,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
1515,"{'tosca.relationships.openstack.ssh_keypair_provider': {'derived_from': 'tosca.relationships.Root', 'interfaces': {'Configure': {'type': 'tosca.interfaces.relationship.Configure', 'link': {'implementation': 'openstack_plugin.tasks.ssh:link', 'inputs': {'type': 'map'}}, 'unlink': {'implementation': 'openstack_plugin.tasks.ssh:unlink', 'inputs': {'type': 'map'}}}}}}",,13.0,0.0,0.0,13.0,0.0,19.0,3.68,0.0,0.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
2579,"{'starlings.relationships.DependsOnDockerVolume': {'derived_from': 'tosca.relationships.DependsOn', 'valid_target_types': ['starlings.capabilities.DockerVolume'], 'attributes': {'host_path': {'get_operation_output': ['SELF', 'Configure', 'post_configure_target', 'HOST_PATH']}}, 'interfaces': {'Configure': {'post_configure_target': {'inputs': {'HOST_PATH': {'get_property': ['TARGET', 'host_path']}, 'TARGET_DIRECTORY': {'get_property': ['SOURCE', 'target_directory']}}, 'implementation': 'scripts/publisher_configure_copy_directories.sh'}}}, 'artifacts': [{'utils_scripts': {'type': 'tosca.artifacts.File', 'file': 'utils_scripts'}}]}}",,28.0,0.0,0.0,19.0,0.0,32.0,4.62,0.0,0.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,1.0
768,"{'tosca.nodes.Database': {'metadata': {'puccini.normative': 'true', 'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.2]', 'specification.location': '5.9.8'}, 'description': 'The TOSCA Database node represents a logical database that can be managed and hosted by a TOSCA DBMS node.', 'derived_from': 'tosca.nodes.Root', 'properties': {'name': {'description': 'The logical database Name.', 'type': 'string'}, 'port': {'description': 'The port the database service will use to listen for incoming data and requests.', 'type': 'integer', 'required': False}, 'user': {'description': 'The special user account used for database administration.', 'type': 'string', 'required': False}, 'password': {'description': ""The password associated with the user account provided in the 'user' property."", 'type': 'string', 'required': False}}, 'capabilities': {'database_endpoint': {'type': 'tosca.capabilities.Endpoint.Database'}}, 'requirements': [{'host': {'capability': 'tosca.capabilities.Compute', 'node': 'tosca.nodes.DBMS', 'relationship': 'tosca.relationships.HostedOn'}}]}}",,34.0,0.0,0.0,31.0,0.0,103.0,5.87,0.0,0.0,0.0,0.0,0.0,0.0,4.0,0.0,0.0,0.0
2739,{'key': '{}'},,1.0,0.0,0.0,1.0,0.0,2.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
2429,"{'my.relationships.ConnectsToWebUI': {'derived_from': 'tosca.relationships.ConnectsTo', 'properties': {'target_ip': {'type': 'string'}}, 'interfaces': {'Configure': {'post_configure_source': {'inputs': {'target_ip': {'type': 'string'}}, 'implementation': 'scripts/my_script.sh'}}}}}",,12.0,0.0,0.0,12.0,0.0,16.0,3.62,0.0,0.0,1.0,0.0,0.0,0.0,1.0,0.0,0.0,1.0
1279,"{'org.ystia.yorc.alien4cloud.nodes.YorcPlugin': {'description': 'Upload Yorc orchestrator plugin\n', 'derived_from': 'org.alien4cloud.alien4cloud.config.pub.nodes.OrchestratorConfigurator', 'requirements': [{'yorc': {'capability': 'org.ystia.yorc.pub.capabilities.YorcRestAPI', 'relationship': 'org.ystia.yorc.alien4cloud.relationships.ConnectsToYorc', 'occurrences': [1, 1]}}], 'attributes': {'orchestratorId': {'get_operation_output': ['SELF', 'Standard', 'start', 'orchestratorId']}}, 'properties': {'download_url': {'description': 'The URL used to download the Yorc plugin zip.', 'type': 'string', 'required': True, 'default': 'https://dl.bintray.com/ystia/yorc-a4c-plugin/releases/alien4cloud-yorc-plugin-3.1.0.zip'}, 'name': {'type': 'string', 'required': True, 'default': 'Yorc'}, 'discriminator': {'type': 'string', 'description': 'a prefix for all deployments', 'required': True, 'default': 'YourInitials'}, 'pluginId': {'type': 'string', 'required': True, 'default': 'alien4cloud-yorc-plugin'}, 'pluginBean': {'type': 'string', 'required': True, 'default': 'yorc-orchestrator-factory'}, 'yorc_address_ha': {'type': 'string', 'required': False}}, 'interfaces': {'Standard': {'start': {'inputs': {'alien_user': {'get_property': ['HOST', 'rest', 'user']}, 'alien_password': {'get_property': ['HOST', 'rest', 'password']}, 'alien_url': {'get_attribute': ['HOST', 'alien_url']}, 'download_url': {'get_property': ['SELF', 'download_url']}, 'orchestrator_name': {'get_property': ['SELF', 'name']}, 'pluginId': {'get_property': ['SELF', 'pluginId']}, 'pluginBean': {'get_property': ['SELF', 'pluginBean']}, 'discriminator': {'get_property': ['SELF', 'discriminator']}}, 'implementation': 'playbook/start.yml'}}}}}",,82.0,0.0,0.0,58.0,0.0,121.0,5.66,0.0,0.0,1.0,0.0,0.0,0.0,6.0,0.0,0.0,0.0
2214,"{'test_type': {'derived_from': 'cloudify.nodes.Root', 'properties': {'test_property': {'default': 'test_property_default_value'}}}}",,5.0,0.0,0.0,5.0,0.0,7.0,2.81,0.0,0.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0
2184,"{'draco.nodes.PaaS': {'derived_from': 'tosca.nodes.Compute', 'version': 1.0, 'description': 'This node type extends the normative node type ""Compute"", and  permits detailing the features of a PaaS offering.\n', 'capabilities': {'host': {'type': 'draco.capabilities.Hosting'}, 'scalable': {'type': 'draco.capabilities.Scalable'}}}}",,10.0,0.0,0.0,9.0,0.0,31.0,4.57,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
294,"{'vcloud_configuration': {'derived_from': 'cloudify.nodes.Root', 'properties': {'vcloud_config': {}}}}",,4.0,0.0,0.0,4.0,0.0,5.0,2.32,0.0,0.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0
2786,"{'aspide.relationships.OutputTo': {'derived_from': 'tosca.relationships.Root', 'valid_target_types': ['aspide.capabilities.DataOutput'], 'properties': {'path': {'type': 'string', 'required': True, 'description': 'Specifies where the volume is mounted inside the node.', 'default': '/home/aspide'}}}}",,10.0,0.0,0.0,9.0,0.0,23.0,4.44,0.0,0.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0
1468,"{'org.ystia.yorc.samples.kube.containers.nodes.Apache': {'derived_from': 'tosca.nodes.Container.Application.DockerContainer', 'capabilities': {'http_endpoint': {'type': 'org.ystia.yorc.samples.kube.containers.capabilities.Http'}}, 'interfaces': {'Standard': {'create': {'implementation': {'file': 'httpd:latest', 'repository': 'docker', 'type': 'tosca.artifacts.Deployment.Image.Container.Docker'}}}}}}",,12.0,0.0,0.0,12.0,0.0,17.0,3.97,0.0,0.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
1993,"{'org.alien4cloud.nodes.AuroraScheduler': {'derived_from': 'tosca.nodes.SoftwareComponent', 'description': 'Aurora Scheduler\n', 'tags': {'icon': 'images/aurora_icon.png'}, 'properties': {'cluster_name': {'type': 'string', 'required': True, 'default': 'devcluster'}}, 'attributes': {'external_url': {'concat': ['http://', {'get_attribute': ['HOST', 'public_ip_address']}, ':8081/scheduler']}}, 'requirements': [{'host': {'capability': 'org.alien4cloud.capabilities.MesosMaster', 'relationship': 'org.alien4cloud.relationships.AuroraSchedulerHostedOnMaster', 'occurrences': [1, 1], 'node_filter': {'properties': [{'component_version': {'equal': '0.25.0-0.2.70'}}]}}}], 'interfaces': {'Standard': {'create': {'inputs': {'OS': {'get_property': ['HOST', 'os', 'distribution']}}, 'implementation': 'scripts/install_scheduler.sh'}, 'configure': {'inputs': {'AURORA_ZK_ENDPOINTS': {'get_attribute': ['HOST', 'zk_endpoints']}, 'AURORA_MESOS_MASTER': {'get_attribute': ['HOST', 'master_url']}, 'AURORA_CLUSTER_NAME': {'get_property': ['SELF', 'cluster_name']}, 'HOSTNAME': {'get_attribute': ['HOST', 'public_ip_address']}}, 'implementation': 'scripts/configure_scheduler.sh'}, 'start': {'inputs': {'OS': {'get_property': ['HOST', 'os', 'distribution']}}, 'implementation': 'scripts/start_scheduler.sh'}, 'stop': {'inputs': {'OS': {'get_property': ['HOST', 'os', 'distribution']}}, 'implementation': 'scripts/stop_scheduler.sh'}}}}}",,74.0,0.0,0.0,51.0,0.0,88.0,5.62,0.0,0.0,1.0,0.0,0.0,0.0,2.0,0.0,0.0,4.0
2341,{'tosca.relationships.DependsOn': {'derived_from': 'tosca.relationships.Root'}},,2.0,0.0,0.0,2.0,0.0,3.0,1.58,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
1820,"{'tosca.nodes.LoadBalancer': {'derived_from': 'tosca.nodes.Root', 'properties': {'algorithm': {'type': 'string', 'required': False, 'status': 'experimental'}}, 'capabilities': {'client': {'type': 'tosca.capabilities.Endpoint.Public', 'occurrences': [0, 'UNBOUNDED'], 'description': 'the Floating (IP) clients on the public network can connect to'}}, 'requirements': [{'application': {'capability': 'tosca.capabilities.Endpoint', 'relationship': 'tosca.relationships.RoutesTo', 'occurrences': [0, 'UNBOUNDED']}}]}}",,21.0,0.0,0.0,17.0,0.0,39.0,5.03,0.0,0.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0
831,"{'org.alien4cloud.kubernetes.api.types.Deployment': {'description': 'null', 'derived_from': 'org.alien4cloud.kubernetes.api.types.AbstractDeployment'}}",,3.0,0.0,0.0,3.0,0.0,5.0,2.32,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
2496,"{'org.alien4cloud.cloudify.hostpool.awsfeeder.relationships.HostpoolFeederConnectToHostpool': {'derived_from': 'tosca.relationships.ConnectsTo', 'valid_target_types': ['org.alien4cloud.cloudify.hostpool.pub.capabilities.HostPoolServiceApi'], 'interfaces': {'Configure': {'add_target': {'inputs': {'ANSIBLE_VERBOSE': False, 'PLAYBOOK_ENTRY': 'hostpool_connected.yml', 'aws_access_key': {'get_property': ['SOURCE', 'aws_access_key']}, 'aws_secret_key': {'get_property': ['SOURCE', 'aws_secret_key']}, 'key_name': {'get_property': ['SOURCE', 'key_name']}, 'key_content': {'get_property': ['SOURCE', 'key_content']}, 'region': {'get_property': ['SOURCE', 'region']}, 'instance_name': {'get_property': ['SOURCE', 'instance_name']}, 'instance_count': {'get_property': ['SOURCE', 'instance_count']}, 'host_per_instance': {'get_property': ['SOURCE', 'host_per_instance']}, 'instance_username': {'get_property': ['SOURCE', 'instance_username']}, 'instance_groups': {'get_property': ['SOURCE', 'instance_groups']}, 'instance_image': {'get_property': ['SOURCE', 'instance_image']}, 'instance_type': {'get_property': ['SOURCE', 'instance_type']}, 'instance_os': {'get_property': ['SOURCE', 'instance_os']}, 'hostpool_url': {'concat': [{'get_property': ['TARGET', 'cloudify_hostpool', 'protocol']}, '://', {'get_attribute': ['TARGET', 'cloudify_hostpool', 'ip_address']}, ':', {'get_property': ['TARGET', 'cloudify_hostpool', 'port']}]}}, 'implementation': 'playbook/playbook.ansible'}}}}}",,79.0,0.0,0.0,41.0,0.0,83.0,4.66,0.0,0.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
2641,"{'tosca.relationships.AttachTo': {'derived_from': 'tosca.relationships.Root', 'valid_target_types': ['tosca.capabilities.Attachment']}}",,4.0,0.0,0.0,3.0,0.0,5.0,2.32,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
1345,"{'org.ystia.yorc.location.HostsPoolConfig': {'derived_from': 'org.ystia.yorc.pub.location.HostsPoolConfig', 'interfaces': {'Standard': {'start': {'inputs': {'YORC_CONFIG_DIR': {'get_property': ['REQ_TARGET', 'yorc', 'config_dir']}, 'YORC_INSTALL_DIR': {'get_property': ['REQ_TARGET', 'yorc', 'install_dir']}, 'LOCATION_NAME': {'get_property': ['SELF', 'location_name']}}, 'implementation': 'playbooks/apply_hostspool.yml'}}}, 'requirements': [{'yorc': {'capability': 'org.ystia.yorc.pub.capabilities.YorcConfigContainer', 'relationship': 'org.ystia.yorc.linux.ansible.relationships.YorcConfigHostsPoolHostedOnYorc'}}, {'vault': {'capability': 'org.alien4cloud.vault.pub.capabilities.VaultServer', 'relationship': 'org.ystia.yorc.linux.ansible.relationships.HostsPoolSecretsOnVault', 'occurrences': [0, 1]}}]}}",,31.0,0.0,0.0,21.0,0.0,37.0,4.79,0.0,0.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
1796,"{'tosca.nodes.MiCADO.Occopus.Nova.Compute': {'derived_from': 'tosca.nodes.MiCADO.Compute', 'properties': {'cloud': {'type': 'tosca.datatypes.MiCADO.Occopus.Cloud'}}, 'capabilities': {'host': {'type': 'tosca.capabilities.MiCADO.Occopus.Nova.Cloud'}}}}",,8.0,0.0,0.0,8.0,0.0,11.0,3.28,0.0,0.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0
2251,"{'tosca.nodes.indigo.LRMS.WorkerNode.Slurm': {'derived_from': 'tosca.nodes.indigo.LRMS.WorkerNode', 'artifacts': {'slurm_role': {'file': 'indigo-dc.slurm', 'type': 'tosca.artifacts.AnsibleGalaxy.role'}, 'nfs_role': {'file': 'indigo-dc.nfs', 'type': 'tosca.artifacts.AnsibleGalaxy.role'}, 'openvpn_role': {'file': 'indigo-dc.openvpn', 'type': 'tosca.artifacts.AnsibleGalaxy.role'}}, 'interfaces': {'Standard': {'configure': {'implementation': 'https://raw.githubusercontent.com/indigo-dc/tosca-types/dodas_roll/artifacts/lrms/slurm/slurm_wn_install.yml', 'inputs': {'slurm_front_end_ip': {'get_property': ['SELF', 'front_end_ip']}, 'wn_hybrid_cluster': {'get_property': ['SELF', 'hybrid']}, 'slurm_public_front_end_ip': {'get_property': ['SELF', 'public_front_end_ip']}}}}}}}",,29.0,0.0,0.0,23.0,0.0,37.0,4.57,0.0,0.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
682,"{'radon.nodes.datapipeline.source.ConsumeRemote': {'derived_from': 'radon.nodes.datapipeline.source.ConsumeDataEndPoint', 'metadata': {'targetNamespace': 'radon.nodes.datapipeline.source', 'abstract': 'false', 'final': 'false'}}}",,6.0,0.0,0.0,6.0,0.0,10.0,3.12,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
1374,"{'org.ystia.haproxy.linux.ansible.nodes.HAProxyHTTP': {'derived_from': 'tosca.nodes.LoadBalancer', 'description': 'HAProxy Server for HTTP connection on linux', 'tags': {'icon': '/images/logo.png'}, 'requirements': [{'host': {'capability': 'org.ystia.haproxy.pub.capabilities.Container.HAProxy', 'relationship': 'tosca.relationships.HostedOn', 'occurrences': [1, 1]}}, {'application': {'capability': 'tosca.capabilities.Endpoint', 'relationship': 'org.ystia.haproxy.linux.ansible.relationships.HAProxyRoutesTo', 'occurrences': [0, 'UNBOUNDED']}}], 'interfaces': {'Standard': {'configure': {'inputs': {'PORT': {'get_property': ['SELF', 'client', 'port']}, 'MODE': 'http'}, 'implementation': 'playbooks/configure-route.yaml'}, 'delete': 'playbooks/delete-route.yaml'}}}}",,30.0,0.0,0.0,23.0,0.0,46.0,5.35,0.0,0.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
339,"{'tosca.nodes.indigo.HadoopSlave': {'derived_from': 'tosca.nodes.SoftwareComponent', 'metadata': {'icon': '/images/hadoop-wn.jpg'}, 'properties': {'master_ip': {'required': True, 'type': 'string'}}, 'artifacts': {'hadoop_role': {'file': 'indigo-dc.hadoop,master', 'type': 'tosca.artifacts.AnsibleGalaxy.role'}}, 'interfaces': {'Standard': {'configure': {'implementation': 'https://raw.githubusercontent.com/indigo-dc/tosca-types/master/artifacts/hadoop/hadoop_wn_install.yml', 'inputs': {'hadoop_master_ip': {'get_property': ['SELF', 'master_ip']}}}}}}}",,21.0,0.0,0.0,19.0,0.0,28.0,4.66,0.0,0.0,1.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0
897,"{'starlings.nodes.DockerVolume': {'derived_from': 'tosca.nodes.Root', 'tags': {'icon': 'images/docker_volume.png'}, 'properties': {'host_path': {'type': 'string', 'required': True, 'description': 'Specifies where from the volume is mounted inside the host.'}, 'container_path': {'type': 'string', 'required': True, 'description': 'Specifies where the volume is mounted inside the container.'}}, 'capabilities': {'depends': {'type': 'starlings.capabilities.DockerVolume'}}, 'requirements': [{'hosted_on': {'capability': 'tosca.capabilities.Container', 'relationship': 'tosca.relationships.HostedOn', 'occurrences': [1, 1]}}, {'filesystem_endpoint': {'capability': 'starlings.capabilities.DockerVolumeAttachment', 'relationship': 'starlings.relationships.MountDockerVolume', 'occurrences': [1, 1]}}]}}",,29.0,0.0,0.0,25.0,0.0,59.0,5.09,0.0,0.0,0.0,0.0,0.0,0.0,2.0,0.0,0.0,0.0
1159,"{'alien.test.nodes.TestComponentSource': {'derived_from': 'tosca.nodes.SoftwareComponent', 'requirements': [{'connect': {'capability': 'alien.test.capabilities.TestComponentConnects', 'relationship': 'alien.test.relationships.TestComponentConnectsTo', 'occurrences': [1, 1]}}, {'capa_upperbound_test': {'capability': 'alien.test.capabilities.CapaUpperBoundTest', 'relationship': 'alien.test.relationships.CapaUpperBoundTest', 'occurrences': [1, 2]}}, {'req_upperbound_test': {'capability': 'alien.test.capabilities.ReqUpperBoundTest', 'relationship': 'alien.test.relationships.ReqUpperBoundTest', 'occurrences': [1, 2]}}, {'capa_to_be_deleted': {'capability': 'alien.test.capabilities.CapaToBeDeleted', 'relationship': 'alien.test.relationships.CapaToBeDeleted'}}]}}",,24.0,0.0,0.0,18.0,0.0,33.0,4.11,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
227,"{'org.alien4cloud.mock.pub.nodes.AbstractMock': {'abstract': True, 'derived_from': 'tosca.nodes.Root', 'properties': {'duration': {'type': 'integer', 'description': 'The total duration for all operations (create, configure, start) in seconds.\nEach one is pondered in implementation.\n', 'required': True, 'default': 120}, 'variation': {'type': 'integer', 'description': 'The variation percent.\n20 means 20% of variation. Example, with an operation duration of 100s, if the\nvariation is 20%, the duration will be randomized between 80s and 120s.\n', 'required': True, 'default': 20, 'constraints': [{'in_range': [1, 100]}]}, 'log_length': {'type': 'integer', 'default': 2000, 'description': 'Words count in the generated logs.\n'}}}}",,25.0,0.0,0.0,20.0,0.0,81.0,5.74,0.0,0.0,0.0,0.0,0.0,0.0,3.0,0.0,0.0,0.0
461,"{'tosca.nodes.MiCADO.Edge.OCI': {'description': 'OCI edge node for MiCADO', 'derived_from': 'tosca.nodes.MiCADO.OCI.Compute', 'interfaces': {'Terraform': {'type': 'tosca.interfaces.MiCADO.Terraform'}}}}",,6.0,0.0,0.0,6.0,0.0,13.0,3.7,0.0,0.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
2571,"{'yorc.test.relationships.TestComponentOnContainer': {'derived_from': 'tosca.relationships.HostedOn', 'valid_target_types': ['yorc.test.capabilities.TestContainerCapability']}}",,4.0,0.0,0.0,3.0,0.0,5.0,2.32,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
764,"{'tosca.nodes.SoftwareComponent': {'metadata': {'puccini.normative': 'true', 'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.2]', 'specification.location': '5.9.4'}, 'description': 'The TOSCA SoftwareComponent node represents a generic software component that can be managed and run by a TOSCA Compute Node Type.', 'derived_from': 'tosca.nodes.Root', 'properties': {'component_version': {'description': ""The optional software component's version."", 'type': 'version', 'required': False}, 'admin_credential': {'description': 'The optional credential that can be used to authenticate to the software component.', 'type': 'tosca.datatypes.Credential', 'required': False}}, 'requirements': [{'host': {'capability': 'tosca.capabilities.Compute', 'node': 'tosca.nodes.Compute', 'relationship': 'tosca.relationships.HostedOn'}}]}}",,23.0,0.0,0.0,21.0,0.0,71.0,5.64,0.0,0.0,0.0,0.0,0.0,0.0,2.0,0.0,0.0,0.0
236,"{'org.alien4cloud.doc.kube.containers.nodes.Apache': {'derived_from': 'tosca.nodes.Container.Application.DockerContainer', 'capabilities': {'http_endpoint': {'type': 'org.alien4cloud.doc.kube.containers.capabilities.Http'}}, 'interfaces': {'Standard': {'create': {'implementation': {'file': 'httpd:latest', 'repository': 'docker', 'type': 'tosca.artifacts.Deployment.Image.Container.Docker'}}}}}}",,12.0,0.0,0.0,12.0,0.0,17.0,3.97,0.0,0.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
323,"{'tosca.nodes.indigo.Container.Application.Docker': {'derived_from': 'tosca.nodes.Container.Application.Docker', 'properties': {'command': {'required': False, 'type': 'string'}, 'uris': {'required': False, 'type': 'list', 'entry_schema': {'type': 'string'}}, 'environment_variables': {'required': False, 'type': 'map', 'entry_schema': {'type': 'string'}}, 'constraints': {'required': False, 'type': 'list', 'entry_schema': {'type': 'list', 'entry_schema': {'type': 'string'}}}, 'secrets': {'required': False, 'type': 'map', 'entry_schema': {'type': 'string'}}, 'labels': {'required': False, 'type': 'map', 'entry_schema': {'type': 'string'}}, 'privileged': {'required': False, 'type': 'boolean', 'default': False}, 'force_pull_image': {'required': False, 'type': 'boolean', 'default': False}}}}",,41.0,0.0,0.0,41.0,0.0,66.0,3.7,0.0,0.0,0.0,0.0,0.0,0.0,8.0,0.0,0.0,0.0
2677,"{'org.ystia.logstash.linux.bash.relationships.LogstashToKafka': {'derived_from': 'org.ystia.kafka.pub.relationships.PublishToKafkaTopic', 'description': 'Connects Logstash to Kafka', 'valid_target_types': ['org.ystia.kafka.pub.capabilities.KafkaTopic'], 'interfaces': {'Configure': {'pre_configure_source': {'inputs': {'TOPIC_NAME': {'get_property': ['TARGET', 'topic_name']}, 'REQUIRED_ACKS': {'get_property': ['SELF', 'request_required_acks']}, 'MESSAGE_MAX_RETRIES': {'get_property': ['SELF', 'message_send_max_retries']}, 'RETRY_BACKOFF_MS': {'get_property': ['SELF', 'retry_backoff_ms']}, 'REQUEST_TIMEOUT_MS': {'get_property': ['SELF', 'request_timeout_ms']}}, 'implementation': 'relationships/kafka/configure-kafka-output.sh'}}}, 'artifacts': [{'scripts': {'file': 'scripts', 'type': 'tosca.artifacts.File'}}]}}",,34.0,0.0,0.0,23.0,0.0,42.0,4.88,0.0,0.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,1.0
36,"{'tosca.nodes.ComputeWithAttrList': {'derived_from': 'tosca.nodes.Compute', 'attributes': {'attr_list': {'type': 'map', 'entry_schema': {'type': 'string'}}}}}",,7.0,0.0,0.0,7.0,0.0,10.0,3.12,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
169,"{'org.alien4cloud.monitoring.pub.nodes.GraphiteService': {'derived_from': 'org.alien4cloud.monitoring.pub.nodes.MetricsBackend', 'abstract': True, 'metadata': {'icon': '/images/graphite.png'}, 'capabilities': {'data_endpoint': {'type': 'org.alien4cloud.monitoring.pub.capabilities.GraphiteDataEndpoint', 'occurrences': [0, 'UNBOUNDED']}, 'http_endpoint': {'type': 'org.alien4cloud.monitoring.pub.capabilities.GraphiteHttpEndpoint', 'occurrences': [0, 'UNBOUNDED']}}}}",,16.0,0.0,0.0,12.0,0.0,21.0,4.01,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
1714,"{'tosca.nodes.indigo.SparkMesos': {'derived_from': 'tosca.nodes.SoftwareComponent', 'properties': {'marathon_password': {'type': 'string', 'required': True}, 'zookeeper_peers': {'type': 'string', 'required': True}, 'spark_mesos_deploy_app': {'type': 'string', 'constraints': [{'valid_values': ['apache-zeppelin', 'spark-dispatcher']}], 'required': False}, 'spark_hdfs_uri': {'type': 'string', 'required': False, 'default': ''}, 'spark_swift_auth_url': {'type': 'string', 'required': False, 'default': ''}, 'spark_swift_http_port': {'type': 'string', 'required': False, 'default': '8080'}, 'spark_swift_region': {'type': 'string', 'required': False, 'default': ''}, 'spark_swift_tenant': {'type': 'string', 'required': False, 'default': ''}, 'spark_swift_username': {'type': 'string', 'required': False, 'default': ''}, 'spark_swift_password': {'type': 'string', 'required': False, 'default': ''}, 'spark_swift_provider': {'type': 'string', 'required': False, 'default': 'Test'}, 'spark_cores_max': {'type': 'string', 'required': False, 'default': ''}, 'spark_executor_cores': {'type': 'string', 'required': False, 'default': ''}, 'spark_executor_mem': {'type': 'string', 'required': False, 'default': ''}, 'spark_driver_mem': {'type': 'string', 'required': False, 'default': ''}, 'spark_driver_cores': {'type': 'string', 'required': False, 'default': ''}}, 'artifacts': {'spark_mesos_role': {'file': 'indigo-dc.spark-mesos', 'type': 'tosca.artifacts.AnsibleGalaxy.role'}}, 'interfaces': {'Standard': {'create': {'implementation': 'https://raw.githubusercontent.com/indigo-dc/tosca-types/master/artifacts/mesos/spark_mesos_setup.yml', 'inputs': {'marathon_password': {'get_property': ['SELF', 'marathon_password']}, 'zookeeper_peers': {'get_property': ['SELF', 'zookeeper_peers']}, 'spark_mesos_hdfs_uri': {'get_property': ['SELF', 'spark_hdfs_uri']}, 'spark_mesos_swift_auth_url': {'get_property': ['SELF', 'spark_swift_auth_url']}, 'spark_mesos_swift_http_port': {'get_property': ['SELF', 'spark_swift_http_port']}, 'spark_mesos_swift_region': {'get_property': ['SELF', 'spark_swift_region']}, 'spark_mesos_swift_tenant': {'get_property': ['SELF', 'spark_swift_tenant']}, 'spark_mesos_swift_username': {'get_property': ['SELF', 'spark_swift_username']}, 'spark_mesos_swift_password': {'get_property': ['SELF', 'spark_swift_password']}, 'spark_mesos_swift_provider': {'get_property': ['SELF', 'spark_swift_provider']}, 'spark_mesos_cores_max': {'get_property': ['SELF', 'spark_cores_max']}, 'spark_mesos_executor_cores': {'get_property': ['SELF', 'spark_executor_cores']}, 'spark_mesos_executor_memory': {'get_property': ['SELF', 'spark_executor_mem']}, 'spark_mesos_driver_memory': {'get_property': ['SELF', 'spark_driver_mem']}, 'spark_mesos_driver_cores': {'get_property': ['SELF', 'spark_driver_cores']}}}}}, 'requirements': [{'host': {'capability': 'tosca.capabilities.indigo.MesosMaster', 'relationship': 'tosca.relationships.HostedOn', 'node': 'tosca.nodes.SoftwareComponent', 'occurrences': [1, 1]}}]}}",,145.0,0.0,0.0,111.0,0.0,197.0,5.11,0.0,0.0,1.0,0.0,0.0,0.0,16.0,0.0,0.0,0.0
378,"{'tosca.nodes.Container.Application': {'derived_from': 'tosca.nodes.Root', 'description': 'The TOSCA Container Application node represents an application that requires Container-level virtualization technology.\n', 'requirements': [{'host': {'capability': 'tosca.capabilities.Container', 'node': 'tosca.nodes.Container.Runtime', 'relationship': 'tosca.relationships.HostedOn'}}]}}",,9.0,0.0,0.0,8.0,0.0,25.0,4.56,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
1906,{'tosca.nodes.TMForum.Models': {'derived_from': 'tosca.nodes.TMForum'}},,2.0,0.0,0.0,2.0,0.0,3.0,1.58,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
2689,"{'org.ystia.yorc.linux.ansible.relationships.YorcConfigOpenstackHostedOnYorc': {'derived_from': 'tosca.relationships.HostedOn', 'description': 'Configure a Yorc server with an openstack infrastructure\n', 'valid_target_types': ['org.ystia.yorc.pub.nodes.YorcServer'], 'interfaces': {'Configure': {'post_configure_target': {'inputs': {'CONFIG_DIR': {'get_property': ['TARGET', 'config_dir']}, 'DATA_DIR': {'get_property': ['TARGET', 'data_dir']}, 'LOCATION_NAME': {'get_property': ['SOURCE', 'location_name']}, 'AUTH_URL': {'get_property': ['SOURCE', 'auth_url']}, 'TENANT_NAME': {'get_property': ['SOURCE', 'tenant_name']}, 'PROJECT_NAME': {'get_property': ['SOURCE', 'project_name']}, 'PROJECT_ID': {'get_property': ['SOURCE', 'project_id']}, 'USER_DOMAIN_NAME': {'get_property': ['SOURCE', 'user_domain_name']}, 'USER_NAME': {'get_property': ['SOURCE', 'user_name']}, 'PASSWORD': {'get_property': ['SOURCE', 'password']}, 'PRIVATE_NETWORK_NAME': {'get_property': ['SOURCE', 'private_network_name']}, 'DEFAULT_SECURITY_GROUPS': {'get_property': ['SOURCE', 'default_security_groups']}, 'USE_VAULT': {'get_property': ['SOURCE', 'use_vault']}, 'PROVISIONING_OVER_FIP_ALLOWED': {'get_property': ['SOURCE', 'provisioning_over_fip_allowed']}}, 'implementation': 'playbooks/configure_openstack.yml'}}}}}",,66.0,0.0,0.0,37.0,0.0,76.0,4.93,0.0,0.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
1092,{'tosca.nodes.router': {'derived_from': 'tosca.nodes.root'}},,2.0,0.0,0.0,2.0,0.0,3.0,1.58,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
1706,"{'tosca.nodes.indigo.Container.Application.Docker.Chronos': {'derived_from': 'tosca.nodes.indigo.Container.Application.Docker', 'properties': {'schedule': {'required': False, 'type': 'string'}, 'description': {'required': False, 'type': 'string'}, 'retries': {'required': False, 'type': 'integer'}}, 'capabilities': {'parent_job': {'type': 'tosca.capabilities.indigo.Container.Application.Docker.Chronos', 'valid_source_types': ['tosca.nodes.indigo.Container.Application.Docker.Chronos'], 'occurrences': [0, 'UNBOUNDED']}}, 'requirements': [{'parent_job': {'capability': 'tosca.capabilities.indigo.Container.Application.Docker.Chronos', 'node': 'tosca.nodes.indigo.Container.Application.Docker.Chronos', 'relationship': 'tosca.relationships.DependsOn', 'occurrences': [0, 1]}}]}}",,28.0,0.0,0.0,23.0,0.0,39.0,4.46,0.0,0.0,0.0,0.0,0.0,0.0,3.0,0.0,0.0,0.0
345,"{'tosca.nodes.indigo.Kepler': {'derived_from': 'tosca.nodes.SoftwareComponent', 'metadata': {'icon': '/images/kepler.jpeg'}, 'artifacts': {'galaxy_role': {'file': 'indigo-dc.kepler,master', 'type': 'tosca.artifacts.AnsibleGalaxy.role'}}, 'interfaces': {'Standard': {'configure': {'implementation': 'https://raw.githubusercontent.com/indigo-dc/tosca-types/master/artifacts/kepler/kepler_install.yml'}}}}}",,12.0,0.0,0.0,12.0,0.0,17.0,4.09,0.0,0.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
372,"{'tosca.nodes.WebApplication': {'derived_from': 'tosca.nodes.Root', 'description': 'The TOSCA WebApplication node represents a software application that can be managed and run by a TOSCA WebServer node.  Specific types of web applications such as Java, etc. could be derived from this type.\n', 'properties': {'context_root': {'type': 'string', 'required': False, 'description': 'The web application’s context root which designates the application’s URL path within the web server it is hosted on.'}}, 'capabilities': {'app_endpoint': {'type': 'tosca.capabilities.Endpoint'}}, 'requirements': [{'host': {'capability': 'tosca.capabilities.Container', 'node': 'tosca.nodes.WebServer', 'relationship': 'tosca.relationships.HostedOn'}}]}}",,19.0,0.0,0.0,16.0,0.0,76.0,5.95,0.0,0.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0
166,"{'org.alien4cloud.mock.ansible.nodes.AnsibleMockComponent': {'description': 'A software component hosted on GenericHost and that can connect to many other Generic.\n', 'derived_from': 'org.alien4cloud.mock.pub.nodes.AbstractMockComponent', 'capabilities': {'mock_endpoint': {'type': 'org.alien4cloud.mock.ansible.capabilities.AnsibleComponentEndpoint', 'occurrences': [0, 'unbounded']}}, 'requirements': [{'host': {'capability': 'tosca.capabilities.Container', 'relationship': 'org.alien4cloud.mock.ansible.relationships.AnsibleComponentHostedOnHost', 'occurrences': [1, 1]}}, {'mock_endpoint': {'capability': 'org.alien4cloud.mock.ansible.capabilities.AnsibleComponentEndpoint', 'relationship': 'org.alien4cloud.mock.ansible.relationships.AnsibleComponentConnectToComponent', 'occurrences': [0, 'unbounded']}}], 'interfaces': {'Standard': {'create': {'inputs': {'ANSIBLE_VERBOSE': False, 'PLAYBOOK_ENTRY': 'operation.yml', 'operation': 'create AnsibleMockComponent', 'duration': {'get_property': ['SELF', 'duration']}, 'variation': {'get_property': ['SELF', 'variation']}, 'weight': 50, 'log_length': {'get_property': ['SELF', 'log_length']}}, 'implementation': 'playbook/playbook.ansible'}, 'configure': {'inputs': {'ANSIBLE_VERBOSE': False, 'PLAYBOOK_ENTRY': 'operation.yml', 'operation': 'configure AnsibleMockComponent', 'duration': {'get_property': ['SELF', 'duration']}, 'variation': {'get_property': ['SELF', 'variation']}, 'weight': 30, 'log_length': {'get_property': ['SELF', 'log_length']}}, 'implementation': 'playbook/playbook.ansible'}, 'start': {'inputs': {'ANSIBLE_VERBOSE': False, 'PLAYBOOK_ENTRY': 'operation.yml', 'operation': 'start AnsibleMockComponent', 'duration': {'get_property': ['SELF', 'duration']}, 'variation': {'get_property': ['SELF', 'variation']}, 'weight': 20, 'log_length': {'get_property': ['SELF', 'log_length']}}, 'implementation': 'playbook/playbook.ansible'}}}}}",,82.0,0.0,0.0,57.0,0.0,119.0,5.42,0.0,0.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
104,"{'org.alien4cloud.demo.spark.streaming.nodes.SparkStreamingModule': {'derived_from': 'tosca.nodes.Root', 'abstract': True, 'metadata': {'icon': '/images/spark-streaming.png'}, 'properties': {'spark_url': {'type': 'string'}, 'hdfs_url': {'type': 'string'}, 'class_name': {'type': 'string'}, 'memory': {'type': 'integer'}, 'cores': {'type': 'integer'}, 'app_args': {'type': 'string'}}, 'artifacts': [{'jar_file': {'file': 'test.jar', 'type': 'tosca.artifacts.File'}}], 'capabilities': {'app_dependency': {'type': 'org.alien4cloud.demo.spark.streaming.capabilities.SparkStreamingModuleDependency'}}, 'requirements': [{'app_dependency': {'capability': 'org.alien4cloud.demo.spark.streaming.capabilities.SparkStreamingModuleDependency', 'relationship': 'org.alien4cloud.demo.spark.streaming.relationships.SparkStreamingModuleDependency', 'occurrences': [0, 1]}}], 'attributes': {'spark_submission_id': {'get_operation_output': ['SELF', 'Standard', 'start', 'SPARK_SUBMISSION_ID']}}, 'interfaces': {'Standard': {'configure': {'implementation': 'scripts/SparkStreamingHDFSCollector/configure.sh'}, 'stop': {'inputs': {'SPARK_URL': {'get_property': ['SELF', 'spark_url']}, 'SPARK_SUBMISSION_ID': {'get_attribute': ['SELF', 'spark_submission_id']}}, 'implementation': 'scripts/SparkStreamingModule/stop.sh'}, 'delete': {'inputs': {'HDFS_URL': {'get_property': ['SELF', 'hdfs_url']}}, 'implementation': 'scripts/SparkStreamingModule/delete.sh'}}}}}",,61.0,0.0,0.0,49.0,0.0,78.0,5.46,0.0,0.0,1.0,0.0,0.0,0.0,6.0,0.0,0.0,3.0
1669,"{'otc.nodes.SoftwareComponent.MongoDB': {'derived_from': 'tosca.nodes.SoftwareComponent', 'description': 'MongoDB component for linux', 'tags': {'icon': '/images/mongodb.jpg'}, 'attributes': {'url': {'concat': ['http://', {'get_attribute': ['HOST', 'public_ip_address']}, ':', {'get_property': ['SELF', 'port']}]}}, 'properties': {'component_version': {'type': 'version', 'description': 'Version of the installed MongoDB component', 'default': 3.6, 'constraints': [{'valid_values': [3.2, 3.4, 3.6]}]}, 'db_path': {'type': 'string', 'description': 'Path of the database', 'default': '/var/lib/mongo', 'required': True}, 'quota_enforced': {'type': 'boolean', 'description': 'Limits each database to a certain number of files', 'default': False, 'required': True}, 'quota_maxfiles': {'type': 'integer', 'description': 'Number of quota files per DB', 'default': 8, 'required': True}}, 'capabilities': {'mongo_db': {'type': 'tosca.capabilities.Endpoint.Database', 'properties': {'port': 27017}}}, 'interfaces': {'Standard': {'create': {'description': 'MongoDB installation step', 'inputs': {'IP_ADDRESS': {'get_attribute': ['HOST', 'private_address']}, 'MONGODB_VERSION': {'get_property': ['SELF', 'component_version']}, 'MONGODB_PORT': {'get_property': ['SELF', 'mongo_db', 'port']}, 'MONGODB_DB_PATH': {'get_property': ['SELF', 'db_path']}, 'MONGODB_QUOTA_ENFORCED': {'get_property': ['SELF', 'quota_enforced']}, 'MONGODB_QUOTA_MAXFILES': {'get_property': ['SELF', 'quota_maxfiles']}}, 'implementation': 'playbooks/mongodb_install.yaml'}}}}}",,77.0,0.0,0.0,55.0,0.0,125.0,6.01,0.0,0.0,1.0,0.0,0.0,0.0,5.0,0.0,0.0,0.0
915,{'cli_commands_test.nodes.node3': {'derived_from': 'tosca.nodes.SoftwareComponent'}},,2.0,0.0,0.0,2.0,0.0,3.0,1.58,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
1680,"{'tosca.nodes.sdno.e2dc': {'derived_from': 'tosca.nodes.sdno.networkService', 'description': 'it represents a non atomic network service', 'requirements': [{'dependency': 'tosca.nodes.sdno.networkService'}]}}",,5.0,0.0,0.0,5.0,0.0,14.0,3.66,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
336,"{'tosca.nodes.indigo.SparkMesos': {'derived_from': 'tosca.nodes.SoftwareComponent', 'metadata': {'icon': '/images/spark-mesos.png'}, 'properties': {'marathon_password': {'type': 'string', 'required': True}, 'zookeeper_peers': {'type': 'string', 'required': True}, 'spark_mesos_deploy_app': {'type': 'string', 'constraints': [{'valid_values': ['apache-zeppelin', 'spark-dispatcher']}], 'required': False}, 'spark_hdfs_uri': {'type': 'string', 'required': False, 'default': ''}, 'spark_swift_auth_url': {'type': 'string', 'required': False, 'default': ''}, 'spark_swift_http_port': {'type': 'string', 'required': False, 'default': '8080'}, 'spark_swift_region': {'type': 'string', 'required': False, 'default': ''}, 'spark_swift_tenant': {'type': 'string', 'required': False, 'default': ''}, 'spark_swift_username': {'type': 'string', 'required': False, 'default': ''}, 'spark_swift_password': {'type': 'string', 'required': False, 'default': ''}, 'spark_swift_provider': {'type': 'string', 'required': False, 'default': 'Test'}, 'spark_cores_max': {'type': 'integer', 'required': False, 'default': '-1'}, 'spark_executor_cores': {'type': 'integer', 'required': False, 'default': '-1'}, 'spark_executor_mem': {'type': 'scalar-unit.size', 'required': False, 'default': '0 GB'}, 'spark_driver_mem': {'type': 'scalar-unit.size', 'required': False, 'default': '0 GB'}, 'spark_driver_cores': {'type': 'integer', 'required': False, 'default': '-1'}}, 'artifacts': {'spark_mesos_role': {'file': 'indigo-dc.spark-mesos,master', 'type': 'tosca.artifacts.AnsibleGalaxy.role'}}, 'interfaces': {'Standard': {'create': {'implementation': 'https://raw.githubusercontent.com/indigo-dc/tosca-types/master/artifacts/mesos/spark_mesos_setup.yml', 'inputs': {'marathon_password': {'get_property': ['SELF', 'marathon_password']}, 'zookeeper_peers': {'get_property': ['SELF', 'zookeeper_peers']}, 'spark_mesos_deploy_app': {'get_property': ['SELF', 'spark_mesos_deploy_app']}, 'spark_hdfs_uri': {'get_property': ['SELF', 'spark_hdfs_uri']}, 'spark_swift_auth_url': {'get_property': ['SELF', 'spark_swift_auth_url']}, 'spark_mesos_swift_http_port': {'get_property': ['SELF', 'spark_swift_http_port']}, 'spark_mesos_swift_region': {'get_property': ['SELF', 'spark_swift_region']}, 'spark_mesos_swift_tenant': {'get_property': ['SELF', 'spark_swift_tenant']}, 'spark_mesos_swift_username': {'get_property': ['SELF', 'spark_swift_username']}, 'spark_mesos_swift_password': {'get_property': ['SELF', 'spark_swift_password']}, 'spark_mesos_swift_provider': {'get_property': ['SELF', 'spark_swift_provider']}, 'spark_mesos_cores_max': {'get_property': ['SELF', 'spark_cores_max']}, 'spark_mesos_executor_cores': {'get_property': ['SELF', 'spark_executor_cores']}, 'spark_mesos_executor_mem': {'get_property': ['SELF', 'spark_executor_mem']}, 'spark_mesos_driver_mem': {'get_property': ['SELF', 'spark_driver_mem']}, 'spark_mesos_driver_cores': {'get_property': ['SELF', 'spark_driver_cores']}}}}}, 'requirements': [{'host': {'capability': 'tosca.capabilities.indigo.MesosMaster', 'relationship': 'tosca.relationships.HostedOn', 'node': 'tosca.nodes.SoftwareComponent', 'occurrences': [1, 1]}}]}}",,151.0,0.0,0.0,115.0,0.0,206.0,5.34,0.0,0.0,1.0,0.0,0.0,0.0,16.0,0.0,0.0,0.0
1420,"{'aiorchestra.node': {'derived_from': 'tosca.test.node', 'properties': {'name': {'type': 'string'}, 'my_type': {'type': 'string', 'default': 'tosca.test.node'}}, 'attributes': {'name': {'type': 'string'}, 'my_type': {'type': 'string'}}, 'interfaces': {'Standard': {'type': 'tosca.interfaces.node.lifecycle.Standard', 'create': {'implementation': 'aiorchestra.tests.plugin:create', 'inputs': {'type': 'map'}}, 'start': {'implementation': 'aiorchestra.tests.plugin:is_not_coroutine', 'inputs': {'type': 'map'}}, 'stop': {'implementation': 'aiorchestra.tests.plugin:is_not_coroutine', 'inputs': {'type': 'map'}}, 'delete': {'implementation': 'aiorchestra.tests.plugin:is_not_coroutine', 'inputs': {'type': 'map'}}, 'configure': {'implementation': 'aiorchestra.tests.plugin:is_not_coroutine', 'inputs': {'type': 'map'}}}}}}",,36.0,0.0,0.0,36.0,0.0,53.0,4.03,0.0,0.0,1.0,0.0,0.0,0.0,2.0,0.0,0.0,0.0
569,"{'org.alien4cloud.http-proxy.pub.nodes.HttpProxy': {'derived_from': 'tosca.nodes.SoftwareComponent', 'abstract': True, 'description': 'The TOSCA Apache Node Type represents an apache component that can be managed and run by a TOSCA Compute Node Type.\n', 'attributes': {'apache_url': {'concat': [{'get_property': ['SELF', 'data_endpoint', 'protocol']}, '://', {'get_attribute': ['HOST', 'public_ip_address']}, ':', {'get_property': ['SELF', 'data_endpoint', 'port']}, '/']}}, 'capabilities': {'proxy_endpoint': 'org.alien4cloud.http-proxy.pub.capabilities.HttpProxyEndpoint'}}}",,24.0,0.0,0.0,12.0,0.0,47.0,5.34,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
1865,"{'aria.openstack.nodes.Subnet': {'derived_from': 'tosca.nodes.Root', 'properties': {'subnet': {'type': 'aria.openstack.datatypes.Subnet', 'required': False, 'default': {'cidr': '172.16.0.0/16'}}, 'use_external_resource': {'type': 'boolean', 'default': False, 'description': 'a boolean for setting whether to create the resource or use an existing one. See the using existing resources section.'}, 'create_if_missing': {'default': False, 'type': 'boolean', 'description': 'If use_external_resource is ``true`` and the resource is missing, create it instead of failing.'}, 'resource_id': {'default': '', 'type': 'string', 'description': ""name to give to the new resource or the name or ID of an existing resource when the ``use_external_resource`` property is set to ``true`` (see the using existing resources section). Defaults to '' (empty string).""}, 'openstack_config': {'type': 'aria.openstack.datatypes.Config', 'required': False}}, 'interfaces': {'Standard': {'create': {'implementation': 'cloudify-openstack-plugin > neutron_plugin.subnet.create', 'inputs': {'args': {'required': False, 'type': 'aria.openstack.datatypes.Subnet', 'default': {'cidr': '172.16.0.0/16'}}}}, 'delete': 'cloudify-openstack-plugin > neutron_plugin.subnet.delete'}, 'Validation': {'type': 'aria.openstack.interfaces.validation', 'creation': {'implementation': 'cloudify-openstack-plugin > neutron_plugin.subnet.creation_validation', 'inputs': {'args': {'type': 'aria.openstack.datatypes.Subnet', 'required': False, 'default': {'cidr': '172.16.0.0/16'}}}}}}, 'requirements': [{'router': {'capability': 'tosca.capabilities.Node', 'node': 'aria.openstack.nodes.Router', 'relationship': 'aria.openstack.subnet_connected_to_router', 'occurrences': [0, 'UNBOUNDED']}}, {'network': {'capability': 'tosca.capabilities.Node', 'node': 'aria.openstack.nodes.Network'}}], 'capabilities': {'subnet': {'type': 'tosca.capabilities.Node'}}}}",,62.0,0.0,0.0,56.0,0.0,161.0,6.13,0.0,0.0,2.0,0.0,0.0,0.0,5.0,0.0,0.0,0.0
159,"{'org.alien4cloud.sandbox.services.dummy.implem.nodes.DummyImplem': {'derived_from': 'org.alien4cloud.sandbox.services.dummy.pub.nodes.DummyService', 'description': 'A dummy service implem that do nothing', 'properties': {'my_service_property_1': {'type': 'string', 'required': True, 'default': 'A simple value'}, 'my_service_property_2': {'type': 'string', 'required': True, 'default': '/a/path/to/something'}}, 'attributes': {'host_uname': {'get_operation_output': ['SELF', 'Standard', 'create', 'HOST_UNAME']}}, 'interfaces': {'Standard': {'create': {'implementation': 'scripts/create.sh'}}}}}",,23.0,0.0,0.0,19.0,0.0,40.0,4.92,0.0,0.0,1.0,0.0,0.0,0.0,2.0,0.0,0.0,1.0
2025,"{'tosca.nodes.WebServer': {'metadata': {'shorthand_name': 'WebServer', 'type_qualified_name': 'tosca:WebServer', 'type_uri': 'tosca.nodes.WebServer'}, 'derived_from': 'tosca.nodes.SoftwareComponent', 'capabilities': {'data_endpoint': 'tosca.capabilities.Endpoint', 'admin_endpoint': 'tosca.capabilities.Endpoint.Admin', 'host': {'type': 'tosca.capabilities.Container', 'valid_source_types': ['tosca.nodes.WebApplication']}}}}",,13.0,0.0,0.0,12.0,0.0,20.0,4.22,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
2095,"{'sodalite.nodes.Tests.File.Owner': {'derived_from': 'sodalite.nodes.Tests.File', 'properties': {'owner': {'type': 'string', 'description': ""File's supposed owner""}, 'check_group': {'type': 'boolean', 'description': 'Determines whether the node checks for the user or the group', 'default': False}, 'check_id': {'type': 'boolean', 'description': 'Determines whether the node checks for the name or ID', 'default': False}}, 'interfaces': {'Standard': {'type': 'tosca.interfaces.node.lifecycle.Standard', 'operations': {'create': {'inputs': {'file_location': {'type': 'string', 'default': {'get_property': ['SELF', 'file_location']}}, 'follow': {'type': 'string', 'default': {'get_property': ['SELF', 'follow']}}, 'owner': {'type': 'string', 'default': {'get_property': ['SELF', 'owner']}}, 'check_group': {'type': 'boolean', 'default': {'get_property': ['SELF', 'check_group']}}, 'check_id': {'type': 'boolean', 'default': {'get_property': ['SELF', 'check_id']}}}, 'implementation': {'primary': 'file/owner.yaml'}}}}}}}",,52.0,0.0,0.0,42.0,0.0,89.0,4.91,0.0,5.0,1.0,0.0,0.0,0.0,3.0,0.0,0.0,0.0
1696,"{'tosca.nodes.indigo.GalaxyReferenceData': {'derived_from': 'tosca.nodes.WebApplication', 'properties': {'reference_data': {'type': 'boolean', 'description': 'Install Reference data', 'default': True, 'required': True}, 'flavor': {'type': 'string', 'description': 'name of the Galaxy flavor', 'required': True, 'default': 'galaxy-no-tools'}, 'refdata_repository_name': {'type': 'string', 'description': 'Onedata space name, CernVM-FS repository name or subdirectory downaload name', 'default': 'elixir-italy.galaxy.refdata', 'required': False}, 'refdata_provider_type': {'type': 'string', 'description': 'Select Reference data provider type (Onedata, CernVM-FS or download)', 'default': 'onedata', 'required': False}, 'refdata_provider': {'type': 'string', 'description': 'Oneprovider for reference data', 'default': 'not_a_provider', 'required': False}, 'refdata_token': {'type': 'string', 'description': 'Access token for reference data', 'default': 'not_a_token', 'required': False}, 'refdata_cvmfs_server_url': {'type': 'string', 'description': 'CernVM-FS server, replica or stratum-zero', 'default': 'server_url', 'required': False}, 'refdata_cvmfs_repository_name': {'type': 'string', 'description': 'Reference data CernVM-FS repository name', 'default': 'not_a_cvmfs_repository_name', 'requred': False}, 'refdata_cvmfs_key_file': {'type': 'string', 'description': 'CernVM-FS public key', 'default': 'not_a_key', 'required': False}, 'refdata_cvmfs_proxy_url': {'type': 'string', 'description': 'CernVM-FS proxy url', 'default': 'DIRECT', 'required': False}, 'refdata_cvmfs_proxy_port': {'type': 'integer', 'description': 'CernVM-FS proxy port', 'default': 80, 'required': False}}, 'requirements': [{'host': {'capability': 'tosca.capabilities.Container', 'node': 'tosca.nodes.indigo.GalaxyPortal', 'relationship': 'tosca.relationships.HostedOn'}}], 'artifacts': {'oneclient_role': {'file': 'indigo-dc.oneclient', 'type': 'tosca.artifacts.AnsibleGalaxy.role'}, 'cvmfs_role': {'file': 'indigo-dc.cvmfs-client', 'type': 'tosca.artifacts.AnsibleGalaxy.role'}, 'galaxy_role': {'file': 'indigo-dc.galaxycloud-refdata', 'type': 'tosca.artifacts.AnsibleGalaxy.role'}}, 'interfaces': {'Standard': {'configure': {'implementation': 'https://raw.githubusercontent.com/indigo-dc/tosca-types/master/artifacts/galaxy/galaxy_redfata_configure.yml', 'inputs': {'get_refdata': {'get_property': ['SELF', 'reference_data']}, 'galaxy_flavor': {'get_property': ['SELF', 'flavor']}, 'refdata_repository_name': {'get_property': ['SELF', 'refdata_repository_name']}, 'refdata_provider_type': {'get_property': ['SELF', 'refdata_provider_type']}, 'refdata_provider': {'get_property': ['SELF', 'refdata_provider']}, 'refdata_token': {'get_property': ['SELF', 'refdata_token']}, 'refdata_cvmfs_server_url': {'get_property': ['SELF', 'refdata_cvmfs_server_url']}, 'refdata_cvmfs_repository_name': {'get_property': ['SELF', 'refdata_cvmfs_repository_name']}, 'refdata_cvmfs_key_file': {'get_property': ['SELF', 'refdata_cvmfs_key_file']}, 'refdata_cvmfs_proxy_url': {'get_property': ['SELF', 'refdata_cvmfs_proxy_url']}, 'refdata_cvmfs_proxy_port': {'get_property': ['SELF', 'refdata_cvmfs_proxy_port']}}}}}}}",,123.0,0.0,0.0,100.0,0.0,221.0,5.88,0.0,0.0,1.0,0.0,0.0,0.0,11.0,0.0,0.0,0.0
1156,"{'alien.test.MyRequirementsListCapabilities': {'derived_from': 'tosca.nodes.SoftwareComponent', 'capabilities': [{'host': 'tosca.capabilities.Container'}, {'endpoint': {'type': 'tosca.capabilities.Endpoint', 'description': 'this is a capability'}}], 'requirements': [{'host': 'tosca.capabilities.Container'}, {'endpoint': 'tosca.capabilities.Endpoint', 'relationship': 'tosca.relationships.ConnectsTo', 'occurrences': [0, 'unbounded']}, {'another_endpoint': {'type': 'tosca.capabilities.Endpoint', 'relationship': 'tosca.relationships.ConnectsTo', 'occurrences': [0, 'unbounded']}}]}}",,20.0,0.0,0.0,16.0,0.0,32.0,4.29,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
2700,"{'org.ystia.beats.linux.bash.relationships.ConnectsBeatToLS': {'derived_from': 'org.ystia.relationships.ConnectsTo', 'description': 'Connects Beat to Logstash\n', 'valid_target_types': ['org.ystia.logstash.pub.capabilities.LogstashEndpoint'], 'interfaces': {'Configure': {'post_configure_source': {'inputs': {'TARGET_IP_ADDRESS': {'get_attribute': ['TARGET', 'ip_address']}}, 'implementation': 'relationships/logstash/beat_to_logstash_post_configure_source.sh'}}}, 'artifacts': [{'rsscripts': {'file': 'relationships/logstash', 'type': 'tosca.artifacts.File'}}]}}",,18.0,0.0,0.0,15.0,0.0,26.0,4.7,0.0,0.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,1.0
2431,"{'mycompany.mytypes.myCustomConnectionType': {'derived_from': 'tosca.relationships.ConnectsTo', 'properties': None}}",,3.0,0.0,0.0,3.0,0.0,5.0,2.32,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
2277,"{'tosca.nodes.indigo.OphidiaIO': {'derived_from': 'tosca.nodes.SoftwareComponent', 'properties': {'server_ip': {'type': 'string', 'description': 'IP of the OphidiaServer node', 'required': True}}, 'artifacts': {'ophidia_role': {'file': 'indigo-dc.ophidia-cluster', 'type': 'tosca.artifacts.AnsibleGalaxy.role'}, 'slurm_role': {'file': 'indigo-dc.slurm', 'type': 'tosca.artifacts.AnsibleGalaxy.role'}, 'nfs_role': {'file': 'indigo-dc.nfs', 'type': 'tosca.artifacts.AnsibleGalaxy.role'}}, 'interfaces': {'Standard': {'configure': {'implementation': 'https://raw.githubusercontent.com/indigo-dc/tosca-types/dodas_roll/artifacts/ophidia/ophidia_io_install.yml', 'inputs': {'ophidia_server_ip': {'get_property': ['SELF', 'server_ip']}}}}}}}",,26.0,0.0,0.0,24.0,0.0,41.0,4.88,0.0,0.0,1.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0
2483,"{'org.alien4cloud.diamond.collectors.relationships.DiamondCloudifyCollector': {'derived_from': 'tosca.relationships.ConnectsTo', 'valid_target_types': ['org.alien4cloud.cloudify.manager.pub.capabilities.CloudifyMonitorEndpoint'], 'properties': {'collector_name': {'type': 'string', 'default': 'CloudifyCollector'}}, 'interfaces': {'Configure': {'pre_configure_source': {'inputs': {'ANSIBLE_VERBOSE': False, 'PLAYBOOK_ENTRY': 'collect_custom.yml', 'datasource_name': {'get_attribute': ['SOURCE', 'datasource_name']}, 'collectors_conf_path': {'get_attribute': ['SOURCE', 'collectors_conf_path']}, 'dashboard_dir': {'get_attribute': ['SOURCE', 'dashboard_dir']}, 'collector_name': {'get_property': ['SELF', 'collector_name']}}, 'implementation': 'playbook/playbook.ansible'}, 'pre_configure_target': {'inputs': {'ANSIBLE_VERBOSE': False, 'PLAYBOOK_ENTRY': 'install_custom_collector.yml', 'collectors_path': {'get_attribute': ['SOURCE', 'collectors_path']}, 'collector_name': {'get_property': ['SELF', 'collector_name']}}, 'implementation': 'playbook/playbook.ansible'}}}}}",,44.0,0.0,0.0,31.0,0.0,53.0,4.75,0.0,0.0,1.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0
1575,"{'org.ystia.monitoring.service.impl.Graphite': {'derived_from': 'org.ystia.monitoring.service.pub.MonitoringService', 'metadata': {'icon': '/images/graphite.png'}, 'attributes': {'web_ui_url': {'concat': ['http://', {'get_attribute': ['SELF', 'http_endpoint', 'ip_address']}, ':', {'get_attribute': ['SELF', 'http_endpoint', 'port']}]}}, 'capabilities': {'http_endpoint': {'type': 'org.ystia.monitoring.service.impl.GraphiteHttpEndpoint', 'description': 'Endpoint to Graphite Web UI'}, 'data_collection': {'type': 'org.ystia.monitoring.service.impl.GraphiteDataCollectionEndpoint', 'description': 'Endpoint to collect data'}}, 'interfaces': {'Standard': {'start': {'implementation': {'file': 'sitespeedio/graphite:1.0.2-2-b', 'repository': 'docker', 'type': 'tosca.artifacts.Deployment.Image.Container.Docker'}}}}}}",,31.0,0.0,0.0,23.0,0.0,47.0,5.14,0.0,0.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
1560,"{'toscaruntime.test.nodes.BadFunction': {'derived_from': 'tosca.nodes.Root', 'properties': {'good_prop': {'type': 'string'}, 'bad_prop': {'type': 'string'}}, 'attributes': {'a_bad_one': {'get_attribute': ['SOURCE', 'bad_prop']}}, 'interfaces': {'Standard': {'create': {'inputs': {'bad_input': {'get_property': ['TARGET', 'bad_prop']}, 'composite_bad_input': {'concat': [{'get_attribute': ['SELF', 'a']}, {'get_attribute': ['SOURCE', 'b']}, {'get_property': ['HOST', 'c']}, {'get_property': ['TARGET', 'd']}]}}}}}}}",,34.0,0.0,0.0,22.0,0.0,37.0,4.61,0.0,0.0,1.0,0.0,0.0,0.0,2.0,0.0,0.0,0.0
252,"{'tosca.capabilities.custom.Endpoint': {'derived_from': 'tosca.capabilities.Endpoint', 'attributes': {'credential': {'type': 'tosca.datatypes.Credential'}}}}",,5.0,0.0,0.0,5.0,0.0,7.0,2.81,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
144,"{'org.alien4cloud.storage.elasticsearch.ansible.nodes.ElasticSearch': {'derived_from': 'org.alien4cloud.storage.elasticsearch.pub.nodes.ElasticSearchService', 'description': 'Installation of an ElasticSearch with an UI to browse it !.\n', 'tags': {'icon': 'images/elasticsearch.png'}, 'properties': {'component_version': {'description': 'The version of Elasticsearch', 'type': 'version', 'default': '1.7.0', 'constraints': [{'valid_values': ['1.7.0']}]}, 'elasticsearch_url': {'type': 'string', 'required': True, 'default': 'https://download.elastic.co/elasticsearch/elasticsearch/elasticsearch-1.7.0.deb'}, 'cluster_name': {'description': 'The name of the ElasticSearch cluster.', 'type': 'string', 'required': True, 'default': 'escluster'}}, 'interfaces': {'Standard': {'create': {'inputs': {'APPLICATION_URL': {'get_property': ['SELF', 'elasticsearch_url']}}, 'implementation': 'scripts/elasticsearch/install_elasticsearch.sh'}, 'configure': {'inputs': {'ES_IP': {'get_attribute': ['HOST', 'ip_address']}, 'CLUSTER_NAME': {'get_property': ['SELF', 'cluster_name']}, 'HTTP_PORT': {'get_property': ['SELF', 'http', 'port']}}, 'implementation': 'scripts/elasticsearch/configure_elasticsearch.sh'}, 'start': {'implementation': 'scripts/elasticsearch/start_elasticsearch.sh'}}}, 'artifacts': [{'configs': {'file': 'config/elasticsearch', 'type': 'tosca.artifacts.File'}}, {'commons': {'file': 'scripts/commons', 'type': 'tosca.artifacts.File'}}]}}",,56.0,0.0,0.0,46.0,0.0,94.0,5.85,0.0,0.0,1.0,0.0,0.0,0.0,3.0,0.0,0.0,3.0
1110,"{'alien.test.nodes.Application': {'derived_from': 'tosca.nodes.Root', 'requirements': [{'server': {'capability': 'alien.test.capabilities.AppServer', 'relationship': 'alien.test.relationships.HostedOnAppServer', 'occurrences': [1, 1]}}]}}",,9.0,0.0,0.0,7.0,0.0,12.0,3.42,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
761,"{'tosca.nodes.Root': {'metadata': {'puccini.normative': 'true', 'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.2]', 'specification.location': '5.9.1'}, 'description': 'The TOSCA Root Node Type is the default type that all other TOSCA base Node Types derive from. This allows for all TOSCA nodes to have a consistent set of features for modeling and management (e.g., consistent definitions for requirements, capabilities and lifecycle interfaces).', 'attributes': {'tosca_id': {'description': 'A unique identifier of the realized instance of a Node Template that derives from any TOSCA normative type.', 'type': 'string'}, 'tosca_name': {'description': 'This attribute reflects the name of the Node Template as defined in the TOSCA service template. This name is not unique to the realized instance model of corresponding deployed application as each template in the model can result in one or more instances (e.g., scaled) when orchestrated to a provider environment.', 'type': 'string'}, 'state': {'description': 'The state of the node instance.', 'type': 'string', 'default': 'initial'}}, 'interfaces': {'Standard': {'type': 'tosca.interfaces.node.lifecycle.Standard'}}, 'capabilities': {'feature': {'type': 'tosca.capabilities.Node'}}, 'requirements': [{'dependency': {'capability': 'tosca.capabilities.Node', 'node': 'tosca.nodes.Root', 'relationship': 'tosca.relationships.DependsOn', 'occurrences': [0, 'UNBOUNDED']}}]}}",,39.0,0.0,0.0,29.0,0.0,162.0,6.41,0.0,0.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
1005,{'org.alien4cloud.test.duplicate.SimpleType': {'derived_from': 'tosca.nodes.Root'}},,2.0,0.0,0.0,2.0,0.0,3.0,1.58,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
853,"{'yorc.type.TypeWithEndpointCap': {'derived_from': 'tosca.nodes.SoftwareComponent', 'attributes': {'myepip': {'get_attribute': ['SELF', 'myep', 'ip_address']}, 'myepattr': {'get_attribute': ['SELF', 'myep', 'attr2']}}, 'capabilities': {'myep': 'yorc.test.capabilities.MyEndpoint'}}}",,15.0,0.0,0.0,9.0,0.0,17.0,3.57,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
641,"{'radon.nodes.datapipeline.DestinationPB': {'derived_from': 'radon.nodes.datapipeline.PipelineBlock', 'metadata': {'targetNamespace': 'radon.nodes.datapipeline', 'abstract': 'true', 'final': 'false'}, 'capabilities': {'ConnectToPipeline': {'occurrences': [1, 1], 'valid_source_types': ['radon.nodes.datapipeline.MidwayPB', 'radon.nodes.datapipeline.SourcePB'], 'type': 'radon.capabilities.datapipeline.ConnectToPipeline'}}}}",,15.0,0.0,0.0,11.0,0.0,20.0,4.22,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
2468,"{'org.alien4cloud.alien4cloud.webapp.relationships.AlienConnectToElasticSearch': {'derived_from': 'tosca.relationships.ConnectsTo', 'valid_target_types': ['org.alien4cloud.elasticsearch.pub.capabilities.ElasticSearchTransportAPI'], 'interfaces': {'Configure': {'pre_configure_source': {'inputs': {'ES_IP': {'get_attribute': ['TARGET', 'ip_address']}, 'ES_PORT': {'get_property': ['TARGET', 'elasticsearch', 'port']}, 'CLUSTER_NAME': {'get_property': ['TARGET', 'cluster_name']}}, 'implementation': 'scripts/elasticsearch/ConnectToElasticSearch/pre_configure_source.sh'}}}, 'artifacts': [{'commons': {'file': 'scripts/commons', 'type': 'tosca.artifacts.File'}}]}}",,26.0,0.0,0.0,18.0,0.0,30.0,4.68,0.0,0.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,1.0
933,"{'tosca.nodes.Compute': {'derived_from': 'tosca.nodes.Abstract.Compute', 'attributes': {'private_address': {'type': 'string'}, 'public_address': {'type': 'string'}, 'networks': {'type': 'map', 'entry_schema': {'type': 'tosca.datatypes.network.NetworkInfo'}}, 'ports': {'type': 'map', 'entry_schema': {'type': 'tosca.datatypes.network.PortInfo'}}}, 'requirements': [{'local_storage': {'capability': 'tosca.capabilities.Attachment', 'node': 'tosca.nodes.Storage.BlockStorage', 'relationship': 'tosca.relationships.AttachesTo', 'occurrences': [0, 'UNBOUNDED']}}], 'capabilities': {'host': {'type': 'tosca.capabilities.Compute', 'valid_source_types': ['tosca.nodes.SoftwareComponent']}, 'endpoint': {'type': 'tosca.capabilities.Endpoint.Admin'}, 'os': {'type': 'tosca.capabilities.OperatingSystem'}, 'scalable': {'type': 'tosca.capabilities.Scalable'}, 'binding': {'type': 'tosca.capabilities.network.Bindable'}}}}",,36.0,0.0,0.0,33.0,0.0,51.0,4.81,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
1826,"{'tosca.nodes.nfv.CP': {'derived_from': 'tosca.nodes.Root', 'properties': {'type': {'type': 'string', 'required': False}}, 'requirements': [{'virtualLink': {'capability': 'tosca.capabilities.nfv.VirtualLinkable'}}, {'virtualbinding': {'capability': 'tosca.capabilities.nfv.VirtualBindable'}}], 'attributes': {'IP_address': {'type': 'string'}}}}",,14.0,0.0,0.0,14.0,0.0,20.0,3.88,0.0,0.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0
1123,"{'tosca.nodes.RDBMS': {'abstract': True, 'derived_from': 'tosca.nodes.SoftwareComponent', 'description': 'The TOSCA RDBMS Node Type represents a generic relational database. It should be inherited to define an actual Database (Such as MySQL) and lifecycle implementation.\n', 'tags': {'icon': '/images/relanode_filtertional_db.png'}}}",,8.0,0.0,0.0,6.0,0.0,34.0,5.09,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
2608,"{'test.relationships.DependsOn': {'valid_sources': ['test.requirements.Feature'], 'valid_targets': ['test.capabilities.Feature']}}",,5.0,0.0,0.0,3.0,0.0,5.0,2.32,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
1649,"{'org.alien4cloud.kubernetes.api.types.Job': {'tags': {'icon': '/images/kubernetes.Job.png'}, 'derived_from': 'org.alien4cloud.kubernetes.api.types.AbstractJob'}}",,4.0,0.0,0.0,4.0,0.0,6.0,2.58,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
1437,"{'yorc.nodes.aws.Image': {'abstract': True, 'derived_from': 'tosca.nodes.Root', 'description': 'AWS location configuration type that represents an amazon image (ami).', 'properties': {'id': {'type': 'string'}}, 'capabilities': {'os': {'type': 'tosca.capabilities.OperatingSystem'}}}}",,10.0,0.0,0.0,10.0,0.0,24.0,4.39,0.0,0.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0
26,"{'tosca.nodes.BlockStorage': {'derived_from': 'tosca.nodes.Root', 'properties': {'size': {'type': 'scalar-unit.size', 'constraints': [{'greater_or_equal': '1 MB'}]}, 'volume_id': {'type': 'string', 'required': False}, 'snapshot_id': {'type': 'string', 'required': False}}, 'attributes': {'volume_id': {'type': 'string'}}, 'capabilities': {'attachment': {'type': 'tosca.capabilities.Attachment'}}}}",,19.0,0.0,0.0,19.0,0.0,29.0,4.09,0.0,0.0,0.0,0.0,0.0,0.0,3.0,0.0,0.0,0.0
235,"{'org.alien4cloud.www.apache.linux_ans.nodes.Apache': {'derived_from': 'org.alien4cloud.www.apache.pub.nodes.Apache', 'description': 'The TOSCA Apache Node Type represents an apache component that can be managed and run by a TOSCA Compute Node Type. This version is installed by using Ansible.\n', 'properties': {'document_root': {'type': 'string', 'default': '/var/www/html'}}, 'requirements': [{'host': {'capability': 'tosca.capabilities.Container', 'node': 'tosca.nodes.Compute', 'relationship': 'tosca.relationships.HostedOn', 'occurrences': [1, 1], 'node_filter': {'capabilities': [{'tosca.capabilities.OperatingSystem': {'properties': [{'type': {'equal': 'linux'}}, {'architecture': {'equal': 'x86_64'}}, {'distribution': {'valid_values': ['red hat', 'centos', 'rhel', 'debian', 'ubuntu']}}]}}]}}}], 'interfaces': {'Standard': {'create': {'inputs': {'ANSIBLE_VERBOSE': False, 'PLAYBOOK_ENTRY': 'create.yml'}, 'implementation': 'playbook/playbook.ansible'}, 'configure': {'inputs': {'port': {'get_property': ['SELF', 'data_endpoint', 'port']}, 'document_root': {'get_property': ['SELF', 'document_root']}, 'ANSIBLE_VERBOSE': False, 'PLAYBOOK_ENTRY': 'configure.yml'}, 'implementation': 'playbook/playbook.ansible'}, 'start': {'inputs': {'ANSIBLE_VERBOSE': False, 'PLAYBOOK_ENTRY': 'start.yml'}, 'implementation': 'playbook/playbook.ansible'}, 'stop': {'inputs': {'ANSIBLE_VERBOSE': False, 'PLAYBOOK_ENTRY': 'stop.yml'}, 'implementation': 'playbook/playbook.ansible'}, 'delete': {'inputs': {'port': {'get_property': ['SELF', 'data_endpoint', 'port']}, 'document_root': {'get_property': ['SELF', 'document_root']}, 'ANSIBLE_VERBOSE': False, 'PLAYBOOK_ENTRY': 'delete.yml'}, 'implementation': 'playbook/playbook.ansible'}}}}}",,77.0,0.0,0.0,58.0,0.0,127.0,6.03,0.0,0.0,1.0,0.0,0.0,0.0,4.0,0.0,0.0,0.0
476,"{'tosca.nodes.MiCADO.Container.Config.ConfigMap': {'description': 'base type for Config files', 'derived_from': 'tosca.nodes.MiCADO.Container.Config', 'properties': {'data': {'type': 'map', 'description': 'data', 'required': False}, 'binaryData': {'type': 'map', 'description': 'datab', 'required': False}}, 'capabilities': {'volume': {'type': 'tosca.capabilities.Attachment'}}, 'interfaces': {'Kubernetes': {'type': 'tosca.interfaces.MiCADO.Kubernetes', 'create': {'inputs': {'data': {'get_property': ['SELF', 'data']}, 'binaryData': {'get_property': ['SELF', 'binaryData']}}}}}}}",,28.0,0.0,0.0,24.0,0.0,42.0,4.46,0.0,0.0,1.0,0.0,0.0,0.0,2.0,0.0,0.0,0.0
482,"{'tosca.nodes.MiCADO.CloudSigma.Compute.Occo.small': {'description': 'Basic CloudSigma VM (2GHz/2GB) for MiCADO, by Occopus', 'derived_from': 'tosca.nodes.MiCADO.CloudSigma.Compute.Occo', 'properties': {'num_cpus': {'type': 'integer', 'default': 2000, 'required': True}, 'mem_size': {'type': 'integer', 'default': 2147483648, 'required': True}}, 'interfaces': {'Occopus': {'type': 'tosca.interfaces.MiCADO.Occopus', 'create': {'inputs': {'endpoint': {'get_property': ['SELF', 'endpoint']}}}}}}}",,21.0,0.0,0.0,19.0,0.0,37.0,4.76,0.0,0.0,1.0,0.0,0.0,0.0,2.0,0.0,0.0,0.0
1276,"{'tosca.nodes.network.Port': {'derived_from': 'tosca.nodes.Root', 'properties': {'ip_address': {'type': 'string', 'required': False}, 'order': {'type': 'integer', 'required': True, 'default': 0, 'constraints': [{'greater_or_equal': 0}]}, 'is_default': {'type': 'boolean', 'required': False, 'default': False}, 'ip_range_start': {'type': 'string', 'required': False}, 'ip_range_end': {'type': 'string', 'required': False}}, 'requirements': [{'link': {'capability': 'tosca.capabilities.network.Linkable', 'relationship': 'tosca.relationships.network.LinksTo'}}, {'binding': {'capability': 'tosca.capabilities.network.Bindable', 'relationship': 'tosca.relationships.network.BindsTo'}}]}}",,29.0,0.0,0.0,29.0,0.0,47.0,4.54,0.0,0.0,0.0,0.0,0.0,0.0,5.0,0.0,0.0,0.0
2254,"{'tosca.nodes.indigo.Container.Application.Docker': {'derived_from': 'tosca.nodes.Container.Application.Docker', 'properties': {'command': {'required': False, 'type': 'string'}, 'uris': {'required': False, 'type': 'list', 'entry_schema': {'type': 'string'}}, 'environment_variables': {'required': False, 'type': 'map', 'entry_schema': {'type': 'string'}}, 'constraints': {'required': False, 'type': 'list', 'entry_schema': {'type': 'list', 'entry_schema': {'type': 'string'}}}, 'labels': {'required': False, 'type': 'map', 'entry_schema': {'type': 'string'}}, 'priviliged': {'required': False, 'type': 'boolean', 'default': False}, 'force_pull_image': {'required': False, 'type': 'boolean', 'default': False}}}}",,36.0,0.0,0.0,36.0,0.0,58.0,3.7,0.0,0.0,0.0,0.0,0.0,0.0,7.0,0.0,0.0,0.0
502,"{'org.alien4cloud.spark.linux_sh.nodes.SparkMaster': {'derived_from': 'org.alien4cloud.spark.linux_sh.nodes.SparkNode', 'capabilities': {'spark_master': {'type': 'org.alien4cloud.spark.pub.capabilities.SparkMaster'}, 'spark_rest': {'type': 'org.alien4cloud.spark.pub.capabilities.SparkREST'}, 'spark_ui': {'type': 'org.alien4cloud.spark.pub.capabilities.SparkMasterUI'}}, 'attributes': {'spark_ui': {'concat': [{'get_attribute': ['SELF', 'spark_ui', 'protocol']}, '://', {'get_attribute': ['SELF', 'public_ip_address']}, ':', {'get_attribute': ['SELF', 'spark_ui', 'port']}]}, 'spark_rest_port': {'get_attribute': ['SELF', 'spark_rest', 'port']}}, 'interfaces': {'Standard': {'start': {'inputs': {'SPARK_INSTALL_DIR': {'get_property': ['SELF', 'install_dir']}, 'SPARK_MASTER_ADDRESS': {'get_attribute': ['HOST', 'ip_address']}, 'SPARK_UI_PORT': {'get_property': ['SELF', 'spark_ui', 'port']}, 'SPARK_MASTER_PORT': {'get_property': ['SELF', 'spark_master', 'port']}, 'SPARK_MASTER_REST_PORT': {'get_property': ['SELF', 'spark_rest', 'port']}}, 'implementation': 'scripts/start_master.sh'}}}}}",,58.0,0.0,0.0,32.0,0.0,63.0,4.73,0.0,0.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,1.0
1249,"{'openstack.nodes.Nova': {'derived_from': 'openstack.nodes.Project_Requiring_MariaDB_and_Keystone', 'capabilities': {'nova': {'description': 'Nova capability', 'type': 'openstack.capabilities.Endpoint.Nova'}}}}",,6.0,0.0,0.0,6.0,0.0,10.0,3.32,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
327,"{'tosca.nodes.indigo.Container.Application.Docker.Marathon': {'derived_from': 'tosca.nodes.indigo.Container.Application.Docker', 'metadata': {'icon': '/images/marathon.png'}, 'attributes': {'load_balancer_ips': {'type': 'list', 'entry_schema': 'string'}}, 'properties': {'force_pull_image': {'required': False, 'type': 'boolean', 'default': True}, 'enable_https': {'required': False, 'type': 'boolean', 'default': False}}, 'artifacts': {'image': {'file': '', 'type': 'tosca.artifacts.Deployment.Image.Container.Docker'}}}}",,21.0,0.0,0.0,21.0,0.0,33.0,4.48,0.0,0.0,0.0,0.0,0.0,0.0,2.0,0.0,0.0,0.0
245,"{'my.nodes.ScalableContainer': {'derived_from': 'my.nodes.Container.Application.Docker', 'description': 'represents scalable containerized application.', 'capabilities': {'scalable': 'tosca.capabilities.Scalable'}, 'requirements': [{'endpoint': 'tosca.capabilities.Endpoint', 'type': 'tosca.relationships.ConnectsTo', 'lower_bound': 0, 'upper_bound': 'UNBOUNDED'}], 'properties': {'appname': {'description': 'Application name', 'type': 'string', 'required': True}, 'appinstance': {'description': 'Lifecycle', 'type': 'string', 'required': True}, 'image_name': {'description': 'Docker image name', 'type': 'string', 'required': True}, 'image_tag': {'description': 'Docker image tag', 'type': 'string', 'required': True}, 'avail_zone': {'description': 'DC Region', 'type': 'string', 'required': True}}, 'interfaces': {'Standard': {'create': {'implementation': 'scripts/kube-create.sh', 'inputs': {'image_name': {'type': 'string'}}}, 'configure': 'scripts/kube-configure.sh', 'start': 'scripts/kube-start.sh', 'stop': 'scripts/kube-stop.sh', 'delete': 'scripts/kube-delete.sh'}}}}",,42.0,0.0,0.0,42.0,0.0,79.0,5.24,0.0,0.0,1.0,0.0,0.0,0.0,5.0,0.0,0.0,5.0
1004,"{'fastconnect.nodes.apacheLBGroovy': {'derived_from': 'fastconnect.nodes.apacheLB', 'description': 'Installation of apacheLB using Cloudify scripts\n', 'properties': {'version': {'type': 'version', 'default': 2, 'constraints': [{'equal': 2}]}}, 'interfaces': {'lifecycle': {'create': 'scripts/apacheLB_installCalm.groovy', 'start': 'scripts/apacheLB_start.groovy', 'stop': 'scripts/apacheLB_stop.groovy', 'delete': 'scripts/apacheLB_uninstall.groovy'}, 'monitor': {'locator': 'scripts/monitor/locator.groovy', 'startDetection': 'scripts/monitor/startDetection.groovy'}, 'custom': {'addNode': {'inputs': {'instanceId': {'type': 'string', 'required': True}, 'node': {'type': 'string', 'required': True}}, 'implementation': 'scripts/apacheLB_addNode.groovy'}, 'removeNode': 'scripts/apacheLB_removeNode.groovy', 'deployPublic': {'inputs': {'publicUrl': {'type': 'string', 'required': True}}}, 'updateWar': {'inputs': {'warUrl': {'type': 'string', 'required': True}, 'countSlave': {'type': 'integer', 'required': False}, 'tresholdRate': {'type': 'float', 'required': True}}, 'implementation': 'scripts/updateWarUrl.groovy'}, 'updateWarFile': 'scripts/updateWarFile.groovy'}}, 'requirements': [{'httpEndpoint': {'capability': 'calm.capabilities.HttpEndpoint', 'occurrences': [0, 'unbounded']}}], 'artifacts': [{'scripts': {'file': 'scripts', 'type': 'fastconnect.artifacts.ResourceDirectory'}}]}}",,57.0,0.0,0.0,55.0,0.0,92.0,5.74,0.0,0.0,3.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0
1911,{'tosca.nodes.TMForum.Models.SIDModels.ResourceDomain.ResourceABE.CompoundResourceABE.CompoundResource': {'derived_from': 'tosca.nodes.TMForum.Models.SIDModels.ResourceDomain.ResourceABE.CompoundResourceABE'}},,2.0,0.0,0.0,2.0,0.0,3.0,1.58,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
1300,"{'org.ystia.kubernetes.pub.nodes.KubernetesWorker': {'abstract': True, 'derived_from': 'tosca.nodes.Root', 'tags': {'icon': '/images/kubernetes-worker-icon.png'}, 'description': 'A KubernetesWorker contains Kubernetes services used to run pods.\n', 'requirements': [{'api_server': {'capability': 'org.ystia.kubernetes.pub.capabilities.KubernetesAPIServer', 'node': 'org.ystia.kubernetes.pub.nodes.KubernetesMaster', 'occurrences': [1, 1]}}]}}",,13.0,0.0,0.0,11.0,0.0,27.0,4.68,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
1984,"{'org.lexis.nodes.DownloadGEOGData': {'derived_from': 'tosca.nodes.SoftwareComponent', 'properties': {'output_directory': {'type': 'string', 'description': 'Absolute path to directory where to store donwloaded data'}}, 'interfaces': {'Standard': {'create': {'implementation': 'playbooks/noop.yaml'}}, 'custom': {'download': {'inputs': {'OUTPUT_DIRECTORY': {'get_property': ['SELF', 'output_directory']}}, 'implementation': 'playbooks/download_geog.yaml'}}}, 'tags': {'icon': '/images/GEOG.png'}}}",,20.0,0.0,0.0,18.0,0.0,34.0,4.91,0.0,0.0,2.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0
706,"{'tosca.nodes.BlockStorage': {'metadata': {'puccini.normative': 'true', 'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.0]', 'specification.location': '5.8.9'}, 'description': '', 'derived_from': 'tosca.nodes.Root', 'properties': {'size': {'description': 'The requested storage size (default unit is MB).', 'type': 'scalar-unit.size', 'constraints': [{'greater_or_equal': '1 MB'}]}, 'volume_id': {'description': 'ID of an existing volume (that is in the accessible scope of the requesting application).', 'type': 'string', 'required': False}, 'snapshot_id': {'description': 'Some identifier that represents an existing snapshot that should be used when creating the block storage (volume).', 'type': 'string', 'required': False}}, 'capabilities': {'attachment': {'type': 'tosca.capabilities.Attachment'}}}}",,26.0,0.0,0.0,24.0,0.0,77.0,5.74,0.0,0.0,0.0,0.0,0.0,0.0,3.0,0.0,0.0,0.0
908,"{'tosker.nodes.Software': {'derived_from': 'tosker.nodes.Root', 'requirements': [{'connection': {'capability': 'tosca.capabilities.Endpoint', 'occurrences': [0, 'UNBOUNDED'], 'node': 'tosker.nodes.Root', 'relationship': 'tosca.relationships.ConnectsTo'}}, {'dependency': {'capability': 'tosca.capabilities.Node', 'occurrences': [0, 'UNBOUNDED'], 'node': 'tosker.nodes.Root', 'relationship': 'tosca.relationships.DependsOn'}}, {'host': {'capability': 'tosca.capabilities.Container', 'occurrences': 1, 'node': 'tosker.nodes.Container', 'relationship': 'tosca.relationships.HostedOn'}}], 'capabilities': {'endpoint': {'type': 'tosca.capabilities.Endpoint', 'valid_source_types': ['tosker.nodes.Software', 'tosker.nodes.Container'], 'occurrences': [0, 'UNBOUNDED']}, 'feature': {'type': 'tosca.capabilities.Node', 'valid_source_types': ['tosker.nodes.Software', 'tosker.nodes.Container'], 'occurrences': [0, 'UNBOUNDED']}, 'host': {'type': 'tosca.capabilities.Container', 'valid_source_types': ['tosker.nodes.Software'], 'occurrences': [0, 'UNBOUNDED']}}}}",,46.0,0.0,0.0,31.0,0.0,60.0,4.44,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
1014,"{'alien.nodes.Apache': {'derived_from': 'tosca.nodes.WebServer', 'description': 'The TOSCA Apache Node Type represents an apache component that can be managed and run by a TOSCA Compute Node Type.\n', 'capabilities': {'host': {'type': 'alien.capabilities.ApacheContainer', 'properties': {'valid_node_types': 'tosca.nodes.WebApplication'}}}, 'properties': {'version': {'type': 'version', 'default': 2.4, 'constraints': [{'equal': 2.4}]}, 'port': {'type': 'integer', 'description': 'Port for the Apache server', 'default': 80, 'constraints': [{'greater_or_equal': 1}]}, 'document_root': {'type': 'string', 'required': True, 'default': '/var/www'}}, 'interfaces': {'Standard': {'create': {'inputs': {'PORT': {'get_property': ['SELF', 'port']}, 'DOC_ROOT': {'get_property': ['SELF', 'document_root']}}, 'implementation': 'scripts/install_apache.sh'}, 'start': 'scripts/start_apache.sh'}, 'fastconnect.cloudify.extensions': {'start_detection': {'inputs': {'PORT': {'get_property': ['SELF', 'port']}}, 'implementation': 'scripts/apache_start_detection.groovy'}}}}}",,47.0,0.0,0.0,40.0,0.0,87.0,5.86,0.0,0.0,2.0,0.0,0.0,0.0,4.0,0.0,0.0,2.0
2413,"{'org.alien4cloud.relationships.NodecellarHostedOnNodejs': {'derived_from': 'tosca.relationships.HostedOn', 'description': 'Relationship use to describe that the website is deployed on the target nodejs server.', 'valid_target_types': ['tosca.capabilities.Container']}}",,6.0,0.0,0.0,4.0,0.0,20.0,4.22,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
58,{'tosca.nodes.SoftwareComponent.Rsyslog.TestRsyslogType': {'derived_from': 'test_namespace_prefix.Rsyslog'}},,2.0,0.0,0.0,2.0,0.0,3.0,1.58,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
347,"{'tosca.nodes.indigo.OphidiaIO': {'derived_from': 'tosca.nodes.SoftwareComponent', 'metadata': {'icon': '/images/ophidia-io.png'}, 'properties': {'server_ip': {'type': 'string', 'description': 'IP of the OphidiaServer node', 'required': True}}, 'artifacts': {'ophidia_role': {'file': 'indigo-dc.ophidia-cluster,master', 'type': 'tosca.artifacts.AnsibleGalaxy.role'}, 'slurm_role': {'file': 'indigo-dc.slurm,master', 'type': 'tosca.artifacts.AnsibleGalaxy.role'}, 'nfs_role': {'file': 'indigo-dc.nfs,master', 'type': 'tosca.artifacts.AnsibleGalaxy.role'}}, 'interfaces': {'Standard': {'configure': {'implementation': 'https://raw.githubusercontent.com/indigo-dc/tosca-types/master/artifacts/ophidia/ophidia_io_install.yml', 'inputs': {'ophidia_server_ip': {'get_property': ['SELF', 'server_ip']}}}}}}}",,28.0,0.0,0.0,26.0,0.0,44.0,5.02,0.0,0.0,1.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0
819,"{'org.alien4cloud.kubernetes.api.types.volume.ArtifactVolumeBase': {'description': 'null', 'derived_from': 'org.alien4cloud.kubernetes.api.types.volume.AbstractArtifactVolumeBase', 'properties': {'volume_type': {'type': 'string'}, 'spec': {'type': 'tosca.datatypes.Root', 'description': 'may be overriden by concrete implementations', 'required': False}}, 'artifacts': {'resources': {'file': 'README.md', 'type': 'tosca.artifacts.File'}}}}",,14.0,0.0,0.0,14.0,0.0,27.0,4.5,0.0,0.0,0.0,0.0,0.0,0.0,2.0,0.0,0.0,0.0
2292,"{'tosca.nodes.indigo.MesosSlave': {'derived_from': 'tosca.nodes.SoftwareComponent', 'properties': {'master_ips': {'required': True, 'type': 'list', 'entry_schema': {'type': 'string'}}}, 'artifacts': {'docker_agent_role': {'file': 'indigo-dc.docker', 'type': 'tosca.artifacts.AnsibleGalaxy.role'}, 'consul_agent_role': {'file': 'indigo-dc.consul', 'type': 'tosca.artifacts.AnsibleGalaxy.role'}, 'mesos_agent_role': {'file': 'indigo-dc.mesos', 'type': 'tosca.artifacts.AnsibleGalaxy.role'}}, 'interfaces': {'Standard': {'create': {'implementation': 'https://raw.githubusercontent.com/indigo-dc/tosca-types/master/artifacts/mesos/mesos_slave_install.yml', 'inputs': {'mesos_masters_list_ips': {'get_property': ['SELF', 'master_ips']}}}}}, 'requirements': [{'host': {'capability': 'tosca.capabilities.Container', 'node': 'tosca.nodes.indigo.Compute', 'relationship': 'tosca.relationships.HostedOn'}}]}}",,32.0,0.0,0.0,30.0,0.0,46.0,5.02,0.0,0.0,1.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0
944,"{'tosca.nodes.LoadBalancer': {'derived_from': 'tosca.nodes.Root', 'properties': {'algorithm': {'type': 'string', 'required': False, 'status': 'experimental'}}, 'capabilities': {'client': {'type': 'tosca.capabilities.Endpoint.Public', 'occurrences': [0, 'UNBOUNDED'], 'description': 'The Floating (IP) clients on the public network can connect to.\n'}}, 'requirements': [{'application': {'capability': 'tosca.capabilities.Endpoint', 'relationship': 'tosca.relationships.RoutesTo', 'occurrences': [0, 'UNBOUNDED']}}]}}",,21.0,0.0,0.0,17.0,0.0,39.0,5.08,0.0,0.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0
1104,"{'my_company.my_types.MyAppNodeType': {'derived_from': 'tosca.nodes.Root', 'description': 'My company’s custom applicaton', 'properties': {'my_simple_secret': {'type': 'string'}}}}",,6.0,0.0,0.0,6.0,0.0,12.0,3.58,0.0,0.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0
1572,"{'SnmpdConfiguringNode': {'derived_from': 'cloudify.nodes.Root', 'interfaces': {'cloudify.interfaces.lifecycle': {'configure': 'scripts/setup_snmpd.sh'}}}}",,5.0,0.0,0.0,5.0,0.0,7.0,2.81,0.0,0.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,1.0
1824,"{'tosca.nodes.nfv.VNF': {'derived_from': 'tosca.nodes.Root', 'properties': {'id': {'type': 'string', 'description': 'ID of this VNF'}, 'vendor': {'type': 'string', 'description': 'name of the vendor who generate this VNF'}, 'version': {'type': 'version', 'description': 'version of the software for this VNF'}}, 'requirements': [{'virtualLink': {'capability': 'tosca.capabilities.nfv.VirtualLinkable'}}]}}",,15.0,0.0,0.0,15.0,0.0,39.0,4.4,0.0,0.0,0.0,0.0,0.0,0.0,3.0,0.0,0.0,0.0
456,"{'tosca.nodes.MiCADO.CloudBroker.Compute': {'description': 'CloudBroker compute node', 'derived_from': 'tosca.nodes.MiCADO.Compute', 'properties': {'deployment_id': {'type': 'string', 'required': True}, 'instance_type_id': {'type': 'string', 'required': True}, 'key_pair_id': {'type': 'string', 'required': False}, 'opened_port': {'type': 'string', 'required': False}, 'infrastructure_component_id': {'type': 'string', 'required': False}}, 'interfaces': {'Occopus': {'type': 'tosca.interfaces.MiCADO.Occopus'}}}}",,22.0,0.0,0.0,22.0,0.0,37.0,3.98,0.0,0.0,1.0,0.0,0.0,0.0,5.0,0.0,0.0,0.0
2354,"{'org.alien4cloud.monitoring.diamond.agent_linux.relationships.DiamondLinuxAgentConnectsToGrafana': {'derived_from': 'tosca.relationships.ConnectsTo', 'valid_target_types': ['org.alien4cloud.monitoring.pub.capabilities.GrafanaHttpEndpoint'], 'interfaces': {'Configure': {'pre_configure_source': {'inputs': {'ANSIBLE_VERBOSE': False, 'PLAYBOOK_ENTRY': 'connects_to_grafana.yml', 'grafana_url': {'concat': [{'get_attribute': ['TARGET', 'http_endpoint', 'protocol']}, '://', {'get_attribute': ['TARGET', 'http_endpoint', 'ip_address']}, ':', {'get_attribute': ['TARGET', 'http_endpoint', 'port']}]}, 'grafana_user': {'get_attribute': ['TARGET', 'http_endpoint', 'user']}, 'grafana_password': {'get_attribute': ['TARGET', 'http_endpoint', 'password']}}, 'implementation': 'playbook/playbook.ansible'}}}}}",,37.0,0.0,0.0,19.0,0.0,41.0,4.51,0.0,0.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
2717,"{'org.ystia.jupyter.linux.bash.relationships.ConnectsJupyterToFilessystem': {'derived_from': 'org.ystia.relationships.ConnectsTo', 'description': 'Connects Jupyter to a FileSystem to specify where will be stored Jupyter notebooks.', 'valid_target_types': ['tosca.capabilities.Node'], 'interfaces': {'Configure': {'pre_configure_source': {'implementation': 'scripts/jupyter-to-filesystem.sh', 'inputs': {'path_fs': {'get_property': ['TARGET', 'location']}}}}}, 'artifacts': [{'scripts': {'type': 'tosca.artifacts.File', 'file': 'scripts'}}]}}",,19.0,0.0,0.0,15.0,0.0,35.0,4.96,0.0,0.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,1.0
796,"{'yorc.types.ParentA': {'derived_from': 'root', 'artifacts': {'art1': {'file': 'ParentA'}, 'art3': {'file': 'ParentA'}, 'art5': {'file': 'ParentA'}}}}",,9.0,0.0,0.0,9.0,0.0,13.0,2.97,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
320,"{'tosca.nodes.indigo.LRMS.FrontEnd.SlurmGalaxy': {'derived_from': 'tosca.nodes.indigo.LRMS.FrontEnd.Slurm', 'artifacts': {'slurm_role': {'file': 'indigo-dc.slurm,cons_res', 'type': 'tosca.artifacts.AnsibleGalaxy.role'}, 'nfs_role': {'file': 'indigo-dc.nfs,master', 'type': 'tosca.artifacts.AnsibleGalaxy.role'}}, 'capabilities': {'lrms': {'type': 'tosca.capabilities.indigo.LRMS.Slurm'}}, 'interfaces': {'Standard': {'configure': {'implementation': 'https://raw.githubusercontent.com/indigo-dc/tosca-types/master/artifacts/lrms/slurm/slurm_fe_install.yml', 'inputs': {'wn_num': {'get_property': ['SELF', 'wn_num']}, 'wn_ips': {'get_property': ['SELF', 'wn_ips']}, 'front_end_ip': {'get_attribute': ['HOST', 'private_address', 0]}, 'fe_hybrid_cluster': {'get_property': ['SELF', 'hybrid']}}}}}}}",,34.0,0.0,0.0,25.0,0.0,41.0,4.81,0.0,0.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
2728,"{'com.toscaruntime.docker.relationships.SwarmUseConsul': {'derived_from': 'tosca.relationships.Root', 'valid_targets': ['com.toscaruntime.consul.capabilities.ConsulDiscoveryService'], 'attributes': {'docker_network_id': {'get_operation_output': ['SELF', 'Configure', 'add_target', 'DOCKER_NETWORK_ID']}, 'docker_network_name': {'get_operation_output': ['SELF', 'Configure', 'add_target', 'DOCKER_NETWORK_NAME']}}, 'interfaces': {'Configure': {'add_target': {'inputs': {'SWARM_PORT': {'get_property': ['SOURCE', 'swarm_port']}, 'CONSUL_CLIENT_ADDRESS': {'get_attribute': ['TARGET', 'consul_client_address']}}, 'implementation': 'consul/scripts/swarm_use_consul.sh'}}}}}",,30.0,0.0,0.0,17.0,0.0,32.0,4.58,0.0,0.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,1.0
2556,"{'yorc.relationships.DeploysThrough': {'derived_from': 'tosca.relationships.DependsOn', 'description': 'This type assigns a bastion host to use for connecting to a compute instance.', 'valid_target_types': ['yorc.capabilities.SSHBastionHost']}}",,6.0,0.0,0.0,4.0,0.0,20.0,4.12,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
2363,"{'org.alien4cloud.demo.spark.streaming.relationships.SparkStreamingModuleDependency': {'derived_from': 'tosca.relationships.DependsOn', 'valid_target_types': ['org.alien4cloud.demo.spark.streaming.capabilities.SparkStreamingModuleDependency']}}",,4.0,0.0,0.0,3.0,0.0,5.0,2.32,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
1800,"{'tosca.nodes.Root': {'description': 'The TOSCA root node all other TOSCA base node types derive from.', 'attributes': {'tosca_id': {'type': 'string'}, 'tosca_name': {'type': 'string'}, 'state': {'type': 'string'}}, 'capabilities': {'feature': {'type': 'tosca.capabilities.Node'}}, 'requirements': [{'dependency': {'capability': 'tosca.capabilities.Node', 'node': 'tosca.nodes.Root', 'relationship': 'tosca.relationships.DependsOn', 'occurrences': [0, 'UNBOUNDED']}}], 'interfaces': {'Standard': {'type': 'tosca.interfaces.node.lifecycle.Standard'}}}}",,23.0,0.0,0.0,21.0,0.0,43.0,4.8,0.0,0.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
2741,"{'org.alien4cloud.kubernetes.api.relationships.ConnectUrlTo': {'derived_from': 'tosca.relationships.ConnectsTo', 'description': 'This type represents relationship between a K8S Ingress and a service.', 'valid_target_types': ['org.alien4cloud.kubernetes.api.capabilities.KubeServiceEndpoint'], 'properties': {'host': {'type': 'string', 'required': False, 'description': 'Specifies the host.'}, 'path': {'type': 'string', 'required': True, 'description': 'Specifies the path.', 'default': '/'}}}}",,15.0,0.0,0.0,14.0,0.0,38.0,4.73,0.0,0.0,0.0,0.0,0.0,0.0,2.0,0.0,0.0,0.0
1915,{'tosca.nodes.TMForum.Models.SIDModels.ResourceDomain.ResourceABE.PhysicalResource.Hardware.ManagedHardware': {'derived_from': 'tosca.nodes.TMForum.Models.SIDModels.ResourceDomain.ResourceABE.PhysicalResource.Hardware'}},,2.0,0.0,0.0,2.0,0.0,3.0,1.58,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
2109,"{'sodalite.nodes.DockerRegistry': {'derived_from': 'tosca.nodes.SoftwareComponent', 'properties': {'docker_registry_url': {'type': 'string', 'description': 'Docker Hub login'}, 'docker_user': {'type': 'string', 'description': 'Docker Hub login', 'default': ''}, 'docker_pass': {'type': 'string', 'description': 'Docker Hub password', 'default': ''}}, 'interfaces': {'Standard': {'type': 'tosca.interfaces.node.lifecycle.Standard', 'operations': {'create': {'inputs': {'docker_registry_url': {'type': 'string', 'default': {'get_property': ['SELF', 'docker_registry_url']}}, 'docker_user': {'type': 'string', 'default': {'get_property': ['SELF', 'docker_user']}}, 'docker_pass': {'type': 'string', 'default': {'get_property': ['SELF', 'docker_pass']}}, 'ansible_user': {'type': 'string', 'default': {'get_property': ['SELF', 'host', 'username']}}}, 'implementation': {'primary': 'playbooks/login_user.yml'}}, 'delete': {'inputs': {'docker_registry_url': {'type': 'string', 'default': {'get_property': ['SELF', 'docker_registry_url']}}, 'ansible_user': {'type': 'string', 'default': {'get_property': ['SELF', 'host', 'username']}}}, 'implementation': {'primary': 'playbooks/logout_user.yml'}}}}}}}",,64.0,0.0,0.0,50.0,0.0,88.0,4.55,0.0,6.0,1.0,0.0,0.0,0.0,3.0,0.0,0.0,0.0
1502,"{'tosca.nodes.openstack.network': {'derived_from': 'tosca.nodes.network.Network', 'description': 'The TOSCA OpenStack Network node type', 'properties': {'is_external': {'type': 'boolean', 'required': False, 'default': False}, 'network_name': {'type': 'string', 'required': False, 'description': 'An identifier that represents an existing Network instance in the underlying cloud infrastructure or can be used as the name of the newly created network. If network_name is provided and no other properties are provided (with exception of network_id), then an existing network instance will be used. If network_name is provided alongside with more properties then a new network with this name will be created.\n'}, 'network_id': {'type': 'string', 'required': False, 'description': 'An identifier that represents an existing Network instance in the underlying cloud infrastructure. This property is mutually exclusive with all other properties except network_name. This can be used alone or together with network_name to identify an existing network.\n'}}, 'capabilities': {'link': {'type': 'tosca.capabilities.network.Linkable'}}, 'attributes': {'network_id': {'type': 'string'}, 'network_name': {'type': 'string'}, 'subnets': {'type': 'list'}}, 'interfaces': {'Standard': {'type': 'tosca.interfaces.node.lifecycle.Standard', 'create': {'implementation': 'openstack_plugin.tasks.net:network_create'}, 'start': {'implementation': 'openstack_plugin.tasks.net:network_start'}, 'delete': {'implementation': 'openstack_plugin.tasks.net:network_delete', 'inputs': {'task_retries': 10, 'task_retry_interval': 10}}}}}}",,46.0,0.0,0.0,38.0,0.0,165.0,6.29,0.0,0.0,1.0,0.0,0.0,0.0,3.0,0.0,0.0,0.0
1606,"{'tosca.nodes.BlockStorage': {'abstract': True, 'derived_from': 'tosca.nodes.Root', 'description': 'The TOSCA BlockStorage node currently represents a server-local block storage device (i.e., not shared) offering evenly sized blocks of data from which raw storage volumes can be created.\n', 'metadata': {'icon': '/images/volume.png'}, 'properties': {'size': {'type': 'integer', 'description': 'The requested storage size (default unit is MB). Note: - Required when an existing volume (i.e., volume_id) is not available. - If volume_id is provided, size is ignored.  Resize of existing volumes is not considered at this time.\n', 'constraints': [{'greater_or_equal': '1 MB'}]}, 'volume_id': {'type': 'string', 'description': 'ID of an existing volume (that is in the accessible scope of the requesting application).', 'required': False}, 'snapshot_id': {'type': 'string', 'description': 'Some identifier that represents an existing snapshot that should be used when creating the block storage (volume).', 'required': False}, 'device': {'type': 'string', 'description': 'The logical device name which for the attached device (which is represented by the target node in the model). e.g., ‘/dev/hda1’ Note: this property will be moved in next releases to the AttachTo relationship as it is specified by TOSCA spec.\n', 'required': False}}, 'requirements': [{'attachment': 'tosca.capabilities.Attachment'}]}}",,36.0,0.0,0.0,26.0,0.0,178.0,6.53,0.0,0.0,0.0,0.0,0.0,0.0,4.0,0.0,0.0,0.0
453,"{'tosca.nodes.MiCADO.Edge.GCE': {'description': 'GCE edge node for MiCADO', 'derived_from': 'tosca.nodes.MiCADO.GCE.Compute', 'interfaces': {'Terraform': {'type': 'tosca.interfaces.MiCADO.Terraform'}}}}",,6.0,0.0,0.0,6.0,0.0,13.0,3.7,0.0,0.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
173,"{'org.alien4cloud.nodes.RegistryConfigurer': {'description': 'Put this node on each compute you want to log operations. This component\nwill just add an entry in /etc/hosts in order to connect to the registry.\n', 'derived_from': 'tosca.nodes.SoftwareComponent', 'properties': {'registry_host': {'type': 'string', 'required': False}}, 'interfaces': {'Standard': {'start': {'inputs': {'REGISTRY_HOST': {'get_property': ['SELF', 'registry_host']}}, 'implementation': 'scripts/RegistryConfigurer/start.sh'}}}, 'requirements': [{'registry': {'capability': 'tosca.capabilities.Node', 'node': 'org.alien4cloud.nodes.Registry', 'relationship': 'org.alien4cloud.relationships.RegistryConfigurerDependsOnRegistry', 'occurrences': [0, 1]}}]}}",,25.0,0.0,0.0,20.0,0.0,57.0,5.64,0.0,0.0,1.0,0.0,0.0,0.0,1.0,0.0,0.0,1.0
2289,"{'tosca.nodes.indigo.MesosMaster': {'derived_from': 'tosca.nodes.SoftwareComponent', 'properties': {'mesos_masters_list': {'type': 'string', 'required': False, 'default': {'get_attribute': ['HOST', 'public_address']}}, 'marathon_enable_ssl': {'type': 'boolean', 'required': False, 'default': False}, 'marathon_username': {'type': 'string', 'required': False, 'default': 'admin'}, 'marathon_password': {'type': 'string', 'required': True}, 'chronos_enable_ssl': {'type': 'boolean', 'required': False, 'default': False}, 'chronos_username': {'type': 'string', 'required': False, 'default': 'admin'}, 'chronos_password': {'type': 'string', 'required': True}}, 'artifacts': {'docker_agent_role': {'file': 'indigo-dc.docker', 'type': 'tosca.artifacts.AnsibleGalaxy.role'}, 'consul_agent_role': {'file': 'indigo-dc.consul', 'type': 'tosca.artifacts.AnsibleGalaxy.role'}, 'zookeeper_agent_role': {'file': 'indigo-dc.zookeeper', 'type': 'tosca.artifacts.AnsibleGalaxy.role'}, 'mesos_agent_role': {'file': 'indigo-dc.mesos', 'type': 'tosca.artifacts.AnsibleGalaxy.role'}, 'marathon_agent_role': {'file': 'indigo-dc.marathon', 'type': 'tosca.artifacts.AnsibleGalaxy.role'}, 'chronos_agent_role': {'file': 'indigo-dc.chronos', 'type': 'tosca.artifacts.AnsibleGalaxy.role'}}, 'interfaces': {'Standard': {'configure': {'implementation': 'https://raw.githubusercontent.com/indigo-dc/tosca-types/master/artifacts/mesos/mesos_master_install.yml', 'inputs': {'mesos_masters_list_ips': {'get_property': ['SELF', 'mesos_masters_list']}, 'marathon_user': {'get_property': ['SELF', 'marathon_username']}, 'marathon_pass': {'get_property': ['SELF', 'marathon_password']}, 'chronos_user': {'get_property': ['SELF', 'chronos_username']}, 'chronos_pass': {'get_property': ['SELF', 'chronos_password']}, 'marathon_enable_ssl': {'get_property': ['SELF', 'marathon_enable_ssl']}, 'chronos_enable_ssl': {'get_property': ['SELF', 'chronos_enable_ssl']}}}}}, 'requirements': [{'host': {'capability': 'tosca.capabilities.Container', 'node': 'tosca.nodes.indigo.Compute', 'relationship': 'tosca.relationships.HostedOn'}}]}}",,89.0,0.0,0.0,73.0,0.0,124.0,5.29,0.0,0.0,1.0,0.0,0.0,0.0,7.0,0.0,0.0,0.0
280,"{'brooklyn.nodes.SoftwareProcess': {'derived_from': 'tosca.nodes.SoftwareComponent', 'requirements': [{'host': 'tosca.capabilities.Container', 'relationship': 'tosca.relationships.HostedOn'}]}}",,5.0,0.0,0.0,5.0,0.0,8.0,3.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
117,"{'org.alien4cloud.mock.bash.nodes.FailAtStartBashMock': {'description': 'Just fail at start.\n', 'derived_from': 'org.alien4cloud.mock.pub.nodes.AbstractMockHost', 'interfaces': {'Standard': {'create': {'inputs': {'operation': 'create', 'duration': {'get_property': ['SELF', 'duration']}}, 'implementation': 'scripts/operation.sh'}, 'configure': {'inputs': {'operation': 'configure', 'duration': {'get_property': ['SELF', 'duration']}}, 'implementation': 'scripts/operation.sh'}, 'start': {'inputs': {'operation': 'start', 'duration': {'get_property': ['SELF', 'duration']}}, 'implementation': 'scripts/fail.sh'}, 'stop': {'inputs': {'operation': 'stop', 'duration': {'get_property': ['SELF', 'duration']}}, 'implementation': 'scripts/operation.sh'}, 'delete': {'inputs': {'operation': 'delete', 'duration': {'get_property': ['SELF', 'duration']}}, 'implementation': 'scripts/operation.sh'}}}, 'capabilities': {'mock_endpoint': {'type': 'org.alien4cloud.mock.bash.capabilities.BashComponentEndpoint', 'occurrences': [0, 'unbounded']}}, 'requirements': [{'mock_endpoint': {'capability': 'org.alien4cloud.mock.bash.capabilities.BashComponentEndpoint', 'relationship': 'org.alien4cloud.mock.bash.relationships.BashComponentConnectToComponent', 'occurrences': [0, 'unbounded']}}], 'artifacts': [{'data': {'file': 'data/data.txt', 'type': 'tosca.artifacts.File'}}]}}",,62.0,0.0,0.0,48.0,0.0,82.0,4.88,0.0,0.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,5.0
184,"{'org.alien4cloud.automation.cloudify.patches.amqp_client.nodes.AmqpClientPatch': {'derived_from': 'org.alien4cloud.automation.cloudify.patches.pub.nodes.CloudifyPatch', 'description': 'Fix AMQP client patch.', 'interfaces': {'Standard': {'create': {'inputs': {'ANSIBLE_VERBOSE': False, 'PLAYBOOK_ENTRY': 'create.yml'}, 'implementation': 'playbook/playbook.ansible'}}}}}",,10.0,0.0,0.0,10.0,0.0,18.0,4.17,0.0,0.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
1861,{'additionalProperties': {'type': 'object'}},,2.0,0.0,0.0,2.0,0.0,3.0,1.58,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
472,"{'tosca.nodes.MiCADO.Container.Application.Docker.StatefulSet': {'description': 'An abstraction of the Docker container node, creates a Kubernetes StatefulSet', 'derived_from': 'tosca.nodes.MiCADO.Container.Application.Docker', 'artifacts': {'image': {'type': 'tosca.artifacts.Deployment.Image.Container.Docker', 'file': {'get_property': ['SELF', 'image']}, 'repository': 'docker_hub'}}, 'interfaces': {'Kubernetes': {'type': 'tosca.interfaces.MiCADO.Kubernetes', 'create': {'inputs': {'kind': 'StatefulSet', 'spec': {'updateStrategy': {'type': 'RollingUpdate'}, 'podManagementPolicy': 'Parallel'}}}}}}}",,21.0,0.0,0.0,19.0,0.0,39.0,5.01,0.0,0.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
2175,"{'tosca.nodes.Container.Database.MySQL': {'description': 'MySQL container from the Docker Hub repository\n', 'derived_from': 'tosca.nodes.Container.Database', 'requirements': [{'volume': {'capability': 'tosca.capabilities.Attachment', 'relationship': 'tosca.relationships.AttachesTo', 'occurrences': [0, 1]}}]}}",,10.0,0.0,0.0,8.0,0.0,20.0,4.32,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
931,"{'tosca.nodes.Root': {'derived_from': 'tosca.entity.Root', 'description': 'The TOSCA Node Type all other TOSCA base Node Types derive from.\n', 'attributes': {'tosca_id': {'type': 'string'}, 'tosca_name': {'type': 'string'}, 'state': {'type': 'string'}}, 'capabilities': {'feature': {'type': 'tosca.capabilities.Node'}}, 'requirements': [{'dependency': {'capability': 'tosca.capabilities.Node', 'node': 'tosca.nodes.Root', 'relationship': 'tosca.relationships.DependsOn', 'occurrences': [0, 'UNBOUNDED']}}], 'interfaces': {'Standard': {'type': 'tosca.interfaces.node.lifecycle.Standard'}}}}",,24.0,0.0,0.0,22.0,0.0,45.0,4.95,0.0,0.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
1494,{'seaclouds.nodes.Compute.Amazon': {'derived_from': 'seaclouds.nodes.Compute'}},,2.0,0.0,0.0,2.0,0.0,3.0,1.58,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
2313,"{'tosca.nodes.MiCADO.Container.Pod.Kubernetes.Deployment': {'description': 'An abstraction of the above, creates a Deployment', 'derived_from': 'tosca.nodes.MiCADO.Container.Pod.Kubernetes', 'interfaces': {'Kubernetes': {'type': 'tosca.interfaces.MiCADO.Kubernetes', 'create': {'inputs': {'kind': 'Deployment', 'spec': {'strategy': {'type': 'Recreate'}}}}}}}}",,12.0,0.0,0.0,12.0,0.0,24.0,4.42,0.0,0.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
737,"{'cloudify.nodes.SharedResource': {'derived_from': 'cloudify.nodes.Root', 'properties': {'resource_config': {'type': 'cloudify.datatypes.SharedResource', 'default': {}}, 'client': {'description': 'Client configuration, if empty Cloudify manager client will be used.\n', 'type': 'cloudify.datatypes.RemoteCloudifyManagerClient', 'default': {}}}, 'interfaces': {'cloudify.interfaces.lifecycle': {'create': {'implementation': 'cfy_extensions.cloudify_types.shared_resource.connect_deployment'}}}}}",,15.0,0.0,0.0,14.0,0.0,28.0,4.59,0.0,0.0,1.0,0.0,0.0,0.0,2.0,0.0,0.0,0.0
85,"{'example.SomeApp': {'derived_from': 'tosca.nodes.WebApplication', 'properties': {'admin_user': {'type': 'string', 'required': False}, 'pool_size': {'type': 'integer', 'required': False}}, 'capabilities': {'message_receiver': {'type': 'example.capabilities.Receiver'}}, 'requirements': [{'database': {'node': 'tosca.nodes.Database', 'capability': 'tosca.capabilities.Endpoint.Database', 'relationship': 'tosca.relationships.ConnectsTo'}}]}}",,17.0,0.0,0.0,17.0,0.0,26.0,4.36,0.0,0.0,0.0,0.0,0.0,0.0,2.0,0.0,0.0,0.0
2040,"{'radon.nodes.nifi.Nifi': {'derived_from': 'tosca.nodes.SoftwareComponent', 'properties': {'component_version': {'description': 'The version of Apache Nifi', 'type': 'string', 'required': True}, 'port': {'description': 'The port exposed by Apache Nifi', 'required': True, 'type': 'string', 'default': 8080}}, 'capabilities': {'host': {'type': 'tosca.capabilities.Container'}}, 'interfaces': {'Standard': {'type': 'tosca.interfaces.node.lifecycle.Standard', 'operations': {'create': {'inputs': {'tarball_version': {'default': {'get_property': ['SELF', 'component_version']}}}, 'implementation': 'nodetypes/radon/nodes/nifi/nifiplatform/files/create.yml'}, 'start': {'implementation': 'nodetypes/radon/nodes/nifi/nifiplatform/files/start.yml'}, 'stop': {'implementation': 'nodetypes/radon/nodes/nifi/nifiplatform/files/stop.yml'}, 'delete': {'inputs': {'tarball_version': {'default': {'get_property': ['SELF', 'component_version']}}}, 'implementation': 'nodetypes/radon/nodes/nifi/nifiplatform/files/delete.yml'}, 'configure': {'inputs': {'tarball_version': {'default': {'get_property': ['SELF', 'component_version']}}}, 'implementation': 'nodetypes/radon/nodes/nifi/nifiplatform/files/configure.yml'}}}}}}",,47.0,0.0,0.0,41.0,0.0,71.0,5.15,0.0,3.0,1.0,0.0,0.0,0.0,2.0,0.0,0.0,0.0
2749,"{'micro.relationships.InteractsWith': {'derived_from': 'micro.relationships.Root', 'valid_target_types': ['micro.nodes.Root'], 'properties': {'timeout': {'type': 'boolean', 'default': False}}}}",,8.0,0.0,0.0,7.0,0.0,11.0,3.46,0.0,0.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0
1741,"{'micro.nodes.Database': {'derived_from': 'micro.nodes.Root', 'capabilities': {'feature': {'type': 'tosca.capabilities.Node', 'valid_source_types': ['micro.nodes.Service'], 'occurrences': [0, 'UNBOUNDED']}}}}",,10.0,0.0,0.0,7.0,0.0,12.0,3.58,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
549,"{'org.alien4cloud.diamond.collectors.nodes.A4CCollector': {'derived_from': 'org.alien4cloud.diamond.collectors.nodes.JolokiaCollector', 'description': 'Collect A4C JVM metrics.', 'requirements': [{'collec_jolokia': {'capability': 'org.alien4cloud.java.jmx.jolokia.capabilities.JolokiaEndpoint', 'relationship': 'org.alien4cloud.diamond.collectors.relationships.DiamondA4CCollector', 'occurrences': [0, 1]}}]}}",,10.0,0.0,0.0,8.0,0.0,17.0,4.09,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
1810,"{'org.onap.tosca.checker.Dishwasher': {'derived_from': 'org.onap.tosca.checker.Appliance', 'properties': {'waterFiltration': {'type': 'boolean', 'required': False, 'default': False}, 'numberOfCycles': {'type': 'integer', 'required': False}, 'rackMaterial': {'type': 'string', 'required': True}, 'energyStar': {'type': 'boolean', 'required': True}}}}",,16.0,0.0,0.0,16.0,0.0,26.0,3.75,0.0,0.0,0.0,0.0,0.0,0.0,4.0,0.0,0.0,0.0
513,"{'org.alien4cloud.alien4cloud.config.orchestrator.cfy.nodes.CfyAzureParametersConfigurator': {'description': 'Configure azure parameters for cfy orchestrator\n', 'derived_from': 'org.alien4cloud.alien4cloud.config.orchestrator.cfy.nodes.CfyOrchestratorConfigurator', 'properties': {'resourceGroupId': {'type': 'string', 'required': True}, 'virtualNetworkId': {'type': 'string', 'required': True}, 'subnetId': {'type': 'string', 'required': True}}, 'interfaces': {'Standard': {'start': {'inputs': {'ANSIBLE_VERBOSE': False, 'PLAYBOOK_ENTRY': 'config_azure_parameters.yml', 'orchestratorId': {'get_attribute': ['SELF', 'orchestratorId']}, 'alien_url': {'get_attribute': ['SELF', 'alien_url']}, 'alien_user': {'get_attribute': ['SELF', 'alien_user']}, 'alien_password': {'get_attribute': ['SELF', 'alien_password']}, 'resourceGroup': {'get_property': ['SELF', 'resourceGroupId']}, 'virtualNetwork': {'get_property': ['SELF', 'virtualNetworkId']}, 'subnet': {'get_property': ['SELF', 'subnetId']}}, 'implementation': 'playbook/playbook.ansible'}}}}}",,48.0,0.0,0.0,34.0,0.0,64.0,4.98,0.0,0.0,1.0,0.0,0.0,0.0,3.0,0.0,0.0,0.0
2389,"{'org.alien4cloud.relationships.RegistryHostedOnApache': {'derived_from': 'tosca.relationships.HostedOn', 'valid_target_types': ['org.alien4cloud.capabilities.ApacheContainer']}}",,4.0,0.0,0.0,3.0,0.0,5.0,2.32,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
1834,{'rnc.nodes.BlockStorage': {'derived_from': 'tosca.nodes.BlockStorage'}},,2.0,0.0,0.0,2.0,0.0,3.0,1.58,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
1088,"{'tosca.nodes.compute': {'derived_from': 'tosca.nodes.root', 'description': 'Represents a compute instance in the IaaS layer.'}}",,3.0,0.0,0.0,3.0,0.0,12.0,3.58,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
1832,{'rnc.nodes.compute.DM': {'derived_from': 'tosca.nodes.nfv.VDU'}},,2.0,0.0,0.0,2.0,0.0,3.0,1.58,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
1063,{'tosca.nodes.WebServer': {'derived_from': 'tosca.nodes.Middleware'}},,2.0,0.0,0.0,2.0,0.0,3.0,1.58,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
1227,"{'org.alien4cloud.nodes.Application.Docker.Apache': {'derived_from': 'tosca.nodes.Container.Application.DockerContainer', 'capabilities': {'http_endpoint': {'type': 'org.alien4cloud.capabilities.endpoint.docker.Http'}}, 'interfaces': {'Standard': {'create': {'implementation': {'file': 'httpd:latest', 'repository': 'docker', 'type': 'tosca.artifacts.Deployment.Image.Container.Docker'}}}}}}",,12.0,0.0,0.0,12.0,0.0,17.0,3.97,0.0,0.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
2126,"{'sodalite.nodes.OpenStack.VM': {'derived_from': 'tosca.nodes.Compute', 'properties': {'network': {'description': 'OpenStack network id (network names are not accepted)', 'type': 'string'}, 'name': {'description': 'Name that should be given to the VM in OpenStack', 'type': 'string'}, 'security_groups': {'description': 'OpenStack names of the security groups to which the instance should be added.Comma separated string.', 'type': 'string'}, 'flavor': {'description': 'OpenStack flavor id (flavor names are not accepted)', 'type': 'string'}, 'image': {'description': 'OpenStack image id (image names are not accepted)', 'type': 'string'}, 'key_name': {'description': 'OpenStack SSH key name that should be placed on the VM', 'type': 'string'}, 'username': {'description': 'Username for SSH connection', 'type': 'string'}, 'ssh_config': {'description': 'Additional ssh config, to be added to default ansible_ssh_common_args', 'type': 'map', 'required': False, 'default': {}}, 'include_exporter': {'description': 'Flag to include exporter', 'type': 'boolean', 'default': True, 'required': False}, 'timeout': {'description': 'Timeout to instantiate the VM', 'type': 'integer', 'default': 600, 'required': False}, 'floating_ip_pools': {'description': 'Name of floating IP pool from which to choose a floating IP', 'type': 'list', 'default': None, 'required': False}, 'userdata': {'description': 'Additional userdata applied to configure the VM', 'type': 'string', 'default': '', 'required': False}, 'env': {'description': 'Optional OpenStack environment', 'type': 'map', 'entry_schema': {'type': 'sodalite.datatypes.OpenStack.env'}, 'required': False, 'default': None}}, 'attributes': {'id': {'description': 'OpenStack id of the VM', 'type': 'string'}, 'ansible_ip': {'description': 'ansible ipv4', 'type': 'string'}}, 'requirements': [{'protected_by': {'relationship': 'tosca.relationships.DependsOn', 'node': 'sodalite.nodes.OpenStack.SecurityRules', 'capability': 'tosca.capabilities.Node', 'occurrences': [0, 'UNBOUNDED']}}], 'capabilities': {'feature': {'type': 'tosca.capabilities.Node'}}, 'interfaces': {'Standard': {'type': 'tosca.interfaces.node.lifecycle.Standard', 'operations': {'create': {'inputs': {'network': {'type': 'string', 'default': {'get_property': ['SELF', 'network']}}, 'flavor': {'type': 'string', 'default': {'get_property': ['SELF', 'flavor']}}, 'key_name': {'type': 'string', 'default': {'get_property': ['SELF', 'key_name']}}, 'image': {'type': 'string', 'default': {'get_property': ['SELF', 'image']}}, 'security_groups': {'type': 'string', 'default': {'get_property': ['SELF', 'security_groups']}}, 'vm_name': {'type': 'string', 'default': {'get_property': ['SELF', 'name']}}, 'ansible_user': {'type': 'string', 'default': {'get_property': ['SELF', 'username']}}, 'ssh_config': {'type': 'string', 'default': {'get_property': ['SELF', 'ssh_config']}}, 'include_exporter': {'type': 'boolean', 'default': {'get_property': ['SELF', 'include_exporter']}}, 'timeout': {'type': 'integer', 'default': {'get_property': ['SELF', 'timeout']}}, 'floating_ip_pools': {'type': 'list', 'default': {'get_property': ['SELF', 'floating_ip_pools']}}, 'userdata': {'type': 'string', 'default': {'get_property': ['SELF', 'userdata']}}, 'env': {'type': 'map', 'default': {'get_property': ['SELF', 'env']}}}, 'implementation': {'primary': 'playbooks/vm_create.yml', 'dependencies': ['playbooks/egi_refresh_token.yml']}}, 'delete': {'inputs': {'id': {'type': 'string', 'default': {'get_attribute': ['SELF', 'id']}}, 'env': {'type': 'map', 'default': {'get_property': ['SELF', 'env']}}}, 'implementation': {'primary': 'playbooks/vm_delete.yml', 'dependencies': ['playbooks/egi_refresh_token.yml']}}}}}}}",,181.0,0.0,0.0,146.0,0.0,341.0,6.03,0.0,15.0,1.0,0.0,0.0,0.0,13.0,0.0,0.0,0.0
488,"{'org.alien4cloud.consul.pub.nodes.ConsulAgent': {'abstract': True, 'derived_from': 'tosca.nodes.SoftwareComponent', 'description': 'Base Consul discovery service installation.\n', 'tags': {'icon': '/images/consul.png'}, 'capabilities': {'consul_agent': {'type': 'org.alien4cloud.consul.pub.capabilities.ConsulAgent', 'valid_source_types': ['org.alien4cloud.consul.pub.capabilities.ConsulClient']}}, 'properties': {'download_url': {'description': 'The URL to download the consul archive.', 'type': 'string', 'required': True, 'default': 'https://releases.hashicorp.com/consul/0.6.4/consul_0.6.4_linux_amd64.zip'}, 'data_dir': {'description': 'The location on the FS where consul will store data.', 'type': 'string', 'required': True, 'default': '/var/consul'}, 'tls_enabled': {'description': 'Defines if the communication with the consul agent will be secured (HTTPS).', 'type': 'boolean', 'required': True, 'default': False}, 'ca_passphrase': {'description': 'The provided CA certificate passphrase.', 'type': 'string', 'required': False}, 'encrypt_key': {'description': 'The key to encrypt gossip exchanges into consul cluster.', 'type': 'string', 'required': False}}}}",,36.0,0.0,0.0,34.0,0.0,100.0,5.68,0.0,0.0,0.0,0.0,0.0,0.0,5.0,0.0,0.0,0.0
2422,"{'org.alien4cloud.relationships.ConnectElasticSearchNodes': {'derived_from': 'tosca.relationships.ConnectsTo', 'description': 'Relationship that models 2 ES nodes connection.', 'valid_target_types': ['alien.capabilities.ElasticSearch'], 'interfaces': {'Configure': {'pre_configure_source': {'inputs': {'ES_IP': {'get_attribute': ['TARGET', 'ip_address']}}, 'implementation': 'scripts/pre_configure_source.sh'}, 'pre_configure_target': {'inputs': {'ES_IP': {'get_attribute': ['SOURCE', 'ip_address']}}, 'implementation': 'scripts/pre_configure_target.sh'}}}}}",,21.0,0.0,0.0,16.0,0.0,31.0,4.63,0.0,0.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,2.0
767,"{'tosca.nodes.DBMS': {'metadata': {'puccini.normative': 'true', 'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.2]', 'specification.location': '5.9.7'}, 'description': 'The TOSCA DBMS node represents a typical relational, SQL Database Management System software component or service.', 'derived_from': 'tosca.nodes.SoftwareComponent', 'properties': {'root_password': {'description': 'The optional root password for the DBMS server.', 'type': 'string', 'required': False}, 'port': {'description': ""The DBMS server's port."", 'type': 'integer', 'required': False}}, 'capabilities': {'host': {'type': 'tosca.capabilities.Compute', 'valid_source_types': ['tosca.nodes.Database']}}}}",,22.0,0.0,0.0,20.0,0.0,58.0,5.46,0.0,0.0,0.0,0.0,0.0,0.0,2.0,0.0,0.0,0.0
1138,"{'org.alien4cloud.nodes.mock.openstack.Flavor': {'abstract': True, 'derived_from': 'tosca.nodes.Root', 'properties': {'id': {'type': 'string'}}, 'capabilities': {'host': {'type': 'tosca.capabilities.Container'}}}}",,9.0,0.0,0.0,9.0,0.0,13.0,3.55,0.0,0.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0
2463,"{'org.alien4cloud.spark.linux_sh.relationships.JoinSparkCluster': {'derived_from': 'tosca.relationships.ConnectsTo', 'valid_target_types': ['org.alien4cloud.spark.linux_sh.nodes.SparkMaster'], 'interfaces': {'Configure': {'add_target': {'inputs': {'SPARK_INSTALL_DIR': {'get_property': ['SOURCE', 'install_dir']}, 'SPARK_MASTER_ADDRESS': {'get_attribute': ['TARGET', 'ip_address']}, 'SPARK_SLAVE_ADDRESS': {'get_attribute': ['SOURCE', 'ip_address']}, 'SPARK_MASTER_PORT': {'get_attribute': ['TARGET', 'spark_master', 'port']}}, 'implementation': 'scripts/join_spark_cluster.sh'}}}}}",,26.0,0.0,0.0,16.0,0.0,28.0,4.42,0.0,0.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,1.0
218,"{'org.alien4cloud.nodes.kubernetes.Hyperkube': {'abstract': True, 'derived_from': 'tosca.nodes.SoftwareComponent', 'metadata': {'icon': 'images/hyperkube.png'}, 'properties': {'component_version': {'type': 'version', 'default': '1.2.1'}}, 'requirements': [{'host': {'capability': 'org.alien4cloud.capabilities.DockerHost', 'node': 'org.alien4cloud.nodes.kubernetes.DockerEngine', 'relationship': 'tosca.relationships.HostedOn', 'occurrences': [1, 1]}}, {'flannel': {'capability': 'org.alien4cloud.capabilities.flannel.Connectivity', 'occurrences': [1, 1]}}]}}",,22.0,0.0,0.0,18.0,0.0,31.0,4.57,0.0,0.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0
947,"{'radon.nodes.test': {'derived_from': 'tosca.nodes.Compute', 'attributes': {'node_attribute': {'type': 'string'}}, 'interfaces': {'Standard': {'type': 'tosca.interfaces.node.lifecycle.Standard', 'operations': {'create': 'playbooks/create.yaml'}}}, 'requirements': [{'host': {'capability': 'tosca.capabilities.Compute', 'relationship': 'radon.relationships.test'}}]}}",,,,,,,,,,,,,,,,,,
432,"{'Abstract.Compute': {'derived_from': 'Root', 'description': 'The TOSCA Abstract.Compute node represents an abstract compute resource without any requirements on storage or network resources.', 'capabilities': {'host': {'type': 'Compute', 'valid_source_types': []}}}}",,8.0,0.0,0.0,7.0,0.0,26.0,4.62,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
816,"{'org.alien4cloud.kubernetes.api.types.volume.AbstractVolumeBase': {'description': 'https://v1-6.docs.kubernetes.io/docs/api-reference/v1.6/#volume-v1-core', 'derived_from': 'tosca.nodes.Root', 'properties': {'name': {'type': 'string'}, 'size': {'type': 'scalar-unit.size', 'description': 'The requested storage size (default unit is MB).'}}, 'requirements': [{'attachment': {'capability': 'org.alien4cloud.capabilities.DockerVolumeAttachment', 'relationship': 'org.alien4cloud.relationships.MountDockerVolume', 'occurrences': [1, 'UNBOUNDED']}}, {'host': {'capability': 'tosca.capabilities.Container', 'relationship': 'tosca.relationships.HostedOn'}}]}}",,19.0,0.0,1.0,17.0,0.0,35.0,4.84,0.0,0.0,0.0,0.0,0.0,0.0,2.0,0.0,0.0,0.0
2715,"{'org.ystia.terraform.pub.relationships.DependsOnTerraformRuntime': {'derived_from': 'tosca.relationships.DependsOn', 'valid_target_types': ['org.ystia.terraform.pub.nodes.TerraformRuntime']}}",,4.0,0.0,0.0,3.0,0.0,5.0,2.32,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
2157,"{'dcae.nodes.ContainerizedComponent': {'derived_from': 'cloudify.dcae.nodes.Root', 'properties': {'image': {'type': 'string', 'required': True}, 'application_config': {'type': 'map', 'required': True}, 'docker_config': {'type': 'map'}}}}",,11.0,0.0,0.0,11.0,0.0,17.0,3.45,0.0,0.0,0.0,0.0,0.0,0.0,3.0,0.0,0.0,0.0
1046,"{'tosca.nodes.root': {'abstract': True, 'invalid_field': 'value', 'description': 'Root type that every node should derive.', 'requirements': {'dependency': {'type': 'tosca.requirements.feature', 'lower_bound': 0, 'upper_bound': 'unbounded'}}, 'capabilities': {'feature': {'type': 'tosca.capabilities.feature', 'lower_bound': 0, 'upper_bound': 'unbounded'}}}}",,14.0,0.0,0.0,14.0,0.0,29.0,4.42,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
1707,"{'tosca.nodes.indigo.DariahRepository': {'derived_from': 'tosca.nodes.SoftwareComponent', 'properties': {'marathon_password': {'type': 'string', 'required': True}}, 'artifacts': {'dariahrepo_role': {'file': 'indigo-dc.dariahrepo', 'type': 'tosca.artifacts.AnsibleGalaxy.role'}}, 'interfaces': {'Standard': {'create': {'implementation': 'https://raw.githubusercontent.com/indigo-dc/tosca-types/master/artifacts/mesos/dariahrepo-setup.yml', 'inputs': {'marathon_password': {'get_property': ['SELF', 'marathon_password']}}}}}, 'requirements': [{'host': {'capability': 'tosca.capabilities.indigo.MesosMaster', 'relationship': 'tosca.relationships.HostedOn', 'node': 'tosca.nodes.SoftwareComponent', 'occurrences': [1, 1]}}]}}",,27.0,0.0,0.0,23.0,0.0,36.0,4.87,0.0,0.0,1.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0
290,"{'foo': {'derived_from': 'tosca.nodes.Database', 'properties': {'p1': {'type': 'string'}}, 'attributes': None, 'interfaces': {'Standard': {'create': 'classpath://templates/custom1/scripts/create.sh', 'configure': {'inputs': {'arg1': 'x'}, 'implementation': 'classpath://templates/custom1/scripts/configure.sh'}, 'start': 'classpath://templates/custom1/scripts/start.sh', 'stop': 'classpath://templates/custom1/scripts/stop.sh'}}}}",,15.0,0.0,0.0,15.0,0.0,23.0,4.52,0.0,0.0,1.0,0.0,0.0,0.0,1.0,0.0,0.0,4.0
214,"{'org.alien4cloud.automation.cloudify.patches.change_max_mgmtworker.nodes.ChangeMaxMgmtWorkerPatch': {'derived_from': 'org.alien4cloud.automation.cloudify.patches.pub.nodes.CloudifyPatch', 'description': 'Increase number of mgmnt workers.', 'properties': {'mgmt_worker_count': {'type': 'integer', 'required': True, 'default': 500}}, 'interfaces': {'Standard': {'create': {'inputs': {'ANSIBLE_VERBOSE': False, 'PLAYBOOK_ENTRY': 'create.yml', 'mgmt_worker_count': {'get_property': ['SELF', 'mgmt_worker_count']}}, 'implementation': 'playbook/playbook.ansible'}}, 'org.alien4cloud.automation.cloudify.patches.change_max_mgmtworker.interfaces.Admin': {'setup': {'inputs': {'ANSIBLE_VERBOSE': False, 'PLAYBOOK_ENTRY': 'create.yml', 'mgmt_worker_count': {'type': 'integer', 'required': True, 'default': 100}}, 'implementation': 'playbook/playbook.ansible'}}}}}",,29.0,0.0,0.0,27.0,0.0,47.0,4.87,0.0,0.0,2.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0
455,"{'tosca.nodes.MiCADO.Edge.Azure': {'description': 'Azure edge node for MiCADO', 'derived_from': 'tosca.nodes.MiCADO.Azure.Compute', 'interfaces': {'Terraform': {'type': 'tosca.interfaces.MiCADO.Terraform'}}}}",,6.0,0.0,0.0,6.0,0.0,13.0,3.7,0.0,0.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
362,"{'tosca.nodes.indigo.Elasticsearch': {'derived_from': 'tosca.nodes.SoftwareComponent', 'properties': {'es_version': {'type': 'string', 'required': False, 'default': '7.4.1'}, 'bind_address': {'type': 'string', 'required': False, 'default': '0.0.0.0'}, 'discovery_type': {'type': 'string', 'required': False, 'default': 'single-node'}, 'enable_security': {'type': 'boolean', 'default': True, 'required': False}, 'elastic_password': {'type': 'string', 'required': False, 'default': 'changeme'}, 'kibana_system_password': {'type': 'string', 'required': False, 'default': 'changeme'}}, 'artifacts': {'es_role': {'file': 'elastic.elasticsearch,7.4.1', 'type': 'tosca.artifacts.AnsibleGalaxy.role'}}, 'interfaces': {'Standard': {'configure': {'implementation': 'https://raw.githubusercontent.com/indigo-dc/tosca-types/add-ek/artifacts/master/elasticsearch_install.yml', 'inputs': {'es_version': {'get_property': ['SELF', 'es_version']}, 'bind_host': {'get_property': ['SELF', 'bind_address']}, 'discovery_type': {'get_property': ['SELF', 'discovery_type']}, 'enable_security': {'get_property': ['SELF', 'enable_security']}, 'elastic_password': {'get_property': ['SELF', 'elastic_password']}, 'kibana_system_password': {'get_property': ['SELF', 'kibana_system_password']}}}}}}}",,60.0,0.0,0.0,48.0,0.0,82.0,4.69,0.0,0.0,1.0,0.0,0.0,0.0,6.0,0.0,0.0,0.0
447,"{'tosca.nodes.MiCADO.Compute': {'description': 'Base compute node for MiCADO', 'derived_from': 'tosca.nodes.Compute', 'properties': {'context': {'type': 'context_type', 'required': False}}, 'capabilities': {'host': {'type': 'tosca.capabilities.Compute'}, 'os': {'type': 'tosca.capabilities.OperatingSystem'}, 'scalable': {'type': 'tosca.capabilities.Scalable'}}}}",,14.0,0.0,0.0,14.0,0.0,25.0,4.32,0.0,0.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0
167,"{'org.alien4cloud.monitoring.pub.nodes.MonitoringAgent': {'derived_from': 'tosca.nodes.SoftwareComponent', 'abstract': True, 'description': 'An agent that collects metrics and store them into a MetricsBackend\n', 'metadata': {'icon': '/images/metrics.png'}}}",,6.0,0.0,0.0,6.0,0.0,20.0,4.32,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
1632,"{'org.alien4cloud.kubernetes.api.types.volume.PersistentVolumeClaimSource': {'derived_from': 'org.alien4cloud.kubernetes.api.types.volume.VolumeBase', 'description': 'PersistentVolumeClaimVolumeSource represents a reference to a PersistentVolumeClaim in the same namespace.\nMore info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims\n', 'properties': {'volume_type': {'type': 'string', 'default': 'persistentVolumeClaim', 'constraints': [{'equal': 'persistentVolumeClaim'}]}, 'spec': {'type': 'org.alien4cloud.kubernetes.api.datatypes.volumes.PersistentVolumeClaimSpec', 'required': False}, 'accessModes': {'description': 'AccessModes contains the desired access modes the volume should have.\nMore info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#access-modes-1\n', 'type': 'string', 'default': 'ReadWriteOnce', 'constraints': [{'valid_values': ['ReadWriteOnce', 'ReadOnlyMany', 'ReadWriteMany']}]}}}}",,23.0,0.0,2.0,18.0,0.0,54.0,5.28,0.0,0.0,0.0,0.0,0.0,0.0,3.0,0.0,0.0,0.0
1230,"{'org.alien4cloud.extended.container.types.ContainerRuntime': {'abstract': True, 'derived_from': 'tosca.nodes.Root', 'description': 'Can host containerized applications. A ContainerRuntime represents the container itself, while DockerContainer is the contanerized application.\n', 'capabilities': {'host': 'org.alien4cloud.extended.container.capabilities.ApplicationHost'}, 'requirements': [{'host': {'capability': 'tosca.capabilities.Container.Docker', 'relationship': 'tosca.relationships.HostedOn', 'occurrences': [0, 1]}}]}}",,14.0,0.0,0.0,11.0,0.0,34.0,4.89,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
189,"{'org.alien4cloud.nodes.Mongod': {'derived_from': 'org.alien4cloud.nodes.AbstractMongod', 'description': 'A node to install Mongodb nosql database.\n', 'requirements': [{'host': {'capability': 'tosca.capabilities.Container', 'node': 'tosca.nodes.Compute', 'relationship': 'tosca.relationships.HostedOn', 'occurrences': [1, 1], 'node_filter': {'capabilities': [{'tosca.capabilities.OperatingSystem': {'properties': [{'type': {'equal': 'linux'}}, {'architecture': {'equal': 'x86_64'}}, {'distribution': {'valid_values': ['debian', 'ubuntu', 'knoppix']}}]}}]}}}], 'metadata': {'icon': '/images/mongodb.jpg'}, 'interfaces': {'Standard': {'create': 'scripts/install-mongo.sh', 'configure': {'inputs': {'DB_IP': {'get_attribute': ['HOST', 'ip_address']}, 'DB_PORT': {'get_property': ['SELF', 'port']}}, 'implementation': 'scripts/configure-mongo.sh'}, 'start': 'scripts/start-mongo.sh', 'stop': 'scripts/stop-mongo.sh'}}}}",,42.0,0.0,0.0,33.0,0.0,60.0,5.81,0.0,0.0,1.0,0.0,0.0,0.0,3.0,0.0,0.0,4.0
1403,"{'radon.nodes.s3_bucket': {'derived_from': 'tosca.nodes.SoftwareComponent', 'properties': {'bucket_name': {'type': 'string', 'description': 'The name of the bucket'}, 'aws_region': {'type': 'string'}}, 'attributes': {'bucket_name': {'type': 'string'}}, 'interfaces': {'Standard': {'type': 'tosca.interfaces.node.lifecycle.Standard', 'inputs': {'bucket_name': {'default': {'get_property': ['SELF', 'bucket_name']}, 'type': 'string'}, 'aws_region': {'default': {'get_property': ['SELF', 'aws_region']}, 'type': 'string'}}, 'operations': {'create': 'playbooks/bucket/create.yml', 'delete': 'playbooks/bucket/undeploy.yml'}}}, 'capabilities': {'bucket': {'type': 'tosca.capabilities.Compute', 'valid_source_types': ['radon.nodes.triggers.bucket_notification']}}}}",,,,,,,,,,,,,,,,,,
1127,{'alien.test.nodes.OracleJVM': {'derived_from': 'alien.test.nodes.JVM'}},,2.0,0.0,0.0,2.0,0.0,3.0,1.58,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
2252,"{'tosca.nodes.indigo.LRMS.FrontEnd.Torque': {'derived_from': 'tosca.nodes.indigo.LRMS.FrontEnd', 'capabilities': {'lrms': {'type': 'tosca.capabilities.indigo.LRMS.Torque'}}, 'interfaces': {'Standard': {'configure': {'implementation': 'https://raw.githubusercontent.com/indigo-dc/tosca-types/dodas_roll/artifacts/lrms/torque/torque_fe_install.yml', 'inputs': {'torque_wn_ips': {'get_property': ['SELF', 'wn_ips']}, 'fe_hybrid_cluster': {'get_property': ['SELF', 'hybrid']}}}}}}}",,18.0,0.0,0.0,14.0,0.0,21.0,4.2,0.0,0.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
147,"{'org.alien4cloud.www.apache.pub.nodes.Apache': {'derived_from': 'tosca.nodes.WebServer', 'abstract': True, 'description': 'The TOSCA Apache Node Type represents an apache component that can be managed and run by a TOSCA Compute Node Type.\n', 'attributes': {'apache_url': {'concat': [{'get_property': ['SELF', 'data_endpoint', 'protocol']}, '://', {'get_attribute': ['HOST', 'public_ip_address']}, ':', {'get_property': ['SELF', 'data_endpoint', 'port']}, '/']}}, 'metadata': {'icon': '/images/Apache_PoweredBy.png'}, 'properties': {'document_root': {'type': 'string', 'default': '/var/www'}}, 'capabilities': {'data_endpoint': 'org.alien4cloud.www.apache.pub.capabilities.ApacheDataEndpoint', 'host': {'type': 'tosca.capabilities.Container', 'valid_source_types': ['org.alien4cloud.www.apache.pub.nodes.WebApplication']}}}}",,34.0,0.0,0.0,21.0,0.0,61.0,5.69,0.0,0.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0
1016,"{'alien.test.nodes.TestComponent': {'derived_from': 'tosca.nodes.SoftwareComponent', 'properties': {'toBeDeleted': {'type': 'string', 'default': 'deleteMe'}}}}",,6.0,0.0,0.0,6.0,0.0,9.0,3.17,0.0,0.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0
444,"{'LoadBalancer': {'derived_from': 'Root', 'description': 'The TOSCA Load Balancer node represents logical function that be used in conjunction with a Floating Address to distribute an application’s traffic (load) across a number of instances of the application (e.g., for a clustered or scaled application).\n', 'properties': {'algorithm': {'type': 'string', 'required': False, 'status': 'experimental'}}, 'capabilities': {'client': {'type': 'Endpoint.Public', 'occurrences': [0, 'UNBOUNDED'], 'description': 'the Floating (IP) client’s on the public network can connect to'}}, 'requirements': [{'application': {'capability': 'Endpoint', 'relationship': 'RoutesTo', 'occurrences': [0, 'UNBOUNDED'], 'description': 'Connection to one or more load balanced applications'}}]}}",,27.0,0.0,0.0,19.0,0.0,87.0,6.04,0.0,0.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0
360,"{'tosca.nodes.indigo.VR.VRouter': {'derived_from': 'tosca.nodes.SoftwareComponent', 'artifacts': {'indigovr_role': {'file': 'indigo-dc.indigovr,master', 'type': 'tosca.artifacts.AnsibleGalaxy.role'}}, 'requirements': [{'central_point': {'capability': 'tosca.capabilities.Endpoint', 'node': 'tosca.nodes.indigo.VR.CentralPoint', 'relationship': 'tosca.relationships.DependsOn'}}], 'interfaces': {'Standard': {'configure': {'implementation': 'https://raw.githubusercontent.com/indigo-dc/tosca-types/master/artifacts/indigovr/vrouter_install.yml', 'inputs': {'INDIGOVR_CENTRALPOINT_IP': {'get_attribute': ['SELF', 'central_point', 'ip_address']}}}}}}}",,21.0,0.0,0.0,18.0,0.0,28.0,4.74,0.0,0.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
2660,{'org.ystia.yorc.pub.relationships.JoinConsulAgent': {'derived_from': 'org.ystia.yorc.experimental.consul.pub.relationships.JoinConsulAgent'}},,2.0,0.0,0.0,2.0,0.0,3.0,1.58,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
2530,"{'tosca.relationships.ConnectsTo': {'metadata': {'puccini.normative': 'true', 'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.0]', 'specification.location': '5.6.4'}, 'description': 'This type represents a network connection relationship between two nodes.', 'derived_from': 'tosca.relationships.Root', 'valid_target_types': ['tosca.capabilities.Endpoint'], 'properties': {'credential': {'type': 'tosca.datatypes.Credential', 'required': False}}}}",,14.0,0.0,0.0,12.0,0.0,29.0,4.79,0.0,0.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0
1217,"{'tosca.nodes.Mysql': {'derived_from': 'tosca.nodes.AbstractMysql', 'description': 'A node that represent MySQL database with data on a attached volume.\n', 'requirements': [{'host': {'capability': 'tosca.capabilities.Container', 'node': 'tosca.nodes.Compute', 'relationship': 'tosca.relationships.HostedOn', 'occurrences': [1, 1], 'node_filter': {'capabilities': [{'tosca.capabilities.OperatingSystem': {'properties': [{'type': {'equal': 'linux'}}, {'architecture': {'equal': 'x86_64'}}, {'distribution': {'valid_values': ['debian', 'ubuntu', 'knoppix']}}]}}]}}}], 'properties': {'port': {'type': 'integer', 'default': 3306, 'description': 'The port on which the database will listen to data.'}, 'name': {'type': 'string', 'required': True, 'default': 'wordpress', 'description': 'The logical name of the database.'}, 'db_user': {'type': 'string', 'default': 'pass', 'description': 'The user account used for database administration.'}, 'db_password': {'type': 'string', 'default': 'pass', 'description': 'The password associated with the user account for database administration.'}, 'bind_address': {'type': 'boolean', 'default': True, 'required': False, 'description': 'If true,the server accepts TCP/IP connections on all server host IPv4 interfaces.'}, 'storage_path': {'type': 'string', 'default': '/mountedStorage', 'constraints': [{'valid_values': ['/mountedStorage', '/var/mysql']}]}}, 'interfaces': {'Standard': {'create': 'scripts/install_mysql.sh', 'start': {'inputs': {'VOLUME_HOME': {'get_property': ['SELF', 'storage_path']}, 'PORT': {'get_property': ['SELF', 'port']}, 'DB_NAME': {'get_property': ['SELF', 'name']}, 'DB_USER': {'get_property': ['SELF', 'db_user']}, 'DB_PASSWORD': {'get_property': ['SELF', 'db_password']}, 'BIND_ADDRESS': {'get_property': ['SELF', 'bind_address']}}, 'implementation': 'scripts/start_mysql.sh'}}}, 'artifacts': [{'configs': {'file': 'configs', 'type': 'tosca.artifacts.File'}}]}}",,89.0,0.0,0.0,69.0,0.0,169.0,6.39,0.0,0.0,1.0,0.0,0.0,0.0,9.0,0.0,0.0,2.0
2436,"{'tosca.relationships.indigo.AttachesTo': {'derived_from': 'tosca.relationships.AttachesTo', 'properties': {'fs_type': {'type': 'string', 'required': False, 'default': None}}}}",,7.0,0.0,0.0,7.0,0.0,11.0,3.46,0.0,0.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0
2484,"{'org.alien4cloud.diamond.collectors.relationships.DiamondCloudifyHostpoolCollector': {'derived_from': 'tosca.relationships.ConnectsTo', 'valid_target_types': ['org.alien4cloud.cloudify.hostpool.pub.capabilities.HostPoolServiceApi'], 'properties': {'collector_name': {'type': 'string', 'default': 'CloudifyHostpoolCollector'}}, 'interfaces': {'Configure': {'pre_configure_source': {'inputs': {'ANSIBLE_VERBOSE': False, 'PLAYBOOK_ENTRY': 'collect_custom.yml', 'datasource_name': {'get_attribute': ['SOURCE', 'datasource_name']}, 'collectors_conf_path': {'get_attribute': ['SOURCE', 'collectors_conf_path']}, 'dashboard_dir': {'get_attribute': ['SOURCE', 'dashboard_dir']}, 'collector_name': {'get_property': ['SELF', 'collector_name']}}, 'implementation': 'playbook/playbook.ansible'}, 'pre_configure_target': {'inputs': {'ANSIBLE_VERBOSE': False, 'PLAYBOOK_ENTRY': 'install_custom_collector.yml', 'collectors_path': {'get_attribute': ['SOURCE', 'collectors_path']}, 'collector_name': {'get_property': ['SELF', 'collector_name']}, 'hostpool_url': {'concat': [{'get_property': ['TARGET', 'cloudify_hostpool', 'protocol']}, '://', {'get_attribute': ['TARGET', 'cloudify_hostpool', 'ip_address']}, ':', {'get_property': ['TARGET', 'cloudify_hostpool', 'port']}]}}, 'implementation': 'playbook/playbook.ansible'}}}}}",,60.0,0.0,0.0,36.0,0.0,69.0,5.08,0.0,0.0,1.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0
1396,"{'tosca.nodes.Database': {'derived_from': 'tosca.nodes.Root', 'description': 'The TOSCA Database node represents a logical database that can be managed and hosted by a TOSCA DBMS node.', 'properties': {'name': {'type': 'string', 'description': 'the logical name of the database', 'required': True}, 'port': {'type': 'integer', 'description': 'the port the underlying database service will listen to for data', 'required': False}, 'user': {'type': 'string', 'description': 'the optional user account name for DB administration', 'required': False}, 'password': {'type': 'string', 'description': 'the optional password for the DB user account', 'required': False}}, 'requirements': [{'host': 'tosca.capabilities.Container', 'relationship': 'tosca.relationships.HostedOn'}], 'capabilities': {'database_endpoint': {'type': 'tosca.capabilities.Endpoint.Database'}}}}",,27.0,0.0,0.0,26.0,0.0,90.0,5.43,0.0,0.0,0.0,0.0,0.0,0.0,4.0,0.0,0.0,0.0
1765,{'cloudshell.nodes.Cisco CRS1': {'derived_from': 'cloudshell.nodes.resource'}},,2.0,0.0,0.0,2.0,0.0,3.0,2.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
2598,"{'tosca.relationships.HostedOn': {'derived_from': 'tosca.relationships.DependsOn', 'description': 'Relationship to use to describe that the source is hosted (installed/ deployed) on the target node.', 'valid_target_types': ['tosca.capabilities.Container'], 'properties': {'password': {'type': 'string', 'description': 'user_pass', 'required': False, 'constraints': [{'min_length': 6}, {'max_length': 10}]}}}}",,14.0,0.0,0.0,12.0,0.0,35.0,4.96,0.0,0.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0
1082,{'alien.test.nodes.RockitJVM': {'derived_from': 'alien.test.nodes.JVM'}},,2.0,0.0,0.0,2.0,0.0,3.0,1.58,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
2731,"{'org.ystia.monitoring.relationships.GrafanaConnectToGraphite': {'derived_from': 'tosca.relationships.ConnectsTo', 'properties': {'datasource_name': {'type': 'string', 'required': True, 'default': 'Graphite_DS'}}, 'valid_target_types': ['org.ystia.monitoring.service.pub.HttpEndpoint']}}",,9.0,0.0,0.0,8.0,0.0,13.0,3.7,0.0,0.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0
2758,"{'my.relationships.MockServerClient': {'derived_from': 'tosca.relationships.DependsOn', 'valid_target_types': ['my.nodes.MockServer']}}",,4.0,0.0,0.0,3.0,0.0,5.0,2.32,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
1469,"{'yorc.nodes.slurm.Compute': {'derived_from': 'yorc.nodes.Compute', 'properties': {'gres': {'type': 'string', 'required': False, 'description': 'Specifies a comma delimited list of generic consumable resources. The format of each entry on the list is ""name[[:type]:count]"". The name is that of the consumable resource. The count is the number of those resources with a default value of 1. The specified resources will be allocated to the job on each node. The available generic consumable resources is configurable by the system administrator. Examples of use include ""--gres=gpu:2,mic=1"", ""--gres=gpu:kepler:2"", and ""--gres=help"".\n'}, 'constraint': {'type': 'string', 'required': False, 'description': 'Nodes can have features assigned to them by the Slurm administrator. Users can specify which of these features are required by their job using the constraint option. Only nodes having features matching the job constraints will be used to satisfy the request. Multiple constraints may be specified with AND, OR, matching OR, resource counts, etc. (some operators are not supported on all system types).\n'}, 'partition': {'type': 'string', 'required': False, 'description': 'Slurm partition where the nodes will be deployed'}, 'job_name': {'type': 'string', 'required': False, 'description': 'Specify a name for the job allocation. The specified name will appear along with the job id.'}, 'account': {'type': 'string', 'description': 'Charge resources used by this allocation to specified account. May be mandatory according to configuration.\n', 'required': False}, 'reservation': {'type': 'string', 'description': 'Allocate resources from the named reservation.\n', 'required': False}}, 'capabilities': {'endpoint': {'type': 'yorc.capabilities.slurm.Endpoint'}}, 'attributes': {'cuda_visible_devices': {'type': 'string', 'description': 'Coma separated list of visibles GPU devices for the compute.'}, 'job_id': {'type': 'string', 'description': 'The ID of the job allocation.'}, 'partition': {'type': 'string', 'description': 'Slurm partition where the nodes are deployed.'}}}}",,53.0,0.0,0.0,40.0,0.0,262.0,6.5,0.0,0.0,0.0,0.0,0.0,0.0,6.0,0.0,0.0,0.0
937,"{'tosca.nodes.DBMS': {'derived_from': 'tosca.nodes.SoftwareComponent', 'properties': {'root_password': {'type': 'string', 'required': False, 'description': 'the optional root password for the DBMS service'}, 'port': {'type': 'integer', 'required': False, 'description': 'The port the DBMS service will listen to for data and requests.\n'}}, 'capabilities': {'host': {'type': 'tosca.capabilities.Compute', 'valid_source_types': ['tosca.nodes.Database']}}}}",,16.0,0.0,0.0,15.0,0.0,42.0,4.83,0.0,0.0,0.0,0.0,0.0,0.0,2.0,0.0,0.0,0.0
794,"{'yorc.nodes.openstack.ServerGroup': {'derived_from': 'tosca.nodes.Root', 'properties': {'name': {'type': 'string', 'description': 'The name of the server group.', 'required': True}, 'policy': {'type': 'string', 'description': 'The policy applied to the server group.', 'required': True}}, 'attributes': {'id': {'type': 'string', 'description': 'The unique id of the server group.'}}, 'capabilities': {'group': {'type': 'yorc.capabilities.Group', 'valid_source_types': ['yorc.nodes.openstack.Compute']}}, 'interfaces': {'Standard': {'create': {'implementation': {'file': 'embedded', 'type': 'yorc.artifacts.openstack.Deployment'}}, 'delete': {'implementation': {'file': 'embedded', 'type': 'yorc.artifacts.openstack.Deployment'}}}}}}",,30.0,0.0,0.0,29.0,0.0,61.0,4.88,0.0,0.0,1.0,0.0,0.0,0.0,2.0,0.0,0.0,0.0
1248,"{'openstack.nodes.Glance': {'derived_from': 'openstack.nodes.Project_Requiring_MariaDB_and_Keystone', 'capabilities': {'glance': {'description': 'Keystone capability', 'type': 'openstack.capabilities.Endpoint.Glance'}}}}",,6.0,0.0,0.0,6.0,0.0,10.0,3.32,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
417,"{'tosca.nodes.Compute': {'derived_from': 'tosca.nodes.Abstract.Compute', 'description': 'The TOSCA Compute node represents one or more real or virtual processors of software applications or services along with other essential local resources.  Collectively, the resources the compute node represents can logically be viewed as a (real or virtual) “server”.\n', 'attributes': {'private_address': {'type': 'string', 'description': 'The primary private IP address assigned by the cloud provider that applications may use to access the Compute node.'}, 'public_address': {'type': 'string', 'description': 'The primary public IP address assigned by the cloud provider that applications may use to access the Compute node.'}, 'networks': {'type': 'map', 'entry_schema': {'type': 'tosca.datatypes.network.NetworkInfo'}}, 'ports': {'type': 'map', 'entry_schema': {'type': 'tosca.datatypes.network.PortInfo'}}}, 'requirements': [{'local_storage': {'capability': 'tosca.capabilities.Attachment', 'node': 'tosca.nodes.BlockStorage', 'relationship': 'tosca.relationships.AttachesTo', 'occurrences': [0, 'UNBOUNDED']}}], 'capabilities': {'host': {'type': 'tosca.capabilities.Compute', 'valid_source_types': ['tosca.nodes.SoftwareComponent']}, 'os': {'type': 'tosca.capabilities.OperatingSystem'}, 'endpoint': {'type': 'tosca.capabilities.Endpoint.Admin'}, 'scalable': {'type': 'tosca.capabilities.Scalable'}, 'binding': {'type': 'tosca.capabilities.network.Bindable'}}}}",,44.0,0.0,0.0,36.0,0.0,132.0,6.14,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
1528,"{'tosca.capabilities.openstack.network.load_balancer.endpoint': {'derived_from': 'tosca.capabilities.Endpoint.Public', 'properties': {'network_id': {'type': 'string'}}}}",,5.0,0.0,0.0,5.0,0.0,7.0,2.81,0.0,0.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0
2123,"{'sodalite.nodes.hpc.resources.node-6.novalocal': {'derived_from': 'tosca.nodes.Compute', 'properties': {'name': {'type': 'string', 'required': True, 'default': 'node-6.novalocal'}, 'gpus': {'type': 'integer', 'required': True, 'default': 1}, 'total_sockets': {'type': 'integer', 'required': True, 'default': 2}, 'total_numa_nodes': {'type': 'integer', 'required': True, 'default': 2}, 'total_cores': {'type': 'integer', 'required': True, 'default': 40}, 'available_sockets': {'type': 'integer', 'required': True, 'default': 2}, 'available_numa_nodes': {'type': 'integer', 'required': True, 'default': 2}, 'available_cores': {'type': 'integer', 'required': True, 'default': 40}, 'operating_system': {'type': 'string', 'required': False, 'default': 'linux'}, 'available_memory_kb': {'type': 'integer', 'required': False, 'default': 128471284}}}}",,43.0,0.0,0.0,43.0,0.0,74.0,4.02,0.0,0.0,0.0,0.0,0.0,0.0,10.0,0.0,0.0,0.0
926,"{'my_first_node_type': {'derived_from': 'tosca.nodes.Root', 'attributes': {'my_attribute': {'type': 'string'}}, 'properties': {'my_property': {'type': 'string'}}}}",,8.0,0.0,0.0,8.0,0.0,11.0,3.1,0.0,0.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0
2627,{'my.http.relationship.extended': {'derived_from': 'my.http.relationship'}},,2.0,0.0,0.0,2.0,0.0,3.0,1.58,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
6,{'tosca.nodes.nfv.VL.ELAN': {'derived_from': 'tosca.nodes.nfv.VL'}},,2.0,0.0,0.0,2.0,0.0,3.0,1.58,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
885,"{'yorc.tests.nodes.imports.OpImplementationArtifact': {'derived_from': 'tosca.nodes.Root', 'properties': {'p1': {'type': 'string', 'default': 'Val1'}}, 'interfaces': {'Standard': {'create': {'inputs': {'L1': 1, 'L2': {'get_property': ['SELF', 'p1']}}, 'implementation': {'file': 'scripts/create.sh', 'type': 'tosca.artifacts.Implementation.Bash'}}}}}}",,18.0,0.0,0.0,16.0,0.0,24.0,4.42,0.0,0.0,1.0,0.0,0.0,0.0,1.0,0.0,0.0,1.0
93,"{'org.alien4cloud.monitoring.diamond.agent_linux.nodes.DiamondLinuxAgent': {'description': 'Deploy a Diamond Agent on linux.\n', 'derived_from': 'org.alien4cloud.monitoring.diamond.pub.nodes.DiamondAgent', 'properties': {'datasource_name': {'type': 'string', 'description': 'The datasource that connects grafana to graphite.\nWe need it to prepare grafana dashboards.\n', 'required': True, 'default': 'Graphite_DS'}, 'collectors_path': {'type': 'string', 'description': 'The path where the collector sources are (read only).', 'required': True, 'default': '/opt/ansible_diamond/env/share/diamond/collectors'}, 'collectors_conf_path': {'type': 'string', 'description': 'The path where the collector configuration are (read only).', 'required': True, 'default': '/etc/ansible_diamond/collectors'}}, 'attributes': {'dashboard_dir': {'get_operation_output': ['SELF', 'Standard', 'create', 'dashboard_dir']}, 'grafana_url': {'get_operation_output': ['SELF', 'Standard', 'configure', 'grafana_url']}, 'grafana_user': {'get_operation_output': ['SELF', 'Standard', 'configure', 'grafana_user']}, 'grafana_password': {'get_operation_output': ['SELF', 'Standard', 'configure', 'grafana_password']}, 'grafana_dashboads_urls': {'get_operation_output': ['SELF', 'Standard', 'start', 'grafana_dashboads_urls']}}, 'requirements': [{'data_endpoint': {'capability': 'org.alien4cloud.monitoring.pub.capabilities.GraphiteDataEndpoint', 'relationship': 'org.alien4cloud.monitoring.diamond.agent_linux.relationships.DiamondLinuxAgentConnectsToGraphite', 'occurrences': [0, 1]}}, {'grafana': {'capability': 'org.alien4cloud.monitoring.pub.capabilities.GrafanaHttpEndpoint', 'relationship': 'org.alien4cloud.monitoring.diamond.agent_linux.relationships.DiamondLinuxAgentConnectsToGrafana', 'occurrences': [0, 1]}}, {'host': {'capability': 'tosca.capabilities.Container', 'node': 'tosca.nodes.Compute', 'relationship': 'tosca.relationships.HostedOn', 'occurrences': [1, 1], 'node_filter': {'capabilities': [{'tosca.capabilities.OperatingSystem': {'properties': [{'type': {'equal': 'linux'}}, {'architecture': {'equal': 'x86_64'}}]}}]}}}], 'interfaces': {'Standard': {'create': {'inputs': {'ANSIBLE_VERBOSE': False, 'PLAYBOOK_ENTRY': 'create.yml', 'collectors_conf_path': {'get_property': ['SELF', 'collectors_conf_path']}}, 'implementation': 'playbook/playbook.ansible'}, 'configure': {'inputs': {'ANSIBLE_VERBOSE': False, 'PLAYBOOK_ENTRY': 'configure.yml', 'datasource_name': {'get_property': ['SELF', 'datasource_name']}}, 'implementation': 'playbook/playbook.ansible'}, 'start': {'inputs': {'ANSIBLE_VERBOSE': False, 'PLAYBOOK_ENTRY': 'start.yml', 'dashboard_dir': {'get_attribute': ['SELF', 'dashboard_dir']}, 'grafana_url': {'get_attribute': ['SELF', 'grafana_url']}, 'grafana_user': {'get_attribute': ['SELF', 'grafana_user']}, 'grafana_password': {'get_attribute': ['SELF', 'grafana_password']}}, 'implementation': 'playbook/playbook.ansible'}, 'stop': {'inputs': {'ANSIBLE_VERBOSE': False, 'PLAYBOOK_ENTRY': 'stop.yml'}, 'implementation': 'playbook/playbook.ansible'}, 'delete': {'inputs': {'ANSIBLE_VERBOSE': False, 'PLAYBOOK_ENTRY': 'delete.yml', 'dashboard_dir': {'get_attribute': ['SELF', 'dashboard_dir']}, 'grafana_url': {'get_attribute': ['SELF', 'grafana_url']}, 'grafana_user': {'get_attribute': ['SELF', 'grafana_user']}, 'grafana_password': {'get_attribute': ['SELF', 'grafana_password']}}, 'implementation': 'playbook/playbook.ansible'}}}}}",,146.0,0.0,0.0,99.0,0.0,216.0,6.11,0.0,0.0,1.0,0.0,0.0,0.0,5.0,0.0,0.0,0.0
1320,"{'org.ystia.ssl.ansible.certificates.nodes.SSLCertificateGenerator': {'derived_from': 'tosca.nodes.SoftwareComponent', 'metadata': {'icon': '/icons/ssl-certificate.png'}, 'properties': {'common_name': {'type': 'string', 'description': 'Certificate common name'}, 'key_path': {'type': 'string', 'description': 'Path of a directory where private keys should be stored.'}, 'certificate_path': {'type': 'string', 'description': 'Path of a directory where certificates should be stored.'}, 'linux_owner': {'type': 'string', 'description': 'Linux user that should be the owner of the certificates and keys. This user should have rights to write on certificate_path and key_path. By default it is the user used to connect to the machine.\n', 'required': False, 'default': ''}, 'key_name': {'type': 'string', 'required': False, 'description': ""Name including extention of the private key file. By default it will be the node template within the topology + '.key'"", 'default': ''}, 'certificate_name': {'type': 'string', 'required': False, 'description': ""Name including extention of the certificate file. By default it will be the node template within the topology + '.pem'"", 'default': ''}, 'private_key': {'type': 'string', 'required': False, 'description': 'Content of a private key to use to generate the certificate', 'default': ''}, 'extra_sub_alt_name': {'type': 'string', 'required': False, 'default': '', 'description': ""Optional coma separated list of subject alternative names (format is 'IP:<An IP Address>,DNS:<A DNS Name>')""}, 'extended_key_usage': {'type': 'list', 'entry_schema': {'type': 'string'}, 'description': 'Additional restrictions (e.g. client authentication, server authentication) on the allowed purposes for which the public key may be used.', 'required': False, 'default': []}, 'ca_key': {'type': 'string', 'description': 'Private key of the Certificate Authority', 'required': True}, 'ca_certificate': {'type': 'string', 'description': 'Certificate Authority certificate', 'required': True}, 'ca_passphrase': {'type': 'string', 'description': 'Pass pharse for the Certificate Authority private key', 'default': '', 'required': False}}, 'interfaces': {'Standard': {'create': 'playbooks/create.yml', 'configure': {'inputs': {'KEY_NAME': {'get_property': ['SELF', 'key_name']}, 'CERTIFICATE_NAME': {'get_property': ['SELF', 'certificate_name']}, 'KEY_PATH': {'get_property': ['SELF', 'key_path']}, 'CERTIFICATE_PATH': {'get_property': ['SELF', 'certificate_path']}, 'GEN_CERT_BECOME_USER': {'get_property': ['SELF', 'linux_owner']}, 'PRIVATE_KEY': {'get_property': ['SELF', 'private_key']}, 'EXTRA_SUB_ALT_NAME': {'get_property': ['SELF', 'extra_sub_alt_name']}, 'COMMON_NAME': {'get_property': ['SELF', 'common_name']}, 'CA_KEY': {'get_property': ['SELF', 'ca_key']}, 'CA_CERTIFICATE': {'get_property': ['SELF', 'ca_certificate']}, 'CA_PASSPHRASE': {'get_property': ['SELF', 'ca_passphrase']}, 'EXTENDED_KEY_USAGE': {'get_property': ['SELF', 'extended_key_usage']}, 'IP_ADDRESS': {'get_attribute': ['HOST', 'ip_address']}, 'PUBLIC_ADDRESS': {'get_attribute': ['HOST', 'public_address']}}, 'implementation': 'playbooks/configure.yml'}, 'delete': {'inputs': {'KEY_NAME': {'get_property': ['SELF', 'key_name']}, 'CERTIFICATE_NAME': {'get_property': ['SELF', 'certificate_name']}, 'KEY_PATH': {'get_property': ['SELF', 'key_path']}, 'CERTIFICATE_PATH': {'get_property': ['SELF', 'certificate_path']}, 'GEN_CERT_BECOME_USER': {'get_property': ['SELF', 'linux_owner']}}, 'implementation': 'playbooks/delete.yml'}}}}}",,150.0,0.0,0.0,106.0,0.0,337.0,6.48,0.0,0.0,1.0,0.0,0.0,0.0,12.0,0.0,0.0,0.0
1299,"{'org.ystia.kubernetes.pub.nodes.KubernetesMaster': {'abstract': True, 'derived_from': 'tosca.nodes.Root', 'tags': {'icon': '/images/kubernetes-master-icon.png'}, 'description': 'A KubernetesMaster contains Kubernetes services like the API server, the podmaster and so on.\n', 'capabilities': {'api_server': 'org.ystia.kubernetes.pub.capabilities.KubernetesAPIServer', 'app_host': 'org.ystia.kubernetes.pub.capabilities.AppHosting'}}}",,10.0,0.0,0.0,9.0,0.0,28.0,4.74,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
1229,"{'org.alien4cloud.nodes.Application.Docker.Mongo': {'derived_from': 'tosca.nodes.Container.Application.DockerContainer', 'capabilities': {'mongo_db': {'type': 'org.alien4cloud.capabilities.endpoint.docker.Mongo'}}, 'interfaces': {'Standard': {'create': {'implementation': {'file': 'mongo:latest', 'repository': 'docker', 'type': 'tosca.artifacts.Deployment.Image.Container.Docker'}}}}}}",,12.0,0.0,0.0,12.0,0.0,17.0,3.97,0.0,0.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
590,"{'radon.nodes.apache.openwhisk.OpenWhiskFunction': {'derived_from': 'radon.nodes.abstract.Function', 'metadata': {'targetNamespace': 'radon.nodes.apache.openwhisk', 'abstract': 'false', 'final': 'false'}, 'attributes': {'rest_api_endpoint': {'type': 'string'}}, 'properties': {'function_name': {'type': 'string'}, 'function_package_name': {'type': 'string'}, 'function_runtime': {'type': 'string', 'constraints': [{'valid_values': ['go_1_11', 'java_8', 'ballerina_0_990', 'nodejs_12', 'nodejs_10', 'nodejs_8', 'nodejs_6', 'php_7_3', 'python_2', 'python_3', 'ruby_2_5', 'swift_4_2', 'dotnet_2_2']}]}, 'entry_point': {'type': 'string', 'required': False}}, 'requirements': [{'host': {'capability': 'tosca.capabilities.Container', 'node': 'radon.nodes.apache.openwhisk.OpenWhiskPlatform', 'relationship': 'tosca.relationships.HostedOn', 'occurrences': [1, 1]}}], 'capabilities': {'invocable': {'occurrences': [0, 'UNBOUNDED'], 'type': 'radon.capabilities.Invocable'}}, 'interfaces': {'Standard': {'type': 'tosca.interfaces.node.lifecycle.Standard', 'inputs': {'FUNCTION_NAME': {'type': 'string', 'required': True, 'default': {'get_property': ['SELF', 'function_name']}}, 'FUNCTION_RUNTIME': {'type': 'string', 'required': True, 'default': {'get_property': ['SELF', 'function_runtime']}}, 'ENTRY_POINT': {'type': 'string', 'required': False, 'default': {'get_property': ['SELF', 'entry_point']}}}}}}}",,73.0,0.0,0.0,50.0,0.0,94.0,5.54,0.0,3.0,1.0,0.0,0.0,0.0,4.0,0.0,0.0,0.0
1720,"{'tosca.nodes.indigo.Powerfit': {'derived_from': 'tosca.nodes.indigo.HaddockApp', 'properties': {'haddock_app_name': {'type': 'string', 'required': True, 'default': 'powerfit', 'constraints': [{'equal': 'powerfit'}]}}}}",,9.0,0.0,0.0,9.0,0.0,14.0,3.66,0.0,0.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0
1224,"{'example.DatabaseSubsystem': {'derived_from': 'tosca.nodes.Root', 'capabilities': {'database_endpoint': {'type': 'tosca.capabilities.Endpoint.Database'}}}}",,5.0,0.0,0.0,5.0,0.0,7.0,2.81,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
171,"{'org.alien4cloud.monitoring.pub.nodes.GrafanaService': {'derived_from': 'tosca.nodes.SoftwareComponent', 'abstract': True, 'metadata': {'icon': '/images/grafana.png'}, 'capabilities': {'http_endpoint': {'type': 'org.alien4cloud.monitoring.pub.capabilities.GrafanaHttpEndpoint', 'occurrences': [0, 'UNBOUNDED'], 'description': 'UI endpoint'}}}}",,12.0,0.0,0.0,10.0,0.0,18.0,4.17,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
964,"{'my_company.my_types.MyAppNodeType': {'derived_from': 'tosca.nodes.SoftwareComponent', 'description': 'My company’s custom applicaton', 'properties': {'my_app_password': {'type': 'string', 'default': 'default', 'description': 'application password', 'constraints': [{'min_length': 6}, {'max_length': 10}]}, 'my_app_duration': {'type': 'scalar-unit.time', 'default': '1 d', 'constraints': [{'greater_than': '1 h'}]}, 'my_app_size': {'type': 'scalar-unit.size', 'default': '1 GB', 'constraints': [{'less_than': '1 TB'}]}, 'my_app_port': {'type': 'integer', 'description': 'application port number'}}, 'requirements': [{'host': {'capability': 'mytypes.mycapabilities.MyCapabilityTypeName', 'node': 'tosca.nodes.Compute', 'relationship': 'tosca.relationships.HostedOn', 'capability_name': 'host', 'occurrences': [1, 1]}}, {'other': {'capability': 'tosca.capabilities.Endpoint', 'occurrences': [0, 'unbounded']}}], 'interfaces': ['Standard']}}",,,,,,,,,,,,,,,,,,
2551,"{'yorc.tests.relationships.OpImplementationArtifact': {'derived_from': 'tosca.relationships.Root', 'interfaces': {'Configure': {'pre_configure_source': {'implementation': {'file': 'something', 'type': 'tosca.artifacts.Implementation.Bash'}}}}}}",,8.0,0.0,0.0,8.0,0.0,11.0,3.46,0.0,0.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
568,"{'org.alien4cloud.elasticsearch.pub.nodes.ElasticSearchService': {'derived_from': 'org.alien4cloud.java.pub.nodes.JavaSoftware', 'description': 'Elasticsearch is a distributed, RESTful search and analytics engine capable of solving a growing number of use cases. As the heart of the Elastic Stack, it centrally stores your data so you can discover the expected and uncover the unexpected.\n', 'tags': {'icon': 'images/elasticsearch.png'}, 'capabilities': {'elasticsearch': {'type': 'org.alien4cloud.elasticsearch.pub.capabilities.ElasticSearchTransportAPI', 'occurrences': [0, 'UNBOUNDED']}, 'http': {'type': 'org.alien4cloud.elasticsearch.pub.capabilities.ElasticSearchRestAPI', 'occurrences': [0, 'UNBOUNDED']}}}}",,19.0,0.0,0.0,12.0,0.0,60.0,5.49,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
1149,"{'org.alien4cloud.test.TestComputeWithGetOperationOutput': {'derived_from': 'tosca.nodes.Compute', 'properties': {'customHostName': {'type': 'string'}}, 'attributes': {'old_hostname': {'get_operation_output': ['SELF', 'Standard', 'create', 'old_hostnane']}, 'new_hostname': {'get_operation_output': ['SELF', 'Standard', 'configure', 'new_hostnane']}}, 'interfaces': {'Standard': {'create': 'scripts/dummy.sh', 'configure': {'inputs': {'customHostName': {'get_property': ['SELF', 'customHostName']}, 'OUTPUT_FROM_CREATE': {'get_operation_output': ['SELF', 'Standard', 'create', 'output_from_create']}}, 'implementation': 'scripts/dummy.sh'}}}}}",,34.0,0.0,0.0,20.0,0.0,38.0,4.35,0.0,0.0,1.0,0.0,0.0,0.0,1.0,0.0,0.0,2.0
2706,"{'org.ystia.relationships.HostedOn': {'derived_from': 'tosca.relationships.HostedOn', 'description': 'Abstract Ystia HostedOn relationships', 'abstract': True, 'artifacts': [{'utils_scripts': {'type': 'tosca.artifacts.File', 'file': 'utils_scripts'}}]}}",,8.0,0.0,0.0,8.0,0.0,16.0,3.88,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
2271,"{'tosca.nodes.indigo.HadoopSlave': {'derived_from': 'tosca.nodes.SoftwareComponent', 'properties': {'master_ip': {'required': True, 'type': 'string'}}, 'artifacts': {'hadoop_role': {'file': 'indigo-dc.hadoop', 'type': 'tosca.artifacts.AnsibleGalaxy.role'}}, 'interfaces': {'Standard': {'configure': {'implementation': 'https://raw.githubusercontent.com/indigo-dc/tosca-types/dodas_roll/artifacts/hadoop/hadoop_wn_install.yml', 'inputs': {'hadoop_master_ip': {'get_property': ['SELF', 'master_ip']}}}}}}}",,19.0,0.0,0.0,17.0,0.0,25.0,4.48,0.0,0.0,1.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0
1452,"{'org.ystia.yorc.samples.job.slurm.singularity.nodes.MNISTComponent': {'derived_from': 'yorc.nodes.slurm.SingularityJob', 'tags': {'icon': '/images/singularity.png'}, 'artifacts': [{'bin': {'type': 'tosca.artifacts.File', 'file': 'bin'}}, {'data': {'type': 'tosca.artifacts.File', 'file': 'data'}}], 'interfaces': {'tosca.interfaces.node.lifecycle.Runnable': {'submit': {'implementation': {'file': 'docker://tensorflow/tensorflow:1.13.1-py3 ', 'repository': 'docker', 'type': 'yorc.artifacts.Deployment.SlurmJobImage'}}}}}}",,18.0,0.0,0.0,18.0,0.0,27.0,4.25,0.0,0.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
2112,"{'sodalite.nodes.OpenStack.SecurityRules': {'derived_from': 'tosca.nodes.Root', 'properties': {'group_name': {'type': 'string', 'description': 'Name of the security group in openstack.', 'required': True}, 'ports': {'type': 'map', 'entry_schema': {'type': 'sodalite.datatypes.OpenStack.SecurityRule'}, 'description': 'A map of security rules definition defining protocol, porte-ranges, remoteIPs, direction.', 'required': True, 'constraints': [{'min_length': 1}]}, 'group_description': {'description': 'Description of the security group in openstack.', 'required': True, 'type': 'string'}, 'env': {'description': 'Optional OpenStack environment', 'type': 'map', 'entry_schema': {'type': 'sodalite.datatypes.OpenStack.env'}, 'required': False, 'default': None}}, 'interfaces': {'Standard': {'type': 'tosca.interfaces.node.lifecycle.Standard', 'operations': {'create': {'implementation': {'primary': 'playbooks/security_rule_create.yml', 'dependencies': ['playbooks/egi_refresh_token.yml']}, 'inputs': {'ports': {'type': 'map', 'default': {'get_property': ['SELF', 'ports']}}, 'group_name': {'type': 'string', 'default': {'get_property': ['SELF', 'group_name']}}, 'group_description': {'type': 'string', 'default': {'get_property': ['SELF', 'group_description']}}, 'env': {'type': 'map', 'default': {'get_property': ['SELF', 'env']}}}}, 'delete': {'implementation': {'primary': 'playbooks/security_rule_delete.yml', 'dependencies': ['playbooks/egi_refresh_token.yml']}, 'inputs': {'group_name': {'type': 'string', 'default': {'get_property': ['SELF', 'group_name']}}, 'env': {'type': 'map', 'default': {'get_property': ['SELF', 'env']}}}}}}}}}",,79.0,0.0,0.0,64.0,0.0,128.0,5.37,0.0,6.0,1.0,0.0,0.0,0.0,4.0,0.0,0.0,0.0
2467,"{'org.alien4cloud.consul.relationships.ConnectToConsulAgent': {'derived_from': 'tosca.relationships.ConnectsTo', 'valid_target_types': ['org.alien4cloud.consul.pub.capabilities.ConsulAgent'], 'interfaces': {'Configure': {'pre_configure_source': {'inputs': {'TLS_ENABLED': {'get_property': ['TARGET', 'tls_enabled']}, 'CA_PEM': {'get_property': ['SOURCE', 'ca_pem']}, 'CA_KEY': {'get_property': ['SOURCE', 'ca_key']}, 'CA_PASSPHRASE': {'get_property': ['SOURCE', 'ca_passphrase']}, 'AGENT_IP': {'get_attribute': ['TARGET', 'ip_address']}, 'AGENT_API_PORT': {'get_property': ['TARGET', 'consul_agent', 'port']}}, 'implementation': 'scripts/ConnectToConsulAgent/pre_configure_source.sh'}}}, 'artifacts': [{'ssl': {'file': 'ssl', 'type': 'tosca.artifacts.File'}}, {'commons': {'file': 'scripts/commons', 'type': 'tosca.artifacts.File'}}]}}",,41.0,0.0,0.0,27.0,0.0,47.0,4.94,0.0,0.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,1.0
234,"{'org.alien4cloud.lang.java.pub.nodes.JavaSoftware': {'abstract': True, 'derived_from': 'tosca.nodes.Root', 'description': 'The JavaSoftware node represents a generic software component that can be launch by Java.', 'metadata': {'icon': 'images/javabean.png'}, 'requirements': [{'java': {'capability': 'org.alien4cloud.lang.java.pub.capabilities.JDK', 'relationship': 'org.alien4cloud.lang.java.pub.relationships.JavaSoftwareHostedOnJDK', 'occurrences': [1, 1]}}]}}",,14.0,0.0,0.0,11.0,0.0,32.0,4.94,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
185,"{'org.alien4cloud.mock.pub.nodes.AbstractMock': {'abstract': True, 'derived_from': 'tosca.nodes.SoftwareComponent', 'properties': {'duration': {'type': 'integer', 'description': 'The total duration for all operations (create, configure, start) in seconds.\nEach one is pondered in implementation.\n', 'required': True, 'default': 120}, 'variation': {'type': 'integer', 'description': 'The variation percent.\n20 means 20% of variation. Example, with an operation duration of 100s, if the\nvariation is 20%, the duration will be randomized between 80s and 120s.\n', 'required': True, 'default': 20, 'constraints': [{'in_range': [1, 100]}]}, 'log_length': {'type': 'integer', 'default': 2000, 'description': 'Words count in the generated logs.\n'}}}}",,25.0,0.0,0.0,20.0,0.0,81.0,5.74,0.0,0.0,0.0,0.0,0.0,0.0,3.0,0.0,0.0,0.0
1352,"{'org.ystia.cloudera.linux.bash.nodes.ClouderaServer': {'derived_from': 'org.ystia.consul.pub.nodes.ConsulUser', 'description': 'Cloudera Manager Server (including the embedded PostgreSQL database).', 'tags': {'icon': '/images/cloudera-icon.png'}, 'attributes': {'url': {'concat': ['http://', {'get_attribute': ['HOST', 'public_ip_address']}, ':7180/']}}, 'properties': {'component_version': {'type': 'version', 'description': 'Version of Cloudera Manager Server component', 'default': '5.14.1', 'constraints': [{'equal': '5.14.1'}]}, 'cloudera_manager_repository': {'type': 'string', 'default': 'https://archive.cloudera.com/cm5/redhat/7/x86_64/cm/5.14.1/', 'description': ""This property give the opportunity to specify an alternative download repository for Cloudera Manager Server.\nBy default, the value is 'https://archive.cloudera.com/cm5/redhat/7/x86_64/cm/5.14.1/'.\n"", 'required': False, 'constraints': [{'pattern': '^(http|https|ftp)://.+/.*$'}]}, 'ntp_server': {'type': 'string', 'description': ""The hostname on an NTP server. By default, the valueis 'fr.pool.ntp.org'.\n"", 'default': 'fr.pool.ntp.org', 'required': False}}, 'capabilities': {'cloudera_server_endpoint': 'org.ystia.cloudera.pub.capabilities.ClouderaServerEndpoint'}, 'interfaces': {'Standard': {'create': {'inputs': {'CLOUDERA_MANAGER_REPO': {'get_property': ['SELF', 'cloudera_manager_repository']}, 'NTP_SERVER': {'get_property': ['SELF', 'ntp_server']}}, 'implementation': 'scripts/clouderamanager_install.sh'}, 'configure': {'implementation': 'scripts/clouderamanager_config.sh'}, 'start': {'implementation': 'scripts/clouderamanager_start.sh'}, 'stop': {'implementation': 'scripts/clouderamanager_stop.sh'}}}, 'artifacts': [{'data': {'type': 'tosca.artifacts.File', 'file': 'data'}}, {'scripts': {'type': 'tosca.artifacts.File', 'file': 'scripts'}}]}}",,64.0,3.0,0.0,52.0,0.0,127.0,6.35,0.0,0.0,1.0,0.0,0.0,0.0,3.0,0.0,0.0,4.0
2510,"{'tosca.relationships.ConnectsTo': {'derived_from': 'tosca.relationships.Root', 'metadata': {'targetNamespace': 'tosca.relationships', 'abstract': 'false', 'final': 'false'}, 'properties': {'credential': {'type': 'Credential', 'required': False}}, 'valid_target_types': ['tosca.capabilities.Endpoint']}}",,12.0,0.0,0.0,11.0,0.0,18.0,4.06,0.0,0.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0
2766,{'aria.openstack.server_connected_to_keypair': {'derived_from': 'ConnectsTo'}},,2.0,0.0,0.0,2.0,0.0,3.0,1.58,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
2347,"{'tosca.relationships.network.BindsTo': {'derived_from': 'tosca.relationships.DependsOn', 'valid_target_types': ['tosca.capabilities.network.Bindable']}}",,4.0,0.0,0.0,3.0,0.0,5.0,2.32,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
226,"{'org.alien4cloud.automation.a4c.config.location_resources.autoconfig.nodes.ResourcesConfigurator': {'description': 'Configure a location for A4C, resources are fed using a resource yaml file\n', 'derived_from': 'org.alien4cloud.automation.a4c.config.location.nodes.SimpleLocationConfigurator', 'artifacts': [{'resources_file_artifact': {'type': 'tosca.artifacts.File'}}], 'interfaces': {'Standard': {'start': {'inputs': {'ANSIBLE_VERBOSE': False, 'PLAYBOOK_ENTRY': 'create_location_resources.yml', 'orchestratorId': {'get_attribute': ['HOST', 'orchestratorId']}, 'locationId': {'get_attribute': ['SELF', 'locationId']}, 'alien_url': {'get_attribute': ['HOST', 'alien_url']}, 'alien_user': {'get_attribute': ['HOST', 'alien_user']}, 'alien_password': {'get_attribute': ['HOST', 'alien_password']}}, 'implementation': 'playbook/playbook.ansible'}}}}}",,34.0,0.0,0.0,23.0,0.0,51.0,5.05,0.0,0.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
2304,"{'tosca.nodes.MiCADO.CloudSigma.Compute': {'description': 'CloudSigma compute node', 'derived_from': 'tosca.nodes.MiCADO.Compute', 'properties': {'num_cpus': {'type': 'integer', 'required': True, 'constraints': [{'greater_or_equal': 250}, {'less_or_equal': 100000}]}, 'mem_size': {'type': 'integer', 'required': True, 'constraints': [{'greater_or_equal': 268435456}, {'less_or_equal': 137438953472}]}, 'libdrive_id': {'type': 'string', 'required': True}, 'vnc_password': {'type': 'string', 'required': True}, 'public_key_id': {'type': 'string', 'required': True}, 'host_name': {'type': 'string', 'required': False}, 'hv_relaxed': {'type': 'boolean', 'required': False}, 'hv_tsc': {'type': 'boolean', 'required': False}, 'nics': {'type': 'list', 'required': True}}, 'interfaces': {'Occopus': {'type': 'tosca.interfaces.MiCADO.Occopus'}, 'Terraform': {'type': 'tosca.interfaces.MiCADO.Terraform'}}}}",,42.0,0.0,0.0,42.0,0.0,70.0,4.63,0.0,0.0,2.0,0.0,0.0,0.0,9.0,0.0,0.0,0.0
2487,"{'org.alien4cloud.alien4cloud.config.applications.relationships.AddApplicationsDependsOnCsar': {'derived_from': 'tosca.relationships.DependsOn', 'valid_target_types': ['org.alien4cloud.alien4cloud.config.csar']}}",,4.0,0.0,0.0,3.0,0.0,5.0,2.32,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
1564,{'com.toscaruntime.docker.nodes.DeletableVolume': {'derived_from': 'com.toscaruntime.docker.nodes.Volume'}},,2.0,0.0,0.0,2.0,0.0,3.0,1.58,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
889,"{'yorc.nodes.google.Subnetwork': {'derived_from': 'tosca.nodes.Network', 'properties': {'name': {'type': 'string', 'required': True, 'description': 'The name of the resource, provided by the client when initially creating the resource. The name must be 1-63 characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression [a-z]([-a-z0-9]*[a-z0-9])? which means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or digit, except the last character, which cannot be a dash.\n'}, 'network': {'type': 'string', 'required': True, 'description': 'The network this subnet belongs to.\n'}, 'ip_cidr_range': {'type': 'string', 'required': True, 'description': 'The range of internal addresses that are owned by this sub-network. For example, 10.0.0.0/8 or 192.168.0.0/16. Ranges must be unique and non-overlapping within a network. Only IPv4 is supported.\n'}, 'project': {'type': 'string', 'description': 'The ID of the project in which the resource belongs. If it is not provided, the infrastructure location project is used.\n', 'required': False}, 'region': {'type': 'string', 'description': 'The Region in which this subnet should reside.\n', 'required': True}, 'enable_flow_logs': {'type': 'boolean', 'description': 'Whether to enable flow logging for this subnetwork.', 'required': False}, 'private_ip_google_access': {'type': 'boolean', 'description': 'Whether the VMs in this subnet can access Google services without assigned external IP addresses.', 'required': False}, 'secondary_ip_ranges': {'type': 'list', 'description': 'A list of configurations for secondary IP ranges for VM instances contained in this sub-network. The primary IP of such VM must belong to the primary ip_cidr_range of the sub-network. The alias IPs may belong to either primary or secondary ranges.\n', 'entry_schema': {'type': 'yorc.datatypes.google.IPRange'}, 'required': False}}, 'attributes': {'gateway_ip': {'type': 'string', 'description': 'The IPv4 address of the gateway.'}, 'network_name': {'type': 'string', 'description': 'The related name of the network of this subnet.'}, 'subnetwork_name': {'type': 'string', 'description': 'The related name of this subnet.'}}}}",,59.0,0.0,0.0,47.0,0.0,287.0,6.57,0.0,0.0,0.0,0.0,0.0,0.0,8.0,0.0,0.0,0.0
717,{'cloudify.nodes.Volume': {'derived_from': 'cloudify.nodes.Root'}},,2.0,0.0,0.0,2.0,0.0,3.0,1.58,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
902,"{'yorc.nodes.hostspool.Compute': {'derived_from': 'yorc.nodes.Compute', 'properties': {'shareable': {'type': 'boolean', 'description': 'Can the compute node be shared', 'required': False, 'default': False}, 'filters': {'type': 'list', 'description': 'Filters to select hosts from their labels', 'entry_schema': {'type': 'string'}, 'required': False}}, 'attributes': {'hostname': {'type': 'string', 'description': 'Hostname as known in the hosts pool'}}, 'capabilities': {'endpoint': {'type': 'yorc.capabilities.Endpoint.ProvisioningAdmin', 'properties': {'credentials': {'user': 'not significant, will be set by yorc itself'}}}, 'host': {'type': 'yorc.capabilities.hostspool.Container'}}}}",,26.0,0.0,0.0,26.0,0.0,64.0,5.42,0.0,0.0,0.0,0.0,0.0,0.0,3.0,0.0,0.0,0.0
2345,"{'tosca.relationships.RoutesTo': {'derived_from': 'tosca.relationships.ConnectsTo', 'valid_target_types': ['tosca.capabilities.Endpoint']}}",,4.0,0.0,0.0,3.0,0.0,5.0,2.32,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
987,"{'tosca.nodes.Compute': {'derived_from': 'tosca.nodes.Root', 'description': 'Represents a real or virtual machine or ‘server’. Informations specified on the Compute node will be used to find the machine that fits the given requirements in the cloud available machines. If no sizing informations are specified the cloud’s provider default machine will be used. It is strongly recommended to specify the required cpus and memory at least.\n', 'tags': {'icon': '/images/compute.png'}, 'properties': {'disk_size': {'type': 'scalar-unit.size', 'constraints': [{'greater_than': '0 B'}]}, 'num_cpus': {'type': 'integer', 'constraints': [{'greater_than': 0}]}, 'mem_size': {'type': 'scalar-unit.size', 'constraints': [{'greater_than': '0 B'}]}, 'os_arch': {'type': 'string', 'required': False}, 'os_type': {'type': 'string', 'required': False}, 'os_distribution': {'type': 'string', 'required': False}, 'os_version': {'type': 'string', 'required': False}, 'ip_address': {'type': 'string', 'required': False}}, 'attributes': {'ip_address': {'type': 'string', 'description': 'The primary IP address assigned by the cloud provider that applications may use to access the Compute node. Note: This is used by the platform provider to convey the primary address used to access the compute node.  Future working drafts will address implementations that support floating or multiple IP addresses.\n'}}, 'requirements': [{'network': {'capability': 'tosca.capabilities.Connectivity', 'occurrences': [0, 'unbounded']}}], 'capabilities': {'compute': {'type': 'tosca.capabilities.Container', 'occurrences': [0, 'unbounded']}}}}",,56.0,0.0,0.0,45.0,0.0,180.0,6.29,0.0,0.0,0.0,0.0,0.0,0.0,8.0,0.0,0.0,0.0
1038,"{'alien.tests.dependencies.nodes.A': {'derived_from': 'tosca.nodes.Root', 'capabilities': {'c_capability': {'type': 'alien.tests.dependencies.capabilities.C'}, 'c_other_capability': {'type': 'alien.tests.dependencies.capabilities.COther'}}}}",,7.0,0.0,0.0,7.0,0.0,10.0,3.12,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
393,"{'NetworkAttachmentDefinition': {'metadata': {'turandot.generateNames': 'false'}, 'capabilities': {'metadata': 'k8s:Metadata', 'network-attachment-definition': 'k8s:BridgeNetworkAttachmentDefinition'}}}",,6.0,0.0,0.0,6.0,0.0,9.0,2.95,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
152,"{'org.alien4cloud.automation.a4c.config.orchestrator.cfy.nodes.CfyAzureParametersConfigurator': {'description': 'Configure azure parameters for cfy orchestrator\n', 'derived_from': 'org.alien4cloud.automation.a4c.config.orchestrator.cfy.nodes.CfyOrchestratorConfigurator', 'properties': {'resourceGroupId': {'type': 'string', 'required': True}, 'virtualNetworkId': {'type': 'string', 'required': True}, 'subnetId': {'type': 'string', 'required': True}}, 'interfaces': {'Standard': {'start': {'inputs': {'ANSIBLE_VERBOSE': False, 'PLAYBOOK_ENTRY': 'config_azure_parameters.yml', 'orchestratorId': {'get_attribute': ['SELF', 'orchestratorId']}, 'alien_url': {'get_attribute': ['SELF', 'alien_url']}, 'alien_user': {'get_attribute': ['SELF', 'alien_user']}, 'alien_password': {'get_attribute': ['SELF', 'alien_password']}, 'resourceGroup': {'get_property': ['SELF', 'resourceGroupId']}, 'virtualNetwork': {'get_property': ['SELF', 'virtualNetworkId']}, 'subnet': {'get_property': ['SELF', 'subnetId']}}, 'implementation': 'playbook/playbook.ansible'}}}}}",,48.0,0.0,0.0,34.0,0.0,64.0,4.98,0.0,0.0,1.0,0.0,0.0,0.0,3.0,0.0,0.0,0.0
855,"{'yorc.tests.nodes.SrvImpl1': {'derived_from': 'yorc.tests.nodes.MyService', 'capabilities': {'host': 'tosca.capabilities.Container'}, 'attributes': {'a1': {'get_attribute': ['SELF', 'attr1']}, 'a2': {'get_attribute': ['SELF', 'cap1', 'cap1_attr1']}, 'a3': {'get_attribute': ['SELF', 'cap2', 'ip_address']}}}}",,19.0,0.0,0.0,11.0,0.0,21.0,3.94,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
2023,"{'tosca.nodes.Compute': {'metadata': {'shorthand_name': 'Compute', 'type_qualified_name': 'tosca:Compute', 'type_uri': 'tosca.nodes.Compute'}, 'derived_from': 'tosca.nodes.Root', 'attributes': {'private_address': {'type': 'string'}, 'public_address': {'type': 'string'}, 'networks': {'type': 'map', 'entry_schema': {'type': 'tosca.datatypes.network.NetworkInfo'}}, 'ports': {'type': 'map', 'entry_schema': {'type': 'tosca.datatypes.network.PortInfo'}}}, 'requirements': [{'local_storage': {'capability': 'tosca.capabilities.Attachment', 'node': 'tosca.nodes.BlockStorage', 'relationship': 'tosca.relationships.AttachesTo', 'occurrences': [0, 'UNBOUNDED']}}], 'capabilities': {'host': {'type': 'tosca.capabilities.Container', 'valid_source_types': ['tosca.nodes.SoftwareComponent']}, 'endpoint': {'type': 'tosca.capabilities.Endpoint.Admin'}, 'os': {'type': 'tosca.capabilities.OperatingSystem'}, 'scalable': {'type': 'tosca.capabilities.Scalable'}, 'binding': {'type': 'tosca.capabilities.network.Bindable'}}}}",,40.0,0.0,0.0,37.0,0.0,58.0,5.06,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
1746,{'micro.nodes.CircuitBreaker': {'derived_from': 'micro.nodes.CommunicationPattern'}},,2.0,0.0,0.0,2.0,0.0,3.0,1.58,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
948,"{'hello_type_1': {'derived_from': 'tosca.nodes.SoftwareComponent', 'attributes': {'attribute1': {'type': 'string'}}, 'properties': {'property1': {'type': 'string'}}}}",,8.0,0.0,0.0,8.0,0.0,11.0,3.1,0.0,0.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0
1589,"{'tosca.nodes.QC.Container.Application.Docker': {'derived_from': 'tosca.nodes.QC.Application', 'description': 'description of container', 'properties': {'ports': {'description': 'ports to be forwarded', 'type': 'list', 'required': False}, 'container_ports': {'description': 'ports used by the container but not exposed', 'type': 'list', 'required': False}, 'entrypoint': {'description': 'command', 'type': 'string', 'required': False}, 'cmd': {'description': 'cmd', 'type': 'string', 'required': False}, 'environment': {'description': 'environment variables', 'type': 'map', 'required': False}, 'volumes': {'description': 'volume', 'type': 'list', 'required': False}}, 'requirements': [{'host': {'capability': 'tosca.capabilities.QC.docker.Orchestrator', 'node': 'tosca.nodes.QC.docker.Orchestrator', 'relationship': 'tosca.relationships.HostedOn'}}], 'attributes': {'service_url': {'type': 'string', 'required': False, 'description': 'url of the service'}}, 'interfaces': {'Kubernetes': {'type': 'tosca.interfaces.QC.Kubernetes', 'delete': {'inputs': {'repository': 'https://github.com/QCDIS/playbooks.git', 'resources': ['k8s/delete_service.yml']}}, 'create': {'inputs': {'repository': 'https://github.com/QCDIS/playbooks.git', 'resources': ['k8s/create_service.yml']}}, 'configure': {'inputs': {'repository': 'https://github.com/QCDIS/playbooks.git', 'resources': ['k8s/get_services.yaml']}}, 'scale': {'inputs': {'repository': 'https://github.com/QCDIS/playbooks.git', 'resources': ['k8s/scale_service.yml'], 'replicas': 1}}, 'autoscale': {'inputs': {'repository': 'https://github.com/QCDIS/playbooks.git', 'resources': ['k8s/autoscale_service.yml'], 'horizontal_pod_autoscaler': 'horizontal_pod_autoscaler.yml'}}, 'info': {'inputs': {'repository': 'https://github.com/QCDIS/playbooks.git', 'resources': ['k8s/get_services.yaml']}}}}}}",,73.0,0.0,0.0,67.0,0.0,124.0,5.5,0.0,0.0,1.0,0.0,0.0,0.0,6.0,0.0,0.0,0.0
1854,"{'seaclouds.nodes.Compute.Amazon': {'derived_from': 'seaclouds.nodes.Compute', 'properties': {'operating_system': {'type': 'string'}}}}",,5.0,0.0,0.0,5.0,0.0,7.0,2.81,0.0,0.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0
1262,"{'tosca.nodes.DBMS': {'derived_from': 'tosca.nodes.SoftwareComponent', 'properties': {'root_password': {'type': 'string', 'required': False, 'description': 'the optional root password for the DBMS service'}, 'port': {'type': 'integer', 'required': False, 'description': 'the port the DBMS service will listen to for data and requests'}}, 'capabilities': {'host': {'type': 'tosca.capabilities.Compute', 'valid_source_types': ['tosca.nodes.Database']}}}}",,16.0,0.0,0.0,15.0,0.0,42.0,4.76,0.0,0.0,0.0,0.0,0.0,0.0,2.0,0.0,0.0,0.0
1737,"{'onap.vcpe_vbng': {'derived_from': 'tosca.nodes.nfv.VNF', 'properties': {'descriptor_id': {'type': 'string', 'constraints': [{'valid_values': ['b1bb0ce7-5555-4fa7-95ed-4840d70a1177']}], 'default': 'b1bb0ce7-5555-4fa7-95ed-4840d70a1177'}, 'provider': {'type': 'string', 'constraints': [{'valid_values': ['onap']}], 'default': 'onap'}, 'product_name': {'type': 'string', 'constraints': [{'valid_values': ['vcpe_vbng']}], 'default': 'vcpe_vbng'}, 'software_version': {'type': 'string', 'constraints': [{'valid_values': ['1.0']}], 'default': '1.0'}, 'descriptor_version': {'type': 'string', 'constraints': [{'valid_values': ['1.0']}], 'default': '1.0'}, 'flavour_id': {'type': 'string', 'constraints': [{'valid_values': ['simple']}], 'default': 'simple'}, 'flavour_description': {'type': 'string', 'default': 'simple'}, 'vnfm_info': {'type': 'list', 'entry_schema': {'type': 'string'}, 'default': ['gvnfm']}}}}",,48.0,0.0,0.0,41.0,0.0,65.0,4.08,0.0,0.0,0.0,0.0,0.0,0.0,8.0,0.0,0.0,0.0
1590,"{'tosca.nodes.QC.docker.Orchestrator': {'derived_from': 'tosca.nodes.QC.Application', 'description': 'a container orchestrator', 'requirements': [{'host': {'capability': 'tosca.capabilities.QC.VM.topology', 'node': 'tosca.nodes.QC.VM.topology', 'relationship': 'tosca.relationships.HostedOn'}}], 'capabilities': {'orchestrator': {'type': 'tosca.capabilities.QC.docker.Orchestrator'}, 'host': {'type': 'tosca.capabilities.Container.Docker'}, 'container': {'type': 'tosca.capabilities.Container'}}, 'properties': {'min_masters_num': {'type': 'integer', 'required': True, 'default': 1, 'constraints': [{'greater_or_equal': 1}]}, 'min_workers_num': {'type': 'integer', 'required': True, 'default': 1, 'constraints': [{'greater_or_equal': 1}]}}}}",,28.0,0.0,0.0,28.0,0.0,46.0,4.71,0.0,0.0,0.0,0.0,0.0,0.0,2.0,0.0,0.0,0.0
1385,"{'org.ystia.yorc.docker.nodes.Yorc': {'metadata': {'icon': 'yorcicon.png'}, 'derived_from': 'tosca.nodes.Container.Application.DockerContainer', 'capabilities': {'consul_ui': {'type': 'org.ystia.yorc.docker.capabilities.ConsulUI', 'description': 'Endpoint to acess consul UI'}, 'yorc_server': {'type': 'org.ystia.yorc.docker.capabilities.YorcRestAPI', 'description': 'Endpoint to communicate with yorc API'}}, 'properties': {'yorc_debug': {'description': ""Enable or not Yorc's log debuging"", 'type': 'string', 'required': True, 'default': 'NO_DEBUG', 'constraints': [{'valid_values': ['DEBUG', 'NO_DEBUG']}]}, 'consul_ui': {'description': 'Enable consul UI available on port 8500', 'type': 'boolean', 'required': True, 'default': True}}, 'interfaces': {'Standard': {'create': {'inputs': {'ENV_YORC_LOG': {'get_property': ['SELF', 'yorc_debug']}, 'ENV_CONSUL_ENV_ui': {'get_property': ['SELF', 'consul_ui']}, 'ENV_CONSUL_ENV_client_addr': '""0.0.0.0""'}, 'implementation': {'file': 'ystia-docker.jfrog.io/ystia/yorc', 'repository': 'docker', 'type': 'tosca.artifacts.Deployment.Image.Container.Docker'}}}}}}",,43.0,0.0,0.0,37.0,0.0,81.0,5.71,0.0,0.0,1.0,0.0,0.0,0.0,2.0,0.0,0.0,0.0
2628,"{'tosca.relationships.DependsOn': {'derived_from': 'tosca.relationships.Root', 'description': 'A generic depends on relationship.\n', 'valid_sources': ['tosca.capabilities.Feature'], 'valid_targets': ['tosca.capabilities.Feature']}}",,7.0,0.0,0.0,5.0,0.0,13.0,3.55,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
930,"{'hello_type': {'derived_from': 'tosca.nodes.SoftwareComponent', 'interfaces': {'Standard': {'inputs': {'marker': {'default': {'get_input': 'marker'}, 'type': 'string'}}, 'operations': {'create': 'playbooks/create.yaml', 'delete': 'playbooks/delete.yaml'}}}}}",,,,,,,,,,,,,,,,,,
2498,"{'org.alien4cloud.cloudify.manager.v4.relationships.ConfigureOpenstackKey': {'derived_from': 'tosca.relationships.Root', 'interfaces': {'Configure': {'pre_configure_source': {'inputs': {'SSH_KEY_FILENAME': {'get_property': ['TARGET', 'key_file_name']}, 'KEYPAIR_NAME': {'get_property': ['TARGET', 'keypair_name']}}, 'implementation': 'scripts/openstack_configure_key.sh'}}}}}",,15.0,0.0,0.0,11.0,0.0,17.0,3.85,0.0,0.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,1.0
2255,"{'tosca.nodes.indigo.Container.Application.Docker.Chronos': {'derived_from': 'tosca.nodes.indigo.Container.Application.Docker', 'properties': {'schedule': {'required': False, 'type': 'string'}, 'command': {'required': True, 'type': 'string'}, 'description': {'required': False, 'type': 'string'}, 'retries': {'required': False, 'type': 'integer'}, 'epsilon': {'required': False, 'type': 'string', 'default': 'PT10S'}, 'priviliged': {'required': False, 'type': 'boolean', 'default': True}, 'force_pull_image': {'required': False, 'type': 'boolean', 'default': True}}, 'capabilities': {'parent_job': {'type': 'tosca.capabilities.indigo.Container.Application.Docker.Chronos', 'valid_source_types': ['tosca.nodes.indigo.Container.Application.Docker.Chronos'], 'occurrences': [0, 'UNBOUNDED']}}, 'requirements': [{'parent_job': {'capability': 'tosca.capabilities.indigo.Container.Application.Docker.Chronos', 'node': 'tosca.nodes.indigo.Container.Application.Docker.Chronos', 'relationship': 'tosca.relationships.DependsOn', 'occurrences': [0, 1]}}]}}",,43.0,0.0,0.0,38.0,0.0,65.0,4.62,0.0,0.0,0.0,0.0,0.0,0.0,7.0,0.0,0.0,0.0
711,"{'tosca.nodes.network.Port': {'metadata': {'puccini.normative': 'true', 'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.0]', 'specification.location': '7.5.2'}, 'description': 'The TOSCA Port node represents a logical entity that associates between Compute and Network normative types.\nThe Port node type effectively represents a single virtual NIC on the Compute node instance.', 'derived_from': 'tosca.nodes.Root', 'properties': {'ip_address': {'description': 'Allow the user to set a fixed IP address. Note that this address is a request to the provider which they will attempt to fulfill but may not be able to dependent on the network the port is associated with.', 'type': 'string', 'required': False}, 'order': {'description': 'The order of the NIC on the compute instance (e.g. eth2). Note: when binding more than one port to a single compute (aka multi vNICs) and ordering is desired, it is *mandatory* that all ports will be set with an order value and. The order values must represent a positive, arithmetic progression that starts with 0 (e.g. 0, 1, 2, ..., n).', 'type': 'integer', 'constraints': [{'greater_or_equal': 0}], 'default': 0, 'required': False}, 'is_default': {'description': 'Set is_default=true to apply a default gateway route on the running compute instance to the associated network gateway. Only one port that is associated to single compute node can set as default=true.', 'type': 'boolean', 'default': False, 'required': False}, 'ip_range_start': {'description': 'Defines the starting IP of a range to be allocated for the compute instances that are associated by this Port. Without setting this property the IP allocation is done from the entire CIDR block of the network.', 'type': 'string', 'required': False}, 'ip_range_end': {'description': 'Defines the ending IP of a range to be allocated for the compute instances that are associated by this Port. Without setting this property the IP allocation is done from the entire CIDR block of the network.', 'type': 'string', 'required': False}}, 'attributes': {'ip_address': {'description': 'The IP address would be assigned to the associated compute instance.', 'type': 'string'}}, 'requirements': [{'link': {'capability': 'tosca.capabilities.network.Linkable', 'relationship': 'tosca.relationships.network.LinksTo'}}, {'binding': {'capability': 'tosca.capabilities.network.Bindable', 'relationship': 'tosca.relationships.network.BindsTo'}}]}}",,57.0,0.0,0.0,43.0,0.0,314.0,6.77,0.0,0.0,0.0,0.0,0.0,0.0,5.0,0.0,0.0,0.0
2794,"{'tosca.relationships.DependsOn': {'derived_from': 'tosca.relationships.Root', 'valid_target_types': ['tosca.capabilities.Node'], 'workflow': {'install': {'source_weaving': [{'before': 'creating', 'wait_target': 'started'}]}}}}",,9.0,0.0,0.0,8.0,0.0,12.0,3.58,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
2427,"{'tosca.relationships.vendor.VendorLinksTo': {'derived_from': 'tosca.relationships.network.LinksTo', 'valid_target_types': ['tosca.capabilities.vendor.VendorLinkable']}}",,4.0,0.0,0.0,3.0,0.0,5.0,2.32,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
913,{'cli_commands_test.nodes.node1': {'derived_from': 'tosca.nodes.SoftwareComponent'}},,2.0,0.0,0.0,2.0,0.0,3.0,1.58,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
441,"{'BlockStorage': {'derived_from': 'Abstract.Storage', 'description': 'The TOSCA BlockStorage node currently represents a server-local block storage device (i.e., not shared) offering evenly sized blocks of data from which raw storage volumes can be created.\n', 'properties': {'size': {'default': '1 MB', 'constraints': [{'greater_or_equal': '1 MB'}]}, 'volume_id': {'type': 'string', 'description': 'ID of an existing volume (that is in the accessible scope of the requesting application).', 'required': False}, 'snapshot_id': {'type': 'string', 'description': 'Some identifier that represents an existing snapshot that should be used when creating the block storage (volume).', 'required': False}}, 'capabilities': {'attachment': {'type': 'Attachment'}}}}",,23.0,0.0,0.0,19.0,0.0,89.0,5.94,0.0,0.0,0.0,0.0,0.0,0.0,3.0,0.0,0.0,0.0
1656,"{'org.alien4cloud.kubernetes.api.types.BaseResource': {'abstract': True, 'derived_from': 'tosca.nodes.Root', 'description': 'Represent a kubernetes final resource after node matching (Pod, ReplicaSet or Deployment)\n', 'properties': {'namespace': {'type': 'string', 'required': False, 'description': 'The namespace where the resource is deployed.\n'}, 'resource_spec': {'type': 'string', 'description': 'The the JSON serialization (and eventually transformation) of initial node properties.\nThis JSON can be used to instanciate the resource on the K8S cluster.\n'}, 'kube_config': {'type': 'string', 'required': False, 'description': 'The kube config that will be used if provided\n'}}, 'attributes': {'namespace': {'get_property': ['SELF', 'namespace']}, 'spec': {'get_property': ['SELF', 'resource_spec']}}, 'artifacts': [{'commons': {'type': 'tosca.artifacts.File', 'file': 'scripts/commons.sh'}}]}}",,32.0,0.0,0.0,25.0,0.0,89.0,5.75,0.0,0.0,0.0,0.0,0.0,0.0,3.0,0.0,0.0,1.0
2390,"{'org.alien4cloud.relationships.RegistryConnectToPHP': {'derived_from': 'tosca.relationships.ConnectsTo', 'valid_target_types': ['org.alien4cloud.capabilities.PHPModule']}}",,4.0,0.0,0.0,3.0,0.0,5.0,2.32,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
839,"{'org.alien4cloud.kubernetes.api.types.DeploymentResource': {'description': 'null', 'derived_from': 'org.alien4cloud.kubernetes.api.types.BaseResource', 'properties': {'resource_id': {'type': 'string', 'description': ""a unique id set by a4c to identify a resource. it should be added as a label named 'a4c_id'""}, 'service_dependency_lookups': {'type': 'string', 'description': 'A CSV key:value pairs where key should be replaced by the interpretation of value in the JSON.\nThe value is the Kube name of the service for which the scheduler will need to find the ClusterIP and\nreplace the key in the JSON with the found value.\n', 'required': False}}, 'attributes': {'deployment_id': {'get_operation_output': ['SELF', 'Standard', 'create', 'KUBE_DEPLOYMENT_ID']}}, 'interfaces': {'org.alien4cloud.management.ClusterControl': {'scale': {'inputs': {'KUBE_DEPLOYMENT_ID': {'get_attribute': ['SELF', 'deployment_id']}, 'NAMESPACE': {'get_property': ['SELF', 'namespace']}, 'EXPECTED_INSTANCES': {'type': 'integer'}, 'INSTANCES_DELTA': {'type': 'integer'}}, 'implementation': 'scripts/kubectl_deployment_scale.sh'}}, 'Standard': {'create': {'inputs': {'KUBE_SERVICE_DEPENDENCIES': {'get_property': ['SELF', 'service_dependency_lookups']}, 'KUBE_RESOURCE_DEPLOYMENT_CONFIG': {'get_property': ['SELF', 'resource_spec']}, 'NAMESPACE': {'get_property': ['SELF', 'namespace']}}, 'implementation': 'scripts/kubectl_deployment_create.sh'}, 'delete': {'inputs': {'KUBE_DEPLOYMENT_ID': {'get_property': ['SELF', 'resource_id']}, 'NAMESPACE': {'get_property': ['SELF', 'namespace']}}, 'implementation': 'scripts/kubectl_deployment_delete.sh'}}}, 'capabilities': {'scalable': {'type': 'org.alien4cloud.capabilities.ClusterController'}}}}",,69.0,0.0,0.0,47.0,0.0,140.0,6.11,0.0,0.0,2.0,0.0,0.0,0.0,2.0,0.0,0.0,3.0
1894,"{'SWI4': {'derived_from': 'tosca.nodes.SoftwareComponent.networked', 'interfaces': {'Standard': {'operations': {'create': 'patch'}}}, 'requirements': [{'CP8': {'capability': 'tosca.capabilities.Node', 'node': 'tosca.nodes.network.Port', 'relationship': 'DependsOn'}}, {'CP9': {'capability': 'tosca.capabilities.Node', 'node': 'tosca.nodes.network.Port', 'relationship': 'DependsOn'}}]}}",,,,,,,,,,,,,,,,,,
588,"{'radon.nodes.abstract.ContainerRuntime': {'derived_from': 'tosca.nodes.Container.Runtime', 'metadata': {'targetNamespace': 'radon.nodes.abstract', 'abstract': 'false', 'final': 'false'}, 'properties': {'name': {'type': 'string', 'required': False}}, 'capabilities': {'host': {'occurrences': [1, 'UNBOUNDED'], 'valid_source_types': ['radon.nodes.abstract.ContainerApplication'], 'type': 'tosca.capabilities.Compute'}}}}",,18.0,0.0,0.0,15.0,0.0,25.0,4.48,0.0,0.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0
875,"{'org.alien4cloud.extended.container.types.ContainerDeploymentUnit': {'description': 'Can host containers and be deployed as a unit. Think about Pods in K8S.', 'derived_from': 'tosca.nodes.Root', 'capabilities': {'host': {'type': 'tosca.capabilities.Container.Docker'}, 'scalable': {'type': 'tosca.capabilities.Scalable'}}}}",,9.0,0.0,0.0,8.0,0.0,25.0,4.48,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
1730,"{'tosca.nodes.nfv.VduCp': {'derived_from': 'tosca.nodes.nfv.Cp', 'properties': {'bitrate_requirement': {'type': 'integer', 'required': False}, 'vnic_name': {'type': 'string', 'required': False}, 'vnic_order': {'type': 'integer', 'required': False}, 'vnic_type': {'type': 'string', 'constraints': [{'valid_values': ['normal', 'macvtap', 'direct', 'baremetal', 'direct-physical', 'virtio-forwarder']}], 'required': False}, 'virtual_network_interface_requirements': {'type': 'list', 'entry_schema': {'type': 'tosca.datatypes.nfv.VirtualNetworkInterfaceRequirements'}, 'required': False}}, 'requirements': [{'virtual_link': {'capability': 'tosca.capabilities.nfv.VirtualLinkable', 'relationship': 'tosca.relationships.nfv.VirtualLinksTo', 'node': 'tosca.nodes.nfv.VnfVirtualLink'}}, {'virtual_binding': {'capability': 'tosca.capabilities.nfv.VirtualBindable', 'relationship': 'tosca.relationships.nfv.VirtualBindsTo', 'node': 'tosca.nodes.nfv.Vdu.Compute'}}]}}",,37.0,0.0,0.0,31.0,0.0,55.0,4.9,0.0,0.0,0.0,0.0,0.0,0.0,5.0,0.0,0.0,0.0
508,"{'org.alien4cloud.vault.vault_dev.nodes.VaultServer': {'derived_from': 'org.alien4cloud.vault.pub.nodes.VaultServer', 'description': 'Vault server in dev mode.\n', 'tags': {'icon': '/images/vault.png'}, 'properties': {'download_url': {'description': 'The URL to download the vault archive.', 'type': 'string', 'required': True, 'default': 'https://releases.hashicorp.com/vault/0.8.3/vault_0.8.3_linux_amd64.zip'}, 'install_dir': {'description': 'The location on the FS where install Vault.', 'type': 'string', 'required': True, 'default': '/var/vault'}}, 'interfaces': {'Standard': {'create': {'inputs': {'VAULT_INSTALL_DIR': {'get_property': ['SELF', 'install_dir']}, 'VAULT_DOWNLOAD_URL': {'get_property': ['SELF', 'download_url']}}, 'implementation': 'scripts/vault_dev/create_vault.sh'}, 'start': {'implementation': 'scripts/vault_dev/start_vault.sh'}}}, 'artifacts': [{'commons': {'file': 'scripts/commons', 'type': 'tosca.artifacts.File'}}]}}",,35.0,0.0,0.0,31.0,0.0,67.0,5.6,0.0,0.0,1.0,0.0,0.0,0.0,2.0,0.0,0.0,2.0
2469,"{'org.alien4cloud.samba.relationships.ConnectsToSambaServer': {'derived_from': 'tosca.relationships.ConnectsTo', 'valid_target_types': ['org.alien4cloud.samba.capabilities.SambaServer'], 'properties': {'mount_point': {'type': 'string', 'default': '/var/alien4cloud'}}, 'interfaces': {'Configure': {'add_target': {'inputs': {'SAMBA_SERVER_IP': {'get_attribute': ['TARGET', 'ip_address']}, 'SHARE_NAME': {'get_property': ['TARGET', 'share_name']}, 'MOUNT_POINT': {'get_property': ['SELF', 'mount_point']}}, 'implementation': 'scripts/smbClient/add_target.sh'}, 'remove_target': {'inputs': {'MOUNT_POINT': {'get_property': ['SELF', 'mount_point']}}, 'implementation': 'scripts/smbClient/remove_target.sh'}}}, 'artifacts': [{'commons': {'file': 'scripts/commons', 'type': 'tosca.artifacts.File'}}]}}",,36.0,0.0,0.0,27.0,0.0,43.0,4.93,0.0,0.0,1.0,0.0,0.0,0.0,1.0,0.0,0.0,2.0
1050,"{'alien.test.nodes.TestComponent': {'derived_from': 'tosca.nodes.SoftwareComponent', 'capabilities': {'connectivity': {'type': 'alien.test.capabilities.TestComponentConnects'}, 'capa_upperbound_test': {'type': 'alien.test.capabilities.CapaUpperBoundTest', 'occurrences': [1, 2]}, 'req_upperbound_test': {'type': 'alien.test.capabilities.ReqUpperBoundTest', 'occurrences': [1, 2]}, 'capa_to_be_deleted': {'type': 'alien.test.capabilities.CapaToBeDeleted'}, 'req_to_be_deleted': {'type': 'alien.test.capabilities.ReqToBeDeleted'}}}}",,19.0,0.0,0.0,15.0,0.0,25.0,3.94,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
2235,"{'sodalite.nodes.VM.OpenStack': {'derived_from': 'tosca.nodes.Compute', 'properties': {'name': {'type': 'string', 'description': 'Name that should be given to the VM in OpenStack'}, 'image': {'type': 'string', 'description': 'OpenStack image id (image names are not accepted)'}, 'flavor': {'type': 'string', 'description': 'OpenStack flavor id (flavor names are not accepted)'}, 'network': {'type': 'string', 'description': 'OpenStack network id (network names are not accepted)'}, 'security_groups': {'type': 'string', 'description': 'OpenStack names of the security groups to which the instance should be added.Comma separated string.'}, 'key_name': {'type': 'string', 'description': 'OpenStack SSH key name that should be placed on the VM'}}, 'attributes': {'id': {'type': 'string', 'description': 'OpenStack id of the VM'}, 'private_address': {'type': 'string', 'description': 'Private ipv4'}, 'public_address': {'type': 'string', 'description': 'Public ipv4'}}, 'interfaces': {'Standard': {'type': 'tosca.interfaces.node.lifecycle.Standard', 'create': {'inputs': {'vm_name': {'default': {'get_property': ['SELF', 'name']}}, 'image': {'default': {'get_property': ['SELF', 'image']}}, 'flavor': {'default': {'get_property': ['SELF', 'flavor']}}, 'network': {'default': {'get_property': ['SELF', 'network']}}, 'security_groups': {'default': {'get_property': ['SELF', 'security_groups']}}, 'key_name': {'default': {'get_property': ['SELF', 'key_name']}}}, 'implementation': 'playbooks/vm/create.yml'}, 'delete': {'inputs': {'id': {'default': {'get_attribute': ['SELF', 'id']}}}, 'implementation': 'playbooks/vm/delete.yml'}}}}}",,76.0,0.0,0.0,61.0,0.0,157.0,5.49,0.0,0.0,1.0,0.0,0.0,0.0,6.0,0.0,0.0,0.0
2022,"{'tosca.nodes.Root': {'metadata': {'shorthand_name': 'Root', 'type_qualified_name': 'tosca:Root', 'type_uri': 'tosca.nodes.Root'}, 'derived_from': 'tosca.entity.Root', 'attributes': {'tosca_id': {'type': 'string'}, 'tosca_name': {'type': 'string'}, 'state': {'type': 'string'}}, 'capabilities': {'feature': {'type': 'tosca.capabilities.Node'}}, 'requirements': [{'dependency': {'capability': 'tosca.capabilities.Node', 'node': 'tosca.nodes.Root', 'relationship': 'tosca.relationships.DependsOn', 'occurrences': [0, 'UNBOUNDED']}}], 'interfaces': {'Standard': {'type': 'tosca.interfaces.node.lifecycle.Standard'}}}}",,27.0,0.0,0.0,25.0,0.0,39.0,4.69,0.0,0.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
2385,"{'org.alien4cloud.demo.spark-jobs.relationships.SparkAppDependency': {'derived_from': 'tosca.relationships.DependsOn', 'valid_target_types': ['org.alien4cloud.demo.spark-jobs.capabilities.SparkApplicationDependency'], 'interfaces': {'Configure': {'pre_configure_source': {'implementation': 'scripts/app_connect.sh'}}}}}",,8.0,0.0,0.0,7.0,0.0,10.0,3.32,0.0,0.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,1.0
1282,"{'org.ystia.yorc.alien4cloud.nodes.YorcOnDemandLocationResourcesConfigurator': {'derived_from': 'org.alien4cloud.alien4cloud.config.location_resources.on_demand.nodes.OnDemandLocationResourcesConfigurator', 'properties': {'type': {'type': 'string', 'required': True, 'default': 'OpenStack', 'constraints': [{'valid_values': ['Google Cloud', 'AWS', 'OpenStack', 'Slurm', 'Kubernetes', 'HostsPool']}]}}}}",,15.0,0.0,0.0,9.0,0.0,20.0,4.12,0.0,0.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0
729,{'cloudify.nodes.Database': {'derived_from': 'cloudify.nodes.Root'}},,2.0,0.0,0.0,2.0,0.0,3.0,1.58,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
1263,"{'tosca.nodes.Database': {'derived_from': 'tosca.nodes.Root', 'properties': {'name': {'type': 'string', 'description': 'the logical name of the database'}, 'port': {'type': 'integer', 'description': 'the port the underlying database service will listen to for data', 'required': False}, 'user': {'type': 'string', 'description': 'the optional user account name for DB administration', 'required': False}, 'password': {'type': 'string', 'description': 'the optional password for the DB user account', 'required': False}}, 'requirements': [{'host': {'capability': 'tosca.capabilities.Compute', 'node': 'tosca.nodes.DBMS', 'relationship': 'tosca.relationships.HostedOn'}}], 'capabilities': {'database_endpoint': {'type': 'tosca.capabilities.Endpoint.Database'}}}}",,26.0,0.0,0.0,26.0,0.0,71.0,5.03,0.0,0.0,0.0,0.0,0.0,0.0,4.0,0.0,0.0,0.0
2708,"{'org.ystia.rstudio.linux.bash.relationships.ConnectsRStudioToFilessystem': {'derived_from': 'org.ystia.relationships.ConnectsTo', 'description': 'Connects RStudio to a File System\n', 'valid_target_types': ['tosca.capabilities.Node'], 'interfaces': {'Configure': {'pre_configure_source': {'implementation': 'scripts/rstudio_to_filesystem.sh', 'inputs': {'path_fs': {'get_property': ['TARGET', 'location']}}}}}, 'artifacts': [{'scripts': {'file': 'scripts', 'type': 'tosca.artifacts.File'}}]}}",,18.0,0.0,0.0,15.0,0.0,28.0,4.74,0.0,0.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,1.0
29,"{'tosca.nodes.network.FloatingIP': {'derived_from': 'tosca.nodes.Root', 'description': 'The TOSCA FloatingIP node represents a floating IP that can associate to a Port.\n', 'properties': {'floating_network': {'type': 'string', 'required': True}, 'floating_ip_address': {'type': 'string', 'required': False}, 'port_id': {'type': 'string', 'required': False}}, 'requirements': [{'link': {'capability': 'tosca.capabilities.network.Linkable', 'relationship': 'tosca.relationships.network.LinksTo', 'node': 'tosca.nodes.network.Port'}}]}}",,19.0,0.0,0.0,18.0,0.0,42.0,4.91,0.0,0.0,0.0,0.0,0.0,0.0,3.0,0.0,0.0,0.0
787,"{'DockerApp': {'derived_from': 'tosca.nodes.Root', 'requirements': [{'host': None, 'capability': 'DockerHost', 'node': 'DockerEngine', 'relationship': 'tosca.relationships.HostedOn'}, {'network': None, 'capability': 'SimplePublicWebEndpoint'}], 'attributes': {'tag': {'type': 'string', 'description': 'the tag for the docker image'}, 'identifier': {'type': 'string', 'description': 'the identifier (name) for the docker container'}}, 'interfaces': {'Standard': {'create': {'implementation': 'docker/dockerapp_create.sh'}, 'start': {'implementation': 'docker/dockerapp_create.sh'}, 'stop': {'implementation': 'docker/dockerapp_stop.sh'}, 'delete': {'implementation': 'docker/dockerapp_delete.sh'}}}}}",,26.0,0.0,0.0,26.0,0.0,52.0,5.01,0.0,0.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,4.0
265,"{'org.apache.brooklyn.entity.database.mysql.MySqlNode': {'derived_from': 'tosca.nodes.Root', 'description': 'A MySQL server\n', 'properties': {'datastore.creation.script.url': {'type': 'string', 'required': False}}}}",,7.0,0.0,0.0,7.0,0.0,13.0,3.7,0.0,0.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0
2650,"{'tosca.relationships.Root': {'description': 'The TOSCA root Relationship Type all other TOSCA base Relationship Types derive from', 'attributes': {'tosca_id': {'type': 'string'}, 'tosca_name': {'type': 'string'}}, 'interfaces': {'Configure': {'type': 'tosca.interfaces.relationship.Configure'}}}}",,11.0,0.0,0.0,10.0,0.0,26.0,4.29,0.0,0.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
1855,"{'seaclouds.nodes.Compute.Amazon.c1.xlarge': {'derived_from': 'seaclouds.nodes.Compute.Amazon', 'attributes': {'location': 'seaclouds.types.Locations.AM.US.OR.Portland', 'num_cpus': 8, 'mem_size': '7 GB', 'disk_type': 'sata', 'local_storage': '2 TB'}}}",,8.0,0.0,0.0,8.0,0.0,16.0,4.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
605,"{'radon.nodes.apache.kafka.KafkaBroker': {'derived_from': 'radon.nodes.java.JavaApplication', 'metadata': {'targetNamespace': 'radon.nodes.apache.kafka', 'abstract': 'false', 'final': 'false'}, 'attributes': {'broker_urls': {'description': 'represents a list of one or more urls that corresponds to the brokers of this kafka cluster', 'type': 'list'}, 'java_home': {'type': 'string', 'default': {'get_attribute': ['SELF', 'host', 'java_home']}}, 'kafka_home': {'type': 'string', 'default': {'get_operation_output': ['SELF', 'Standard', 'create', 'KAFKA_HOME']}}}, 'properties': {'log_cleaner_enable': {'type': 'boolean', 'default': False}, 'zk_heap_size': {'type': 'integer', 'default': 500}, 'scala_version': {'type': 'version', 'default': 2.11, 'constraints': [{'valid_values': [2.11, 2.12]}]}, 'component_version': {'type': 'version', 'default': '0.10.2.2', 'constraints': [{'valid_values': ['0.10.2.2', '0.11.0.3']}]}, 'kf_heap_size': {'type': 'integer', 'default': 1024}}, 'capabilities': {'host': {'occurrences': [0, 'UNBOUNDED'], 'valid_source_types': ['radon.nodes.apache.kafka.KafkaTopic'], 'type': 'radon.capabilities.kafka.KafkaHosting'}}, 'interfaces': {'Standard': {'type': 'tosca.interfaces.node.lifecycle.Standard', 'operations': {'stop': {'inputs': {'JAVA_HOME': {'type': 'string', 'required': True, 'default': {'get_attribute': ['SELF', 'java_home']}}, 'KAFKA_HOME': {'type': 'string', 'required': True, 'default': {'get_attribute': ['SELF', 'kafka_home']}}}}, 'start': {'inputs': {'JAVA_HOME': {'type': 'string', 'required': True, 'default': {'get_attribute': ['SELF', 'java_home']}}, 'KAFKA_HOME': {'type': 'string', 'required': True, 'default': {'get_attribute': ['SELF', 'kafka_home']}}}}, 'create': {'inputs': {'KAFKA_VERSION': {'type': 'version', 'required': True, 'default': {'get_property': ['SELF', 'component_version']}}, 'SCALA_VERSION': {'type': 'version', 'required': True, 'default': {'get_property': ['SELF', 'scala_version']}}}}, 'configure': {'inputs': {'ZK_HEAP_SIZE': {'type': 'integer', 'required': True, 'default': {'get_property': ['SELF', 'zk_heap_size']}}, 'JAVA_HOME': {'type': 'string', 'required': True, 'default': {'get_attribute': ['SELF', 'java_home']}}, 'KAFKA_HOME': {'type': 'string', 'required': True, 'default': {'get_attribute': ['SELF', 'kafka_home']}}, 'IP_ADDRESS': {'type': 'string', 'required': True, 'default': {'get_attribute': ['SELF', 'host', 'public_address']}}, 'LOG_CLEANER_ENABLE': {'type': 'boolean', 'required': True, 'default': {'get_property': ['SELF', 'log_cleaner_enable']}}, 'KF_HEAP_SIZE': {'type': 'integer', 'required': True, 'default': {'get_property': ['SELF', 'kf_heap_size']}}}}}}}}}",,155.0,0.0,0.0,115.0,0.0,214.0,5.53,0.0,12.0,1.0,0.0,0.0,0.0,5.0,0.0,0.0,0.0
306,"{'tosca.nodes.indigo.GalaxyWN': {'derived_from': 'tosca.nodes.SoftwareComponent', 'metadata': {'icon': '/images/galaxy.png'}, 'properties': {'front_end_ip': {'type': 'string', 'description': 'IP of the Front-End node', 'required': True}, 'export_dir': {'type': 'string', 'description': 'path to store galaxy data', 'default': '/export', 'required': True}}, 'requirements': [{'host': {'capability': 'tosca.capabilities.Container', 'node': 'tosca.nodes.Compute', 'relationship': 'tosca.relationships.HostedOn'}}], 'interfaces': {'Standard': {'configure': {'implementation': 'https://raw.githubusercontent.com/indigo-dc/tosca-types/master/artifacts/galaxy/galaxy_wn_configure.yml', 'inputs': {'galaxy_front_end_ip': {'get_property': ['SELF', 'front_end_ip']}, 'export_dir': {'get_property': ['SELF', 'export_dir']}}}}}}}",,32.0,0.0,0.0,28.0,0.0,53.0,5.3,0.0,0.0,1.0,0.0,0.0,0.0,2.0,0.0,0.0,0.0
2445,"{'tosca.relationships.Root': {'description': 'The TOSCA root Relationship Type all other TOSCA base Relationship Types derive from', 'attributes': {'tosca_id': {'type': 'string', 'description': 'A unique identifier of the realized instance of a Relationship Template that derives from any TOSCA normative type.'}, 'tosca_name': {'type': 'string', 'description': 'This attribute reflects the name of the Relationship Template as defined in the TOSCA service template.  This name is not unique to the realized instance model of corresponding deployed application as each template in the model can result in one or more instances (e.g., scaled) when orchestrated to a provider environment.\n'}, 'state': {'type': 'string', 'description': 'The state of the relationship instance.', 'default': 'initial'}}, 'interfaces': {'Configure': {'type': 'tosca.interfaces.relationship.Configure'}}}}",,22.0,0.0,0.0,16.0,0.0,109.0,5.86,0.0,0.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
2612,{'my.maven.relationship.extended': {'derived_from': 'my.maven.relationship'}},,2.0,0.0,0.0,2.0,0.0,3.0,1.58,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
1099,{'tosca.nodes.app_server': {'derived_from': 'tosca.nodes.middleware'}},,2.0,0.0,0.0,2.0,0.0,3.0,1.58,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
2029,"{'tosca.nodes.Storage.ObjectStorage': {'metadata': {'shorthand_name': 'ObjectStorage', 'type_qualified_name': 'tosca:ObjectStorage', 'type_uri': 'tosca.nodes.ObjectStorage'}, 'derived_from': 'tosca.nodes.Root', 'properties': {'name': {'type': 'string'}, 'size': {'type': 'scalar-unit.size', 'constraints': [{'greater_or_equal': '0 GB'}]}, 'maxsize': {'type': 'scalar-unit.size', 'constraints': [{'greater_or_equal': '0 GB'}]}}, 'capabilities': {'storage_endpoint': {'type': 'tosca.capabilities.Endpoint'}}}}",,20.0,0.0,0.0,20.0,0.0,32.0,4.44,0.0,0.0,0.0,0.0,0.0,0.0,3.0,0.0,0.0,0.0
1525,"{'tosca.relationships.openstack.network.port.security_group.rule': {'derived_from': 'tosca.relationships.Root', 'valid_target_types': ['tosca.nodes.openstack.network.port.security_group.rule'], 'interfaces': {'Configure': {'type': 'tosca.interfaces.relationship.Configure', 'link': {'implementation': 'openstack_plugin.tasks.security_group:connect_security_groups_rule'}, 'unlink': {'implementation': 'openstack_plugin.tasks.security_group:disconnect_security_groups_rule'}}}}}",,11.0,0.0,0.0,10.0,0.0,15.0,3.77,0.0,0.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
503,"{'org.alien4cloud.spark.linux_sh.nodes.SparkSlave': {'derived_from': 'org.alien4cloud.spark.linux_sh.nodes.SparkNode', 'capabilities': {'spark_master': {'type': 'org.alien4cloud.spark.pub.capabilities.SparkMaster'}}, 'requirements': [{'spark_master': {'capability': 'org.alien4cloud.spark.pub.capabilities.SparkMaster', 'relationship': 'org.alien4cloud.spark.linux_sh.relationships.JoinSparkCluster'}}]}}",,9.0,0.0,0.0,9.0,0.0,13.0,3.39,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
1682,"{'tosca.nodes.sdno.networkDevice.Vpc': {'derived_from': 'tosca.nodes.sdno.networkService', 'description': None, 'properties': {'vpcName': {'type': 'string', 'description': None, 'required': True}, 'dcGWIP': {'type': 'string', 'description': None, 'required': True}}}}",,12.0,0.0,0.0,12.0,0.0,20.0,3.45,0.0,0.0,0.0,0.0,0.0,0.0,2.0,0.0,0.0,0.0
2300,"{'tosca.nodes.indigo.CmsWnConfig': {'derived_from': 'tosca.nodes.SoftwareComponent', 'metadata': {'icon': '/images/cms.png'}, 'properties': {'cms_local_site': {'type': 'string', 'required': True}, 'cms_stageoutsite': {'type': 'string', 'required': True}, 'cms_stageoutserver': {'type': 'string', 'required': True}, 'cms_stageoutprefix': {'type': 'string', 'required': True}, 'cms_stageoutsite_fallback': {'type': 'string', 'required': True}, 'cms_stageoutserver_fallback': {'type': 'string', 'required': True}, 'cms_stageoutprefix_fallback': {'type': 'string', 'required': True}, 'cms_input_path': {'type': 'string', 'required': True}, 'cms_input_protocol': {'type': 'string', 'required': True}, 'mysquid_host': {'type': 'string', 'required': True}, 'proxycache_host': {'type': 'string', 'required': True}, 'monitordb_ip': {'type': 'string', 'required': False}, 'elasticsearch_secret': {'type': 'string', 'required': False}}, 'artifacts': [{'cms_config_role': {'file': 'indigo-dc.cms_config', 'type': 'tosca.artifacts.AnsibleGalaxy.role'}}], 'interfaces': {'Standard': {'configure': {'implementation': 'https://raw.githubusercontent.com/indigo-dc/tosca-types/master/artifacts/mesos/cms_wn_configure.yml', 'inputs': {'cms_config_mysquid_host': {'get_property': ['SELF', 'mysquid_host']}, 'cms_config_proxycache_host': {'get_property': ['SELF', 'proxycache_host']}, 'cms_config_cms_local_site': {'get_property': ['SELF', 'cms_local_site']}, 'cms_config_stageoutsite': {'get_property': ['SELF', 'cms_stageoutsite']}, 'cms_config_stageoutserver': {'get_property': ['SELF', 'cms_stageoutserver']}, 'cms_config_stageoutprefix': {'get_property': ['SELF', 'cms_stageoutprefix']}, 'cms_config_stageoutsite_fallback': {'get_property': ['SELF', 'cms_stageoutsite_fallback']}, 'cms_config_stageoutserver_fallback': {'get_property': ['SELF', 'cms_stageoutserver_fallback']}, 'cms_config_stageoutprefix_fallback': {'get_property': ['SELF', 'cms_stageoutprefix_fallback']}, 'cms_input_path': {'get_property': ['SELF', 'cms_input_path']}, 'cms_input_protocol': {'get_property': ['SELF', 'cms_input_protocol']}, 'cms_config_elastic_secret': {'get_property': ['SELF', 'elasticsearch_secret']}, 'monitordb_ip': {'get_property': ['SELF', 'monitordb_ip']}}}}}, 'requirements': [{'host': {'capability': 'tosca.capabilities.indigo.MesosSlave', 'relationship': 'tosca.relationships.HostedOn', 'node': 'tosca.nodes.SoftwareComponent', 'occurrences': [1, 1]}}]}}",,113.0,0.0,0.0,85.0,0.0,147.0,5.0,0.0,0.0,1.0,0.0,0.0,0.0,13.0,0.0,0.0,0.0
20,"{'tosca.nodes.Compute': {'derived_from': 'tosca.nodes.Root', 'attributes': {'private_address': {'type': 'string'}, 'public_address': {'type': 'string'}, 'networks': {'type': 'map', 'entry_schema': {'type': 'tosca.datatypes.network.NetworkInfo'}}, 'ports': {'type': 'map', 'entry_schema': {'type': 'tosca.datatypes.network.PortInfo'}}}, 'capabilities': {'host': {'type': 'tosca.capabilities.Container'}, 'binding': {'type': 'tosca.capabilities.network.Bindable'}, 'os': {'type': 'tosca.capabilities.OperatingSystem'}, 'scalable': {'type': 'tosca.capabilities.Scalable'}, 'endpoint': {'type': 'tosca.capabilities.Endpoint.Admin'}}, 'requirements': [{'local_storage': {'capability': 'tosca.capabilities.Attachment', 'node': 'tosca.nodes.BlockStorage', 'relationship': 'tosca.relationships.AttachesTo', 'occurrences': [0, 'UNBOUNDED']}}]}}",,34.0,0.0,0.0,32.0,0.0,49.0,4.72,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
686,"{'tosca.nodes.SoftwareComponent': {'metadata': {'puccini.normative': 'true', 'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.1]', 'specification.location': '5.9.3'}, 'description': 'The TOSCA SoftwareComponent node represents a generic software component that can be managed and run by a TOSCA Compute Node Type.', 'derived_from': 'tosca.nodes.Root', 'properties': {'component_version': {'description': ""The optional software component's version."", 'type': 'version', 'required': False}, 'admin_credential': {'description': 'The optional credential that can be used to authenticate to the software component.', 'type': 'tosca.datatypes.Credential', 'required': False}}, 'requirements': [{'host': {'capability': 'tosca.capabilities.Container', 'node': 'tosca.nodes.Compute', 'relationship': 'tosca.relationships.HostedOn'}}]}}",,23.0,0.0,0.0,21.0,0.0,71.0,5.64,0.0,0.0,0.0,0.0,0.0,0.0,2.0,0.0,0.0,0.0
76,"{'tosca.nodes.NodeWithReq': {'derived_from': 'tosca.nodes.SoftwareComponent', 'requirements': [{'host': {'capability': 'tosca.capabilities.SomeCap', 'relationship': 'tosca.relationships.HostedOn', 'occurrences': [1, 1]}}]}}",,9.0,0.0,0.0,7.0,0.0,12.0,3.42,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
624,"{'radon.nodes.datapipeline.process.RouteToRemote': {'derived_from': 'radon.nodes.datapipeline.MidwayPB', 'metadata': {'targetNamespace': 'radon.nodes.datapipeline.process', 'abstract': 'false', 'final': 'false'}}}",,6.0,0.0,0.0,6.0,0.0,10.0,3.12,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
2275,"{'tosca.nodes.indigo.Kepler': {'derived_from': 'tosca.nodes.SoftwareComponent', 'artifacts': {'galaxy_role': {'file': 'indigo-dc.kepler', 'type': 'tosca.artifacts.AnsibleGalaxy.role'}}, 'interfaces': {'Standard': {'configure': {'implementation': 'https://raw.githubusercontent.com/indigo-dc/tosca-types/dodas_roll/artifacts/kepler/kepler_install.yml'}}}}}",,10.0,0.0,0.0,10.0,0.0,14.0,3.81,0.0,0.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
2372,"{'org.alien4cloud.automation.a4c.config.backupRestoreS3.relationships.BackupRestoreS3DependsOnAwsCli': {'derived_from': 'tosca.relationships.DependsOn', 'valid_target_types': ['org.alien4cloud.cloud.amazon.cli.pub.capabilities.AwsCli']}}",,4.0,0.0,0.0,3.0,0.0,5.0,2.32,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
138,"{'org.alien4cloud.nodes.Alien': {'derived_from': 'org.alien4cloud.lang.java.pub.nodes.JavaSoftware', 'description': 'The TOSCA Alien Node Type represents an alien component.', 'metadata': {'icon': '/images/alien4cloud-logo.png'}, 'properties': {'alien_url': {'type': 'string', 'required': True, 'default': 'https://fastconnect.org/maven/content/repositories/opensource/alien4cloud/alien4cloud-ui/1.3.0-RC5/alien4cloud-ui-1.3.0-RC5.war'}, 'context_root': {'type': 'string', 'default': '/'}, 'app_args': {'type': 'string', 'required': False, 'default': ''}}, 'capabilities': {'alien': {'type': 'org.alien4cloud.capabilities.Alien', 'occurrences': [0, 'UNBOUNDED']}}, 'requirements': [{'elasticsearch': {'capability': 'org.alien4cloud.capabilities.ElasticSearch', 'relationship': 'org.alien4cloud.relationships.AlienConnectToElasticSearch', 'occurrences': [1, 'UNBOUNDED']}}], 'interfaces': {'Standard': {'create': {'inputs': {'APPLICATION_URL': {'get_property': ['SELF', 'alien_url']}, 'APP_ARGS': {'get_property': ['SELF', 'app_args']}}, 'implementation': 'scripts/alien/install_alien.sh'}, 'start': 'scripts/alien/start_alien.sh'}}, 'artifacts': [{'configs': {'file': 'configs', 'type': 'tosca.artifacts.File'}}, {'bin': {'file': 'bin', 'type': 'tosca.artifacts.File'}}]}}",,51.0,0.0,0.0,43.0,0.0,79.0,5.68,0.0,0.0,1.0,0.0,0.0,0.0,3.0,0.0,0.0,2.0
135,"{'org.alien4cloud.automation.cloudify.manager.pub.nodes.CloudifyManagerService': {'derived_from': 'tosca.nodes.SoftwareComponent', 'abstract': True, 'metadata': {'icon': 'images/cloudify.png'}, 'capabilities': {'cloudify_api_v3': {'type': 'org.alien4cloud.automation.cloudify.manager.pub.capabilities.CloudifyAPIv3', 'occurrences': [0, 'UNBOUNDED'], 'properties': {'protocol': 'https', 'port': 443}}}, 'requirements': [{'host': {'capability': 'tosca.capabilities.Container', 'occurrences': [0, 0]}}]}}",,20.0,0.0,0.0,16.0,0.0,27.0,4.5,0.0,0.0,0.0,0.0,0.0,0.0,2.0,0.0,0.0,0.0
1228,"{'org.alien4cloud.nodes.Application.Docker.Nodecellar': {'derived_from': 'tosca.nodes.Container.Application.DockerContainer', 'properties': {'docker_run_cmd': {'type': 'string', 'default': 'cd /nodecellar && nodejs server.js'}, 'docker_options': {'type': 'org.alien4cloud.datatypes.docker.cli-args.Nodecellar', 'required': False}, 'docker_env_vars': {'type': 'map', 'description': 'Environment variables for the Docker container.', 'entry_schema': {'type': 'string'}, 'default': {'LOG_LEVEL': None}}}, 'requirements': [{'mongo_db': {'capability': 'tosca.capabilities.Endpoint.Database', 'relationship': 'tosca.relationships.ConnectsTo', 'occurrences': [1, 1]}}], 'capabilities': {'nodecellar_app': {'type': 'org.alien4cloud.capabilities.endpoint.docker.Nodecellar'}}, 'interfaces': {'Standard': {'create': {'inputs': {'ENV_MONGO_HOST': {'get_attribute': ['TARGET', 'mongo_db', 'ip_address']}, 'ENV_MONGO_PORT': {'get_attribute': ['TARGET', 'mongo_db', 'port']}, 'ENV_MONGO_API_VERSION': {'get_property': ['TARGET', 'mongo_db', 'api_version']}, 'ENV_NODECELLAR_PORT': {'get_property': ['SELF', 'nodecellar_app', 'port']}}, 'implementation': {'file': 'afraisse/nodecellar:exp', 'repository': 'docker', 'type': 'tosca.artifacts.Deployment.Image.Container.Docker'}}}}}}",,54.0,0.0,0.0,40.0,0.0,78.0,5.74,0.0,0.0,1.0,0.0,0.0,0.0,3.0,0.0,0.0,0.0
2179,"{'tosca.nodes.Container.Application.RabbitMQ': {'derived_from': 'tosca.nodes.Container.Application', 'description': 'TOSCA Container for RabbitMQ\n', 'capabilities': {'queue_endpoint': {'type': 'tosca.capabilities.Endpoint'}}}}",,6.0,0.0,0.0,6.0,0.0,12.0,3.58,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
2233,"{'sodalite.nodes.DockerHost': {'derived_from': 'tosca.nodes.SoftwareComponent', 'properties': {'registry_ip': {'type': 'string', 'description': 'IP of the SODALITE docker registry', 'required': True, 'default': 'localhost'}}, 'attributes': {'registry_ip': {'type': 'string', 'description': 'IP of the SODALITE docker registry'}}, 'interfaces': {'Standard': {'type': 'tosca.interfaces.node.lifecycle.Standard', 'create': {'inputs': {'registry_ip': {'default': {'get_property': ['SELF', 'registry_ip']}}, 'public_ipv4_address': {'default': {'get_attribute': ['SELF', 'host', 'public_address']}}}, 'implementation': {'primary': 'playbooks/docker/create_docker_host.yml'}}, 'delete': {'inputs': {'registry_ip': {'default': {'get_property': ['SELF', 'registry_ip']}}}, 'implementation': {'primary': 'playbooks/docker/destroy_docker_host.yml'}}}}, 'capabilities': {'host': {'type': 'tosca.capabilities.Compute', 'valid_source_types': ['sodalite.nodes.DockerizedComponent']}}}}",,44.0,0.0,0.0,36.0,0.0,65.0,5.06,0.0,0.0,1.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0
2009,"{'tosca.nodes.DBMS': {'derived_from': 'tosca.nodes.SoftwareComponent', 'description': 'The TOSCA DBMS node represents a typical relational, SQL Database Management System software component or service.', 'tags': {'icon': '/images/relational_db.png'}, 'properties': {'root_password': {'type': 'string', 'required': False, 'description': 'the optional root password for the DBMS service'}, 'port': {'type': 'integer', 'required': False, 'description': 'the port the DBMS service will listen to for data and requests'}}, 'capabilities': {'host': {'type': 'tosca.capabilities.Container'}}}}",,18.0,0.0,0.0,17.0,0.0,60.0,5.37,0.0,0.0,0.0,0.0,0.0,0.0,2.0,0.0,0.0,0.0
2076,"{'sodalite.nodes.AWS.SecurityRules': {'derived_from': 'tosca.nodes.Root', 'properties': {'group_name': {'description': 'Name of the security group in AWS.', 'required': True, 'type': 'string'}, 'rules': {'required': False, 'constraints': [{'min_length': 1}], 'type': 'list', 'entry_schema': {'type': 'sodalite.datatypes.AWS.SecurityRule'}}, 'group_description': {'description': 'Description of the security group in AWS.', 'required': True, 'type': 'string'}, 'vpc_id': {'description': 'ID of the VPC to create the group in.', 'required': True, 'type': 'string'}, 'region': {'description': 'The AWS region to use.', 'required': False, 'type': 'string'}, 'aws_access_key': {'description': 'The AWS region to use.', 'required': False, 'type': 'string'}, 'aws_secret_key': {'description': 'The AWS region to use.', 'required': False, 'type': 'string'}}, 'attributes': {'group_id': {'description': 'ID of the security group in AWS.', 'type': 'string'}}, 'interfaces': {'Standard': {'type': 'tosca.interfaces.node.lifecycle.Standard', 'operations': {'create': {'implementation': {'primary': 'playbooks/security_rule_create.yml'}, 'inputs': {'rules': {'type': 'string', 'default': {'get_property': ['SELF', 'rules']}}, 'vpc_id': {'type': 'string', 'default': {'get_property': ['SELF', 'vpc_id']}}, 'region': {'type': 'string', 'default': {'get_property': ['SELF', 'region']}}, 'aws_access_key': {'type': 'string', 'default': {'get_property': ['SELF', 'aws_access_key']}}, 'aws_secret_key': {'type': 'string', 'default': {'get_property': ['SELF', 'aws_secret_key']}}, 'group_name': {'type': 'string', 'default': {'get_property': ['SELF', 'group_name']}}, 'group_description': {'type': 'string', 'default': {'get_property': ['SELF', 'group_description']}}}}, 'delete': {'implementation': {'primary': 'playbooks/security_rule_delete.yml'}, 'inputs': {'group_id': {'type': 'string', 'default': {'get_attribute': ['SELF', 'group_id']}}, 'aws_access_key': {'type': 'string', 'default': {'get_property': ['SELF', 'aws_access_key']}}, 'aws_secret_key': {'type': 'string', 'default': {'get_property': ['SELF', 'aws_secret_key']}}, 'vpc_id': {'type': 'string', 'default': {'get_property': ['SELF', 'vpc_id']}}, 'region': {'type': 'string', 'default': {'get_property': ['SELF', 'region']}}}}}}}}}",,122.0,0.0,0.0,98.0,0.0,200.0,5.11,0.0,12.0,1.0,0.0,0.0,0.0,7.0,0.0,0.0,0.0
2526,"{'tosca.relationships.network.BindsTo': {'metadata': {'puccini.normative': 'true', 'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.2]', 'specification.location': '8.5.5'}, 'description': 'This type represents a network association relationship between Port and Compute node types.', 'derived_from': 'tosca.relationships.DependsOn', 'valid_target_types': ['tosca.capabilities.network.Bindable']}}",,10.0,0.0,0.0,8.0,0.0,26.0,4.7,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
421,"{'tosca.nodes.Container.Runtime': {'derived_from': 'tosca.nodes.SoftwareComponent', 'description': 'The TOSCA Container Runtime node represents operating system-level virtualization technology used to run multiple application services on a single Compute host.\n', 'capabilities': {'host': {'type': 'tosca.capabilities.Compute', 'valid_source_types': ['tosca.nodes.Container.Application']}, 'scalable': {'type': 'tosca.capabilities.Scalable'}}}}",,12.0,0.0,0.0,9.0,0.0,34.0,5.03,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
830,"{'org.alien4cloud.kubernetes.api.types.AbstractService': {'description': 'Represent a kubernetes Service', 'derived_from': 'org.alien4cloud.kubernetes.api.types.Base', 'properties': {'service_name': {'type': 'string', 'description': 'Usually, the service name is generated by the plugin. If you need to define a static service name, you can define it using this property.\n253 characters and consist of lower case alphanumeric characters, -, and .\n', 'required': False}, 'apiVersion': {'type': 'string', 'description': 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#resources', 'default': 'v1'}, 'kind': {'type': 'string', 'description': 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#types-kinds', 'default': 'Service'}, 'spec': {'type': 'org.alien4cloud.kubernetes.api.datatypes.ServiceSpec'}}}}",,24.0,0.0,2.0,18.0,0.0,127.0,6.3,0.0,0.0,0.0,0.0,0.0,0.0,4.0,0.0,0.0,0.0
1483,"{'dice.hosts.Raw': {'derived_from': 'cloudify.nodes.Compute', 'properties': {'image': {'description': 'Cloud image of the operating system.', 'required': True}, 'user': {'description': 'User that can be usde to SSH into instance.', 'required': True}, 'instance_type': {'description': 'Instance type that should be used.', 'required': True}, 'disk_type': {'description': 'Disk type to be used.', 'required': True}, 'user_data': {'description': 'User data (cloud init) to use when booting', 'default': ''}, 'platform': {'description': 'Specifies what platform will host blueprint.\n', 'required': True}, 'platform_config': {'description': 'Configuration for underlying platform.', 'type': 'dice.datatypes.PlatformConfig', 'required': False}, 'agent_config': {'default': {'user': {'get_property': ['SELF', 'user']}, 'key': '/root/.ssh/dice.key', 'install_method': 'remote'}}}, 'interfaces': {'cloudify.interfaces.lifecycle': {'create': {'implementation': 'dice.dice_plugin.general.create_server', 'executor': 'central_deployment_agent', 'inputs': {'image': {'default': {'get_property': ['SELF', 'image']}}, 'instance_type': {'default': {'get_property': ['SELF', 'instance_type']}}, 'disk_type': {'default': {'get_property': ['SELF', 'disk_type']}}, 'user_data': {'default': {'get_property': ['SELF', 'user_data']}}}}, 'start': {'implementation': 'dice.dice_plugin.general.start_server', 'executor': 'central_deployment_agent'}, 'stop': {'implementation': 'dice.dice_plugin.general.stop_server', 'executor': 'central_deployment_agent'}, 'delete': {'implementation': 'dice.dice_plugin.general.delete_server', 'executor': 'central_deployment_agent'}}, 'cloudify.interfaces.validation': {'creation': {'implementation': 'dice.dice_plugin.general.validate_server', 'executor': 'central_deployment_agent'}}}}}",,72.0,0.0,0.0,62.0,0.0,137.0,5.86,0.0,0.0,2.0,0.0,0.0,0.0,8.0,0.0,0.0,0.0
1011,{'alien.test.nodes.TestComponent': {'derived_from': 'tosca.nodes.SoftwareComponent'}},,2.0,0.0,0.0,2.0,0.0,3.0,1.58,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
1511,"{'tosca.artifacts.openstack.image': {'derived_from': 'tosca.artifacts.Deployment.Image', 'description': 'Glance image artifact', 'image': {'type': 'string'}}}",,5.0,0.0,0.0,5.0,0.0,10.0,3.12,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
1490,"{'tosca.nodes.Compute': {'derived_from': 'tosca.nodes.Root', 'properties': {'mem_size': {'type': 'scalar-unit'}, 'num_cpus': {'type': 'integer'}, 'disk_size': {'type': 'scalar-unit'}, 'availability': {'type': 'float'}}}}",,11.0,0.0,0.0,11.0,0.0,16.0,3.38,0.0,0.0,0.0,0.0,0.0,0.0,4.0,0.0,0.0,0.0
1568,"{'com.toscaruntime.openstack.nodes.Volume': {'derived_from': 'tosca.nodes.BlockStorage', 'properties': {'availability_zone': {'type': 'string', 'required': False}, 'device': {'type': 'string', 'required': False}, 'volume_description': {'type': 'string', 'required': False}, 'volume_type': {'type': 'string', 'required': False}, 'snapshot_id': {'type': 'string', 'required': False}, 'metadata': {'type': 'map', 'required': False, 'entry_schema': {'type': 'string'}}, 'openstack_fail_safe': {'type': 'com.toscaruntime.openstack.OpenstackFailSafeConfiguration', 'default': {'operation_retry': 720, 'wait_between_operation_retry': '10 s'}}}}}",,28.0,0.0,0.0,28.0,0.0,46.0,3.99,0.0,0.0,0.0,0.0,0.0,0.0,7.0,0.0,0.0,0.0
2172,"{'tosca.nodes.Database.WordpressDB': {'derived_from': 'tosca.nodes.Database', 'description': 'Database for Wordpress Web App', 'requirements': [{'connect': {'capability': 'tosca.capabilities.Root', 'node': 'tosca.nodes.Compute', 'relationship': 'tosca.relationships.Root'}}]}}",,8.0,0.0,0.0,8.0,0.0,17.0,4.09,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
324,"{'tosca.nodes.indigo.Container.Application.Docker.Chronos': {'derived_from': 'tosca.nodes.indigo.Container.Application.Docker', 'metadata': {'icon': '/images/chronos.jpg'}, 'properties': {'schedule': {'required': False, 'type': 'string'}, 'command': {'required': True, 'type': 'string'}, 'description': {'required': False, 'type': 'string'}, 'retries': {'required': False, 'type': 'integer'}, 'epsilon': {'required': False, 'type': 'string', 'default': 'PT10S'}, 'privileged': {'required': False, 'type': 'boolean', 'default': True}, 'force_pull_image': {'required': False, 'type': 'boolean', 'default': True}}, 'capabilities': {'parent_job': {'type': 'tosca.capabilities.indigo.Container.Application.Docker.Chronos', 'valid_source_types': ['tosca.nodes.indigo.Container.Application.Docker.Chronos'], 'occurrences': [0, 'UNBOUNDED']}}, 'requirements': [{'parent_job': {'capability': 'tosca.capabilities.indigo.Container.Application.Docker.Chronos', 'node': 'tosca.nodes.indigo.Container.Application.Docker.Chronos', 'relationship': 'tosca.relationships.DependsOn', 'occurrences': [0, 1]}}]}}",,45.0,0.0,0.0,40.0,0.0,68.0,4.74,0.0,0.0,0.0,0.0,0.0,0.0,7.0,0.0,0.0,0.0
2038,"{'radon.nodes.abstract.DataPipeline': {'derived_from': 'tosca.nodes.Root', 'properties': {'name': {'type': 'string'}}, 'artifacts': {'deployment_package': {'description': 'The deployment package for the pipeline', 'type': 'radon.artifacts.archive.Zip'}}, 'requirements': [{'host': {'capability': 'tosca.capabilities.Container', 'relationship': 'tosca.relationships.HostedOn', 'node': 'radon.nodes.abstract.CloudPlatform'}}]}}",,14.0,0.0,0.0,14.0,0.0,26.0,4.62,0.0,0.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0
851,{'yorc.type.WithUndefCap': {'capabilities': {'udef': 'yorc.test.capabilities.Endpoint'}}},,3.0,0.0,0.0,3.0,0.0,4.0,2.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
2388,"{'org.alien4cloud.automation.a4c.config.orchestrator.cfy.relationships.ConnectsToCfy': {'derived_from': 'tosca.relationships.ConnectsTo', 'valid_target_types': ['org.alien4cloud.automation.cloudify.manager.pub.capabilities.CloudifyAPIv3'], 'interfaces': {'Configure': {'pre_configure_source': {'inputs': {'ANSIBLE_VERBOSE': False, 'PLAYBOOK_ENTRY': 'connect_cfy.yml', 'cfy_user': {'get_property': ['TARGET', 'cloudify_api_v3', 'admin_username']}, 'cfy_password': {'get_property': ['TARGET', 'cloudify_api_v3', 'admin_password']}, 'cfy_url': {'concat': [{'get_property': ['TARGET', 'cloudify_api_v3', 'protocol']}, '://', {'get_attribute': ['TARGET', 'cloudify_api_v3', 'ip_address']}, ':', {'get_property': ['TARGET', 'cloudify_api_v3', 'port']}]}}, 'implementation': 'playbook/playbook.ansible'}}}}}",,37.0,0.0,0.0,19.0,0.0,41.0,4.6,0.0,0.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
2450,"{'tosca.relationships.RoutesTo': {'derived_from': 'tosca.relationships.ConnectsTo', 'description': 'This type represents an intentional network routing between two Endpoints in different networks.', 'valid_target_types': ['tosca.capabilities.Endpoint']}}",,6.0,0.0,0.0,4.0,0.0,19.0,4.25,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
631,"{'tosca.nodes.Container.Runtime': {'derived_from': 'tosca.nodes.SoftwareComponent', 'metadata': {'targetNamespace': 'tosca.nodes.Container', 'abstract': 'false', 'final': 'false'}, 'capabilities': {'scalable': {'occurrences': [1, 'UNBOUNDED'], 'type': 'tosca.capabilities.Scalable'}, 'host': {'occurrences': [1, 'UNBOUNDED'], 'valid_source_types': ['tosca.nodes.Container.Application'], 'type': 'tosca.capabilities.Compute'}}}}",,19.0,0.0,0.0,14.0,0.0,25.0,4.24,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
2402,"{'org.alien4cloud.monitoring.diamond.collectors.relationships.DiamondRabbitmqCollector': {'derived_from': 'tosca.relationships.ConnectsTo', 'valid_target_types': ['org.alien4cloud.messaging.rabbitmq.pub.capabilities.RabbitMQManagementEndpoint'], 'interfaces': {'Configure': {'pre_configure_source': {'inputs': {'ANSIBLE_VERBOSE': False, 'PLAYBOOK_ENTRY': 'collect_rabbitmq.yml', 'datasource_name': {'get_attribute': ['SOURCE', 'datasource_name']}, 'collectors_conf_path': {'get_attribute': ['SOURCE', 'collectors_conf_path']}, 'dashboard_dir': {'get_attribute': ['SOURCE', 'dashboard_dir']}, 'rabbitmq_port': {'get_attribute': ['TARGET', 'rabbitmq_management', 'port']}, 'rabbitmq_user': {'get_attribute': ['TARGET', 'rabbitmq_management', 'user']}, 'rabbitmq_password': {'get_attribute': ['TARGET', 'rabbitmq_management', 'password']}}, 'implementation': 'playbook/playbook.ansible'}}}}}",,38.0,0.0,0.0,22.0,0.0,42.0,4.54,0.0,0.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
2376,"{'org.alien4cloud.demo.kafka.topic.relationships.KafkaTopicConnectToBroker': {'derived_from': 'tosca.relationships.ConnectsTo', 'interfaces': {'Configure': {'pre_configure_source': {'inputs': {'KAFKA_IP': {'get_attribute': ['TARGET', 'kafka_endpoint', 'ip_address']}, 'KAFKA_PORT': {'get_attribute': ['TARGET', 'kafka_endpoint', 'port']}}, 'implementation': 'scripts/KafkaTopicConnectToBroker/pre_configure_source.sh'}}}}}",,17.0,0.0,0.0,11.0,0.0,19.0,3.93,0.0,0.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,1.0
2152,"{'dcae.nodes.ExternalTargetFeed': {'derived_from': 'cloudify.dcae.nodes.Root', 'capabilities': {'feed': {'type': 'dcae.capabilities.dmmap.feed'}}, 'properties': {'url': {'type': 'string'}, 'username': {'type': 'string'}, 'userpw': {'type': 'string'}}}}",,12.0,0.0,0.0,12.0,0.0,17.0,3.34,0.0,0.0,0.0,0.0,0.0,0.0,3.0,0.0,0.0,0.0
1419,"{'tosca.test.node': {'derived_from': 'tosca.nodes.Root', 'interfaces': {'Standard': {'type': 'tosca.interfaces.node.lifecycle.Standard', 'create': {'implementation': 'aiorchestra.tests.plugin:is_not_coroutine', 'inputs': {'type': 'map'}}, 'start': {'implementation': 'aiorchestra.tests.plugin:is_not_coroutine', 'inputs': {'type': 'map'}}, 'stop': {'implementation': 'aiorchestra.tests.plugin:is_not_coroutine', 'inputs': {'type': 'map'}}, 'delete': {'implementation': 'aiorchestra.tests.plugin:is_not_coroutine', 'inputs': {'type': 'map'}}, 'configure': {'implementation': 'aiorchestra.tests.plugin:is_not_coroutine', 'inputs': {'type': 'map'}}}}}}",,25.0,0.0,0.0,25.0,0.0,37.0,3.54,0.0,0.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
2177,"{'tosca.nodes.Container.WebApplication.UserApp': {'description': 'Wordpress container from the Docker Hub repository\n', 'derived_from': 'tosca.nodes.Container.WebApplication', 'requirements': [{'MONGO_HOST': {'capability': 'tosca.capabilities.Endpoint.Database', 'relationship': 'tosca.relationships.ConnectsTo'}}]}}",,7.0,0.0,0.0,7.0,0.0,17.0,4.09,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
1718,"{'tosca.nodes.indigo.HaddockApp': {'derived_from': 'tosca.nodes.SoftwareComponent', 'properties': {'haddock_app_name': {'type': 'string', 'description': 'Haddocking application', 'required': True, 'constraints': [{'valid_values': ['disvis', 'powerfit']}]}}, 'artifacts': {'galaxy_role': {'file': 'indigo-dc.disvis-powerfit', 'type': 'tosca.artifacts.AnsibleGalaxy.role'}}, 'interfaces': {'Standard': {'configure': {'implementation': 'https://raw.githubusercontent.com/indigo-dc/tosca-types/master/artifacts/haddock/haddock_install.yml', 'inputs': {'haddock_app_name': {'get_property': ['SELF', 'haddock_app_name']}}}}}}}",,24.0,0.0,0.0,20.0,0.0,32.0,4.79,0.0,0.0,1.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0
563,"{'org.alien4cloud.alien4cloud.config.location.nodes.SimpleLocationConfigurator': {'derived_from': 'org.alien4cloud.alien4cloud.config.pub.nodes.LocationConfigurator', 'description': 'Configure a location for an A4C orchestrator\n', 'properties': {'name': {'type': 'string', 'required': True, 'default': 'MyLocation'}, 'type': {'type': 'string', 'required': True, 'default': 'byon', 'constraints': [{'valid_values': ['amazon', 'byon', 'azure']}]}}, 'attributes': {'locationId': {'get_operation_output': ['SELF', 'Standard', 'create', 'locationId']}}, 'interfaces': {'Standard': {'create': {'inputs': {'ANSIBLE_VERBOSE': False, 'PLAYBOOK_ENTRY': 'create_location.yml', 'location_name': {'get_property': ['SELF', 'name']}, 'location_type': {'get_property': ['SELF', 'type']}, 'orchestratorId': {'get_attribute': ['HOST', 'orchestratorId']}, 'alien_url': {'get_attribute': ['HOST', 'alien_url']}, 'alien_user': {'get_attribute': ['HOST', 'alien_user']}, 'alien_password': {'get_attribute': ['HOST', 'alien_password']}}, 'implementation': 'playbook/playbook.ansible'}}}}}",,55.0,0.0,0.0,36.0,0.0,72.0,5.38,0.0,0.0,1.0,0.0,0.0,0.0,2.0,0.0,0.0,0.0
754,"{'nodecellar.nodes.MongoDatabase': {'derived_from': 'cloudify.nodes.DBMS', 'properties': {'port': {'description': 'MongoDB port', 'type': 'integer'}}, 'interfaces': {'cloudify.interfaces.lifecycle': {'create': 'scripts/mongo/install-mongo.sh', 'start': 'scripts/mongo/start-mongo.sh', 'stop': 'scripts/mongo/stop-mongo.sh'}}}}",,11.0,0.0,0.0,11.0,0.0,18.0,4.06,0.0,0.0,1.0,0.0,0.0,0.0,1.0,0.0,0.0,3.0
1287,"{'org.ystia.samples.hybrid-demo.cost-computing-job.nodes.CostComputingSingularityJob': {'derived_from': 'yorc.nodes.slurm.SingularityJob', 'description': 'TOSCA component to compute price based on the Apache Log Generator sample from Ystia forge (https://github.com/ystia/forge)\n', 'tags': {'icon': '/images/slurm.png'}, 'requirements': [{'elasticsearch': {'capability': 'org.ystia.elasticsearch.pub.capabilities.SearchEndpoint', 'relationship': 'tosca.relationships.ConnectsTo', 'occurrences': [1, 1]}}], 'interfaces': {'tosca.interfaces.node.lifecycle.Runnable': {'submit': {'inputs': {'CC_ES_NODES': {'get_attribute': ['REQ_TARGET', 'elasticsearch', 'api']}}, 'implementation': {'file': 'docker://ystia/compute-apache-logs-ref:latest', 'repository': 'docker', 'type': 'yorc.artifacts.Deployment.SlurmJobImage'}}}}}}",,26.0,0.0,0.0,20.0,0.0,48.0,5.5,0.0,0.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
1797,"{'tosca.nodes.MiCADO.network.Network.Docker': {'derived_from': 'tosca.nodes.network.Network', 'description': 'description of a Docker network', 'properties': {'attachable': {'type': 'boolean', 'description': 'is attachable', 'required': False}, 'driver': {'type': 'string', 'description': 'network driver', 'required': False}, 'ip_version': {'type': 'integer', 'required': False, 'default': None}, 'dhcp_enabled': {'type': 'boolean', 'required': False, 'default': None}}}}",,20.0,0.0,0.0,20.0,0.0,40.0,4.22,0.0,0.0,0.0,0.0,0.0,0.0,4.0,0.0,0.0,0.0
2027,"{'tosca.nodes.DBMS': {'derived_from': 'tosca.nodes.SoftwareComponent', 'properties': {'root_password': {'type': 'string', 'required': False}, 'port': {'type': 'integer', 'required': False}}, 'capabilities': {'host': {'type': 'tosca.capabilities.Container', 'valid_source_types': ['tosca.nodes.Database']}}}}",,14.0,0.0,0.0,13.0,0.0,20.0,3.88,0.0,0.0,0.0,0.0,0.0,0.0,2.0,0.0,0.0,0.0
65,"{'tosca.capabilities.TestCapabilityAA': {'derived_from': 'tosca.capabilities.TestCapabilityA', 'properties': {'test': {'type': 'integer', 'required': False}}}}",,6.0,0.0,0.0,6.0,0.0,9.0,3.17,0.0,0.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0
732,{'cloudify.nodes.MessageBusServer': {'derived_from': 'cloudify.nodes.SoftwareComponent'}},,2.0,0.0,0.0,2.0,0.0,3.0,1.58,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
1221,"{'tosca.nodes.SoftwareComponent.Logstash': {'derived_from': 'tosca.nodes.SoftwareComponent', 'description': ""Pizza store app that allows you to explore the features provided by PayPal's REST APIs. More detail can be found at https://github.com/paypal/rest-api-sample-app-nodejs/"", 'requirements': [{'search_endpoint': {'capability': 'tosca.capabilities.Endpoint', 'node': 'tosca.nodes.SoftwareComponent.Elasticsearch', 'relationship': {'type': 'tosca.relationships.ConnectsTo', 'interfaces': {'Configure': {'pre_configure_source': {'inputs': {'elasticsearch_ip': {'type': 'string'}}}}}}}}], 'capabilities': {'log_endpoint': {'type': 'tosca.capabilities.Endpoint'}}}}",,19.0,0.0,0.0,18.0,0.0,46.0,5.38,0.0,0.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
240,"{'tosca.nodes.vendor.VDU': {'derived_from': 'tosca.nodes.Compute', 'capabilities': {'virtualbinding': {'type': 'tosca.capabilities.vendor.VendorBindable'}}}}",,5.0,0.0,0.0,5.0,0.0,7.0,2.81,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
924,"{'my_node_type': {'derived_from': 'tosca.nodes.Root', 'attributes': {'my_attribute': {'type': 'string', 'default': 'my_default_attribute_default'}}, 'properties': {'my_property': {'type': 'integer'}}, 'interfaces': {'Standard': {'operations': {'create': 'playbooks/create.yaml'}}}}}",,,,,,,,,,,,,,,,,,
2683,"{'org.ystia.yorc.linux.ansible.relationships.JoinConsulAgent': {'derived_from': 'org.ystia.yorc.pub.relationships.JoinConsulAgent', 'interfaces': {'Configure': {'pre_configure_source': {'inputs': {'CONSUL_PORT': {'get_property': ['TARGET', 'consul_agent', 'port']}, 'TLS_ENABLED': {'get_property': ['TARGET', 'tls_enabled']}, 'CONSUL_CONFIG_DIR': {'get_property': ['TARGET', 'config_dir']}, 'CONFIG_DIR': {'get_property': ['SOURCE', 'config_dir']}}, 'implementation': 'playbooks/join_consul.yml'}}}}}",,24.0,0.0,0.0,15.0,0.0,26.0,4.13,0.0,0.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
1338,"{'org.ystia.traefik.pub.nodes.Traefik': {'derived_from': 'tosca.nodes.SoftwareComponent', 'abstract': True, 'metadata': {'icon': '/icons/traefik.logo.png'}, 'capabilities': {'entrypoint': 'org.ystia.traefik.pub.capabilities.EntryPoint', 'cfg_fragment_host': 'org.ystia.traefik.pub.capabilities.ConfigFragmentHost'}}}",,8.0,0.0,0.0,8.0,0.0,13.0,3.7,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
2030,"{'tosca.nodes.Storage.BlockStorage': {'metadata': {'shorthand_name': 'BlockStorage', 'type_qualified_name': 'tosca:BlockStorage', 'type_uri': 'tosca.nodes.BlockStorage'}, 'derived_from': 'tosca.nodes.Root', 'properties': {'size': {'type': 'scalar-unit.size', 'constraints': [{'greater_or_equal': '1 MB'}]}, 'volume_id': {'type': 'string', 'required': False}, 'snapshot_id': {'type': 'string', 'required': False}}, 'capabilities': {'attachment': {'type': 'tosca.capabilities.Attachment'}}}}",,20.0,0.0,0.0,20.0,0.0,32.0,4.56,0.0,0.0,0.0,0.0,0.0,0.0,3.0,0.0,0.0,0.0
7,{'tosca.nodes.nfv.VL.ETree': {'derived_from': 'tosca.nodes.nfv.VL'}},,2.0,0.0,0.0,2.0,0.0,3.0,1.58,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
1151,"{'my_company.my_types.MyAppNodeType': {'derived_from': 'tosca.nodes.SoftwareComponent', 'description': 'My company’s custom applicaton', 'requirements': [{'host': {'capability': 'tosca.capabilities.Container', 'node': 'tosca.nodes.Compute', 'relationship': 'tosca.relationships.HostedOn', 'occurences': [1, 1], 'node_filter': {'properties': [{'os_type': {'valid_values': ['linux', 'unix']}}, {'os_mix': [{'valid_values': ['linux', 'unix']}, {'in_range': [1, 4]}]}, {'os_arch': [{'valid_values': ['x86_64', 'x86_32']}, {'in_range': [1, 4]}]}], 'capabilities': [{'host': {'properties': [{'num_cpus': {'in_range': [1, 4]}}, {'mem_size': {'greater_or_equal': '2 MB'}}]}}, {'mytypes.capabilities.compute.encryption': {'properties': [{'algorithm': {'equal': 'aes'}}, {'keylength': [{'valid_values': [128, 256]}, {'equal': 128}]}]}}]}}}, {'other': {'capability': 'tosca.capabilities.Endpoint', 'occurences': [0, 'unbounded']}}]}}",,54.0,0.0,0.0,36.0,0.0,67.0,5.35,0.0,0.0,0.0,0.0,0.0,0.0,7.0,0.0,0.0,0.0
51,"{'tosca.nodes.nfv.Vdu.Compute': {'derived_from': 'tosca.nodes.Root', 'description': '', 'properties': {'name': {'type': 'string', 'required': True}, 'description': {'type': 'string', 'required': False}, 'monitoring_parameters': {'type': 'list', 'description': '', 'required': False, 'entry_schema': {'type': 'tosca.datatypes.nfv.VnfcMonitoringParameter'}}, 'sw_image_data': {'type': 'tosca.datatypes.nfv.SwImageData', 'required': False}}}}",,19.0,0.0,0.0,19.0,0.0,31.0,3.89,0.0,0.0,0.0,0.0,0.0,0.0,4.0,0.0,0.0,0.0
