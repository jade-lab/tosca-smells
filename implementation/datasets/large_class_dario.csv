id,type,smelly
2126,"{'sodalite.nodes.OpenStack.VM': {'derived_from': 'tosca.nodes.Compute', 'properties': {'network': {'description': 'OpenStack network id (network names are not accepted)', 'type': 'string'}, 'name': {'description': 'Name that should be given to the VM in OpenStack', 'type': 'string'}, 'security_groups': {'description': 'OpenStack names of the security groups to which the instance should be added.Comma separated string.', 'type': 'string'}, 'flavor': {'description': 'OpenStack flavor id (flavor names are not accepted)', 'type': 'string'}, 'image': {'description': 'OpenStack image id (image names are not accepted)', 'type': 'string'}, 'key_name': {'description': 'OpenStack SSH key name that should be placed on the VM', 'type': 'string'}, 'username': {'description': 'Username for SSH connection', 'type': 'string'}, 'ssh_config': {'description': 'Additional ssh config, to be added to default ansible_ssh_common_args', 'type': 'map', 'required': False, 'default': {}}, 'include_exporter': {'description': 'Flag to include exporter', 'type': 'boolean', 'default': True, 'required': False}, 'timeout': {'description': 'Timeout to instantiate the VM', 'type': 'integer', 'default': 600, 'required': False}, 'floating_ip_pools': {'description': 'Name of floating IP pool from which to choose a floating IP', 'type': 'list', 'default': None, 'required': False}, 'userdata': {'description': 'Additional userdata applied to configure the VM', 'type': 'string', 'default': '', 'required': False}, 'env': {'description': 'Optional OpenStack environment', 'type': 'map', 'entry_schema': {'type': 'sodalite.datatypes.OpenStack.env'}, 'required': False, 'default': None}}, 'attributes': {'id': {'description': 'OpenStack id of the VM', 'type': 'string'}, 'ansible_ip': {'description': 'ansible ipv4', 'type': 'string'}}, 'requirements': [{'protected_by': {'relationship': 'tosca.relationships.DependsOn', 'node': 'sodalite.nodes.OpenStack.SecurityRules', 'capability': 'tosca.capabilities.Node', 'occurrences': [0, 'UNBOUNDED']}}], 'capabilities': {'feature': {'type': 'tosca.capabilities.Node'}}, 'interfaces': {'Standard': {'type': 'tosca.interfaces.node.lifecycle.Standard', 'operations': {'create': {'inputs': {'network': {'type': 'string', 'default': {'get_property': ['SELF', 'network']}}, 'flavor': {'type': 'string', 'default': {'get_property': ['SELF', 'flavor']}}, 'key_name': {'type': 'string', 'default': {'get_property': ['SELF', 'key_name']}}, 'image': {'type': 'string', 'default': {'get_property': ['SELF', 'image']}}, 'security_groups': {'type': 'string', 'default': {'get_property': ['SELF', 'security_groups']}}, 'vm_name': {'type': 'string', 'default': {'get_property': ['SELF', 'name']}}, 'ansible_user': {'type': 'string', 'default': {'get_property': ['SELF', 'username']}}, 'ssh_config': {'type': 'string', 'default': {'get_property': ['SELF', 'ssh_config']}}, 'include_exporter': {'type': 'boolean', 'default': {'get_property': ['SELF', 'include_exporter']}}, 'timeout': {'type': 'integer', 'default': {'get_property': ['SELF', 'timeout']}}, 'floating_ip_pools': {'type': 'list', 'default': {'get_property': ['SELF', 'floating_ip_pools']}}, 'userdata': {'type': 'string', 'default': {'get_property': ['SELF', 'userdata']}}, 'env': {'type': 'map', 'default': {'get_property': ['SELF', 'env']}}}, 'implementation': {'primary': 'playbooks/vm_create.yml', 'dependencies': ['playbooks/egi_refresh_token.yml']}}, 'delete': {'inputs': {'id': {'type': 'string', 'default': {'get_attribute': ['SELF', 'id']}}, 'env': {'type': 'map', 'default': {'get_property': ['SELF', 'env']}}}, 'implementation': {'primary': 'playbooks/vm_delete.yml', 'dependencies': ['playbooks/egi_refresh_token.yml']}}}}}}}",True
455,"{'tosca.nodes.MiCADO.Edge.Azure': {'description': 'Azure edge node for MiCADO', 'derived_from': 'tosca.nodes.MiCADO.Azure.Compute', 'interfaces': {'Terraform': {'type': 'tosca.interfaces.MiCADO.Terraform'}}}}",False
362,"{'tosca.nodes.indigo.Elasticsearch': {'derived_from': 'tosca.nodes.SoftwareComponent', 'properties': {'es_version': {'type': 'string', 'required': False, 'default': '7.4.1'}, 'bind_address': {'type': 'string', 'required': False, 'default': '0.0.0.0'}, 'discovery_type': {'type': 'string', 'required': False, 'default': 'single-node'}, 'enable_security': {'type': 'boolean', 'default': True, 'required': False}, 'elastic_password': {'type': 'string', 'required': False, 'default': 'changeme'}, 'kibana_system_password': {'type': 'string', 'required': False, 'default': 'changeme'}}, 'artifacts': {'es_role': {'file': 'elastic.elasticsearch,7.4.1', 'type': 'tosca.artifacts.AnsibleGalaxy.role'}}, 'interfaces': {'Standard': {'configure': {'implementation': 'https://raw.githubusercontent.com/indigo-dc/tosca-types/add-ek/artifacts/master/elasticsearch_install.yml', 'inputs': {'es_version': {'get_property': ['SELF', 'es_version']}, 'bind_host': {'get_property': ['SELF', 'bind_address']}, 'discovery_type': {'get_property': ['SELF', 'discovery_type']}, 'enable_security': {'get_property': ['SELF', 'enable_security']}, 'elastic_password': {'get_property': ['SELF', 'elastic_password']}, 'kibana_system_password': {'get_property': ['SELF', 'kibana_system_password']}}}}}}}",True
447,"{'tosca.nodes.MiCADO.Compute': {'description': 'Base compute node for MiCADO', 'derived_from': 'tosca.nodes.Compute', 'properties': {'context': {'type': 'context_type', 'required': False}}, 'capabilities': {'host': {'type': 'tosca.capabilities.Compute'}, 'os': {'type': 'tosca.capabilities.OperatingSystem'}, 'scalable': {'type': 'tosca.capabilities.Scalable'}}}}",False
167,"{'org.alien4cloud.monitoring.pub.nodes.MonitoringAgent': {'derived_from': 'tosca.nodes.SoftwareComponent', 'abstract': True, 'description': 'An agent that collects metrics and store them into a MetricsBackend\n', 'metadata': {'icon': '/images/metrics.png'}}}",False