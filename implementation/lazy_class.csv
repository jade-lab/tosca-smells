id,type,smelly,lines_code,lines_blank,lines_comment,num_keys,num_suspicious_comments,num_tokens,text_entropy,num_imports,num_inputs,num_interfaces,num_node_templates,num_node_types,num_parameters,num_properties,num_relationship_templates,num_relationship_types,num_shell_scripts
82,"{'example.QueuingSubsystem': {'derived_from': 'tosca.nodes.SoftwareComponent', 'properties': {'server_ip': {'type': 'string'}, 'server_port': {'type': 'integer'}}, 'attributes': {'server_ip': {'type': 'string'}, 'server_port': {'type': 'integer'}}, 'requirements': [{'receiver1': {'node': 'example.TransactionSubsystem', 'capability': 'example.capabilities.Receiver', 'relationship': 'tosca.relationships.ConnectsTo'}}, {'receiver2': {'node': 'example.TransactionSubsystem', 'capability': 'example.capabilities.Receiver', 'relationship': 'tosca.relationships.ConnectsTo'}}]}}",,21.0,0.0,0.0,21.0,0.0,32.0,4.12,0.0,0.0,0.0,0.0,0.0,0.0,2.0,0.0,0.0,0.0
46,"{'tosca.nodes.SomeNode': {'derived_from': 'tosca.nodes.Root', 'capabilities': {'cap1': {'type': 'tosca.capabilities.SomeCap'}}}}",,5.0,0.0,0.0,5.0,0.0,7.0,2.81,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
914,{'cli_commands_test.nodes.node2': {'derived_from': 'tosca.nodes.SoftwareComponent'}},,2.0,0.0,0.0,2.0,0.0,3.0,1.58,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
976,{'tosca.nodes.Root': {'description': 'root type'}},,2.0,0.0,0.0,2.0,0.0,4.0,2.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
445,"{'tosca.nodes.MiCADO.network.Network.Docker': {'description': 'description of a Docker network', 'derived_from': 'tosca.nodes.network.Network', 'properties': {'attachable': {'type': 'boolean', 'description': 'is attachable', 'required': False}, 'driver': {'type': 'string', 'description': 'network driver', 'required': False}, 'external': {'type': 'boolean', 'required': False}, 'driver_opts': {'type': 'map', 'description': 'network driver options (incl. mtu)', 'required': False}, 'ip_version': {'type': 'integer', 'required': False, 'default': None}, 'dhcp_enabled': {'type': 'boolean', 'required': False, 'default': None}}}}",,27.0,0.0,0.0,27.0,0.0,56.0,4.41,0.0,0.0,0.0,0.0,0.0,0.0,6.0,0.0,0.0,0.0
2248,"{'tosca.nodes.indigo.GalaxyReferenceData': {'derived_from': 'tosca.nodes.WebApplication', 'properties': {'reference_data': {'type': 'boolean', 'description': 'Install Reference data', 'default': True, 'required': True}, 'flavor': {'type': 'string', 'description': 'name of the Galaxy flavor', 'required': True, 'default': 'galaxy-no-tools'}, 'refdata_repository_name': {'type': 'string', 'description': 'Onedata space name, CernVM-FS repository name or subdirectory downaload name', 'default': 'elixir-italy.galaxy.refdata', 'required': False}, 'refdata_provider_type': {'type': 'string', 'description': 'Select Reference data provider type (Onedata, CernVM-FS or download)', 'default': 'cvmfs', 'required': False}, 'refdata_provider': {'type': 'string', 'description': 'Oneprovider for reference data', 'default': 'not_a_provider', 'required': False}, 'refdata_token': {'type': 'string', 'description': 'Access token for reference data', 'default': 'not_a_token', 'required': False}, 'refdata_cvmfs_server_url': {'type': 'string', 'description': 'CernVM-FS server, replica or stratum-zero', 'default': 'server_url', 'required': False}, 'refdata_cvmfs_repository_name': {'type': 'string', 'description': 'Reference data CernVM-FS repository name', 'default': 'not_a_cvmfs_repository_name', 'required': False}, 'refdata_cvmfs_key_file': {'type': 'string', 'description': 'CernVM-FS public key', 'default': 'not_a_key', 'required': False}, 'refdata_cvmfs_proxy_url': {'type': 'string', 'description': 'CernVM-FS proxy url', 'default': 'DIRECT', 'required': False}, 'refdata_cvmfs_proxy_port': {'type': 'integer', 'description': 'CernVM-FS proxy port', 'default': 80, 'required': False}, 'refdata_dir': {'type': 'string', 'description': 'path to store galaxy reference data', 'default': '/refdata', 'required': False}}, 'requirements': [{'host': {'capability': 'tosca.capabilities.Container', 'node': 'tosca.nodes.indigo.GalaxyPortal', 'relationship': 'tosca.relationships.HostedOn'}}], 'artifacts': {'oneclient_role': {'file': 'indigo-dc.oneclient', 'type': 'tosca.artifacts.AnsibleGalaxy.role'}, 'cvmfs_role': {'file': 'indigo-dc.cvmfs-client', 'type': 'tosca.artifacts.AnsibleGalaxy.role'}, 'galaxy_role': {'file': 'indigo-dc.galaxycloud-refdata', 'type': 'tosca.artifacts.AnsibleGalaxy.role'}}, 'interfaces': {'Standard': {'configure': {'implementation': 'https://raw.githubusercontent.com/indigo-dc/tosca-types/dodas_roll/artifacts/galaxy/galaxy_redfata_configure.yml', 'inputs': {'get_refdata': {'get_property': ['SELF', 'reference_data']}, 'galaxy_flavor': {'get_property': ['SELF', 'flavor']}, 'refdata_repository_name': {'get_property': ['SELF', 'refdata_repository_name']}, 'refdata_provider_type': {'get_property': ['SELF', 'refdata_provider_type']}, 'refdata_provider': {'get_property': ['SELF', 'refdata_provider']}, 'refdata_token': {'get_property': ['SELF', 'refdata_token']}, 'refdata_cvmfs_server_url': {'get_property': ['SELF', 'refdata_cvmfs_server_url']}, 'refdata_cvmfs_repository_name': {'get_property': ['SELF', 'refdata_cvmfs_repository_name']}, 'refdata_cvmfs_key_file': {'get_property': ['SELF', 'refdata_cvmfs_key_file']}, 'refdata_cvmfs_proxy_url': {'get_property': ['SELF', 'refdata_cvmfs_proxy_url']}, 'refdata_cvmfs_proxy_port': {'get_property': ['SELF', 'refdata_cvmfs_proxy_port']}, 'refdata_dir': {'get_property': ['SELF', 'refdata_dir']}}}}}}}",,132.0,0.0,0.0,107.0,0.0,239.0,5.9,0.0,0.0,1.0,0.0,0.0,0.0,12.0,0.0,0.0,0.0
529,"{'org.alien4cloud.vault.pub.Policy': {'abstract': True, 'derived_from': 'tosca.nodes.Root', 'description': 'Represent the vault policy\n', 'tags': {'icon': '/images/vault.png'}, 'requirements': [{'vault': {'capability': 'org.alien4cloud.vault.pub.capabilities.VaultServer', 'relationship': 'org.alien4cloud.vault.pub.relationships.PolicyHostedOnVaultServer', 'occurrences': [0, 1]}}]}}",,13.0,0.0,0.0,11.0,0.0,22.0,4.37,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
37,"{'tosca.nodes.myserver': {'derived_from': 'tosca.nodes.Compute', 'properties': {'key_name': {'type': 'string'}, 'image': {'type': 'string'}, 'flavor': {'type': 'string'}}}}",,9.0,0.0,0.0,9.0,0.0,13.0,2.97,0.0,0.0,0.0,0.0,0.0,0.0,3.0,0.0,0.0,0.0
2758,"{'my.relationships.MockServerClient': {'derived_from': 'tosca.relationships.DependsOn', 'valid_target_types': ['my.nodes.MockServer']}}",,4.0,0.0,0.0,3.0,0.0,5.0,2.32,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
2011,"{'tosca.nodes.BlockStorage': {'abstract': True, 'derived_from': 'tosca.nodes.Root', 'description': 'The TOSCA BlockStorage node currently represents a server-local block storage device (i.e., not shared) offering evenly sized blocks of data from which raw storage volumes can be created.\n', 'tags': {'icon': '/images/volume.png'}, 'properties': {'size': {'type': 'scalar-unit.size', 'description': 'The requested storage size (default unit is MB). Note: - Required when an existing volume (i.e., volume_id) is not available. - If volume_id is provided, size is ignored.  Resize of existing volumes is not considered at this time.\n', 'constraints': [{'greater_or_equal': '1 MB'}]}, 'volume_id': {'type': 'string', 'description': 'ID of an existing volume (that is in the accessible scope of the requesting application).', 'required': False}, 'snapshot_id': {'type': 'string', 'description': 'Some identifier that represents an existing snapshot that should be used when creating the block storage (volume).', 'required': False}, 'device': {'type': 'string', 'description': 'The logical device name which for the attached device (which is represented by the target node in the model). e.g., ‘/dev/hda1’ Note: this property will be moved in next releases to the AttachTo relationship as it is specified by TOSCA spec.\n', 'required': False}}, 'requirements': [{'attachment': 'tosca.capabilities.Attachment'}]}}",,36.0,0.0,0.0,26.0,0.0,178.0,6.53,0.0,0.0,0.0,0.0,0.0,0.0,4.0,0.0,0.0,0.0
409,"{'SuperCompute': {'derived_from': 'tosca:Compute', 'interfaces': {'backup': {'type': 'Backup'}}}}",,5.0,0.0,0.0,5.0,0.0,7.0,2.81,0.0,0.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
1659,"{'org.alien4cloud.kubernetes.api.types.BaseJobResource': {'abstract': True, 'derived_from': 'org.alien4cloud.nodes.Job', 'description': 'Represent a Job kubernetes final resource after node matching\n', 'properties': {'namespace': {'type': 'string', 'required': False, 'description': 'The namespace where the resource is deployed.\n'}, 'resource_spec': {'type': 'string', 'description': 'The the JSON serialization (and eventually transformation) of initial node properties.\nThis JSON can be used to instanciate the resource on the K8S cluster.\n'}, 'kube_config': {'type': 'string', 'required': False, 'description': 'The kube config that will be used if provided\n'}}, 'artifacts': [{'commons': {'type': 'tosca.artifacts.File', 'file': 'scripts/commons.sh'}}]}}",,22.0,0.0,0.0,20.0,0.0,77.0,5.59,0.0,0.0,0.0,0.0,0.0,0.0,3.0,0.0,0.0,1.0
2536,"{'tosca.relationships.DependsOn': {'metadata': {'puccini.normative': 'true', 'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.7.2'}, 'description': 'This type represents a general dependency relationship between two nodes.', 'derived_from': 'tosca.relationships.Root', 'valid_target_types': ['tosca.capabilities.Node']}}",,10.0,0.0,0.0,8.0,0.0,23.0,4.52,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
2774,"{'org.alien4cloud.relationships.MarathonHostedOnMaster': {'derived_from': 'tosca.relationships.HostedOn', 'description': 'Relationship used to bind the Marathon scheduler to a Mesos Master', 'valid_target_types': ['org.alien4cloud.nodes.MesosMaster']}}",,5.0,0.0,0.0,4.0,0.0,17.0,3.97,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
1081,"{'org.alien4cloud.tests.nodes.RangeProperty': {'derived_from': 'tosca.nodes.Root', 'properties': {'range_property': {'type': 'range', 'default': [1, 25], 'required': False, 'constraints': [{'in_range': [3, 65535]}]}}}}",,13.0,0.0,0.0,9.0,0.0,16.0,4.0,0.0,0.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0
1125,"{'alien.test.nodes.ApplicationServer': {'abstract': True, 'derived_from': 'tosca.nodes.SoftwareComponent', 'requirements': [{'jvm': 'alien.test.capabilities.JVMEndpoint', 'type': 'alien.test.relationships.DependsOnJVM', 'occurrences': [1, 1]}], 'capabilities': {'app_server': {'type': 'alien.test.capabilities.AppServer'}}}}",,12.0,0.0,0.0,10.0,0.0,17.0,3.85,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
1065,{'tosca.nodes.MessageBus': {'derived_from': 'tosca.nodes.Middleware'}},,2.0,0.0,0.0,2.0,0.0,3.0,1.58,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
1278,"{'tosca.nodes.Container.Application.Docker': {'derived_from': 'tosca.nodes.Container.Application', 'requirements': [{'host': {'capability': 'tosca.capabilities.Container.Docker', 'node': 'tosca.nodes.Container.Runtime', 'relationship': 'tosca.relationships.HostedOn'}}]}}",,7.0,0.0,0.0,7.0,0.0,11.0,3.46,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
2597,"{'tosca.relationships.ConnectsTo': {'derived_from': 'tosca.relationships.DependsOn', 'valid_target_types': ['tosca.capabilities.Endpoint']}}",,4.0,0.0,0.0,3.0,0.0,5.0,2.32,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
944,"{'tosca.nodes.LoadBalancer': {'derived_from': 'tosca.nodes.Root', 'properties': {'algorithm': {'type': 'string', 'required': False, 'status': 'experimental'}}, 'capabilities': {'client': {'type': 'tosca.capabilities.Endpoint.Public', 'occurrences': [0, 'UNBOUNDED'], 'description': 'The Floating (IP) clients on the public network can connect to.\n'}}, 'requirements': [{'application': {'capability': 'tosca.capabilities.Endpoint', 'relationship': 'tosca.relationships.RoutesTo', 'occurrences': [0, 'UNBOUNDED']}}]}}",,21.0,0.0,0.0,17.0,0.0,39.0,5.08,0.0,0.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0
1826,"{'tosca.nodes.nfv.CP': {'derived_from': 'tosca.nodes.Root', 'properties': {'type': {'type': 'string', 'required': False}}, 'requirements': [{'virtualLink': {'capability': 'tosca.capabilities.nfv.VirtualLinkable'}}, {'virtualbinding': {'capability': 'tosca.capabilities.nfv.VirtualBindable'}}], 'attributes': {'IP_address': {'type': 'string'}}}}",,14.0,0.0,0.0,14.0,0.0,20.0,3.88,0.0,0.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0
749,"{'tosca.nodes.Container.Runtime': {'metadata': {'puccini.normative': 'true', 'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.9.12'}, 'description': 'The TOSCA Container Runtime node represents operating system-level virtualization technology used to run multiple application services on a single Compute host.', 'derived_from': 'tosca.nodes.SoftwareComponent', 'capabilities': {'host': {'type': 'tosca.capabilities.Container', 'valid_source_types': ['tosca.nodes.Container.Application']}, 'scalable': {'type': 'tosca.capabilities.Scalable'}}}}",,16.0,0.0,0.0,13.0,0.0,41.0,5.31,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
1124,"{'tosca.nodes.ApplicationServer': {'abstract': True, 'derived_from': 'tosca.nodes.SoftwareComponent', 'description': 'The TOSCA ApplicationServer Node Type represents a generic application server. It should be inherited to define an actual application server (Such as Tomcat) and lifecycle implementation.\n', 'capabilities': {'host': {'type': 'tosca.capabilities.Container', 'lower_bound': 0, 'upper_bound': 'unbounded'}}}}",,11.0,0.0,0.0,9.0,0.0,40.0,5.27,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
2083,"{'sodalite.nodes.Tests': {'derived_from': 'tosca.nodes.SoftwareComponent', 'attributes': {'status': {'type': 'string', 'description': 'Serves as a return value of the test'}, 'checked_against': {'type': 'string', 'description': 'Serves as a return value of the data that the test is testing'}}}}",,9.0,0.0,0.0,9.0,0.0,33.0,4.29,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
5,"{'tosca.nodes.nfv.VL.ELine': {'derived_from': 'tosca.nodes.nfv.VL', 'capabilities': {'virtual_linkable': {'occurrences': 2}}}}",,5.0,0.0,0.0,5.0,0.0,7.0,2.81,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
661,"{'tosca.nodes.WebServer': {'derived_from': 'tosca.nodes.SoftwareComponent', 'metadata': {'targetNamespace': 'tosca.nodes', 'abstract': 'false', 'final': 'false'}, 'capabilities': {'data_endpoint': {'occurrences': [1, 'UNBOUNDED'], 'type': 'tosca.capabilities.Endpoint'}, 'admin_endpoint': {'occurrences': [1, 'UNBOUNDED'], 'type': 'tosca.capabilities.Endpoint.Admin'}, 'host': {'occurrences': [1, 'UNBOUNDED'], 'valid_source_types': ['tosca.nodes.WebApplication'], 'type': 'tosca.capabilities.Compute'}}}}",,24.0,0.0,0.0,17.0,0.0,31.0,4.28,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
985,"{'tosca.nodes.Root': {'abstract': True, 'description': 'This is the default (root) TOSCA Node Type that all other TOSCA nodes should extends. This allows all TOSCA nodes to have a consistent set of features for modeling and management (e.g, consistent definitions for requirements, capabilities, and lifecycle interfaces).\n', 'tags': {'icon': '/images/root.png'}, 'attributes': {'tosca_id': {'type': 'string'}, 'tosca_name': {'type': 'string'}}, 'requirements': [{'dependency': {'capability': 'tosca.capabilities.Feature', 'occurrences': [0, 'unbounded']}}], 'capabilities': {'feature': {'type': 'tosca.capabilities.Feature', 'occurrences': [0, 'unbounded']}}, 'interfaces': {'lifecycle': {'description': 'Default lifecycle for nodes in TOSCA.', 'create': {'description': 'Basic lifecycle create operation.'}, 'configure': {'description': 'Basic lifecycle configure operation.'}, 'start': {'description': 'Basic lifecycle start operation.'}, 'stop': {'description': 'Basic lifecycle stop operation.'}, 'delete': {'description': 'Basic lifecycle delete operation.'}}}}}",,38.0,0.0,0.0,31.0,0.0,107.0,5.68,0.0,0.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
1865,"{'aria.openstack.nodes.Subnet': {'derived_from': 'tosca.nodes.Root', 'properties': {'subnet': {'type': 'aria.openstack.datatypes.Subnet', 'required': False, 'default': {'cidr': '172.16.0.0/16'}}, 'use_external_resource': {'type': 'boolean', 'default': False, 'description': 'a boolean for setting whether to create the resource or use an existing one. See the using existing resources section.'}, 'create_if_missing': {'default': False, 'type': 'boolean', 'description': 'If use_external_resource is ``true`` and the resource is missing, create it instead of failing.'}, 'resource_id': {'default': '', 'type': 'string', 'description': ""name to give to the new resource or the name or ID of an existing resource when the ``use_external_resource`` property is set to ``true`` (see the using existing resources section). Defaults to '' (empty string).""}, 'openstack_config': {'type': 'aria.openstack.datatypes.Config', 'required': False}}, 'interfaces': {'Standard': {'create': {'implementation': 'cloudify-openstack-plugin > neutron_plugin.subnet.create', 'inputs': {'args': {'required': False, 'type': 'aria.openstack.datatypes.Subnet', 'default': {'cidr': '172.16.0.0/16'}}}}, 'delete': 'cloudify-openstack-plugin > neutron_plugin.subnet.delete'}, 'Validation': {'type': 'aria.openstack.interfaces.validation', 'creation': {'implementation': 'cloudify-openstack-plugin > neutron_plugin.subnet.creation_validation', 'inputs': {'args': {'type': 'aria.openstack.datatypes.Subnet', 'required': False, 'default': {'cidr': '172.16.0.0/16'}}}}}}, 'requirements': [{'router': {'capability': 'tosca.capabilities.Node', 'node': 'aria.openstack.nodes.Router', 'relationship': 'aria.openstack.subnet_connected_to_router', 'occurrences': [0, 'UNBOUNDED']}}, {'network': {'capability': 'tosca.capabilities.Node', 'node': 'aria.openstack.nodes.Network'}}], 'capabilities': {'subnet': {'type': 'tosca.capabilities.Node'}}}}",,62.0,0.0,0.0,56.0,0.0,161.0,6.13,0.0,0.0,2.0,0.0,0.0,0.0,5.0,0.0,0.0,0.0
353,"{'tosca.nodes.indigo.JupyterHub': {'derived_from': 'tosca.nodes.SoftwareComponent', 'metadata': {'icon': '/images/jupyterhub.png'}, 'properties': {'spawner': {'required': False, 'type': 'string', 'default': 'local', 'constraints': [{'valid_values': ['local', 'kubernetes']}]}, 'authenticator': {'required': False, 'type': 'string', 'default': 'local', 'constraints': [{'valid_values': ['local', 'dummy']}]}}, 'artifacts': {'kube_role': {'file': 'indigo-dc.jupyterhub,master', 'type': 'tosca.artifacts.AnsibleGalaxy.role'}}, 'interfaces': {'Standard': {'configure': {'implementation': 'https://raw.githubusercontent.com/indigo-dc/tosca-types/master/artifacts/jupyter/jupyterhub_install.yml', 'inputs': {'jupyterhub_spawner': {'get_property': ['SELF', 'spawner']}, 'jupyterhub_authenticator': {'get_property': ['SELF', 'spawner']}}}}}}}",,38.0,0.0,0.0,30.0,0.0,49.0,4.93,0.0,0.0,1.0,0.0,0.0,0.0,2.0,0.0,0.0,0.0
2714,"{'org.ystia.yorc.experimental.consul.linux.ansible.relationships.JoinServerWAN': {'derived_from': 'tosca.relationships.ConnectsTo', 'description': 'Connects a Consul server to another Consul server using its WAN address\n', 'valid_target_types': ['org.ystia.yorc.experimental.consul.pub.capabilities.ConsulServerWAN'], 'interfaces': {'Configure': {'pre_configure_source': {'inputs': {'SERVER_WAN_IP': {'get_attribute': ['TARGET', 'public_address']}, 'CONFIG_DIR': {'get_property': ['SOURCE', 'config_dir']}}, 'implementation': 'playbooks/consul_connects_servers_wan.yaml'}}}}}",,18.0,0.0,0.0,13.0,0.0,32.0,4.88,0.0,0.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
171,"{'org.alien4cloud.monitoring.pub.nodes.GrafanaService': {'derived_from': 'tosca.nodes.SoftwareComponent', 'abstract': True, 'metadata': {'icon': '/images/grafana.png'}, 'capabilities': {'http_endpoint': {'type': 'org.alien4cloud.monitoring.pub.capabilities.GrafanaHttpEndpoint', 'occurrences': [0, 'UNBOUNDED'], 'description': 'UI endpoint'}}}}",,12.0,0.0,0.0,10.0,0.0,18.0,4.17,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
467,"{'tosca.nodes.MiCADO.Container.Config': {'description': 'base type for Config files', 'derived_from': 'tosca.nodes.Root', 'properties': {'path': {'type': 'string', 'description': 'path on disk (and/or default mount path)', 'required': False}}, 'capabilities': {'volume': {'type': 'tosca.capabilities.Attachment'}}, 'interfaces': {'Swarm': {'type': 'tosca.interfaces.MiCADO.Swarm'}, 'Kubernetes': {'type': 'tosca.interfaces.MiCADO.Kubernetes'}}}}",,16.0,0.0,0.0,16.0,0.0,34.0,4.63,0.0,0.0,2.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0
667,"{'radon.nodes.aws.AwsLambdaFunctionFromS3': {'derived_from': 'radon.nodes.abstract.Function', 'metadata': {'targetNamespace': 'radon.nodes.aws', 'abstract': 'false', 'final': 'false'}, 'attributes': {'role_arn': {'description': ""AWS function's role ARN"", 'type': 'string'}, 'arn': {'description': ""AWS function's Amazon Resource Name (ARN)"", 'type': 'string'}, 'region': {'type': 'string'}}, 'properties': {'handler': {'type': 'string', 'description': 'Handler for lambda function', 'default': 'index.handler'}, 's3_bucket_key': {'type': 'string', 'description': 'The S3 key aka. filename referencing the file to be deployed'}, 'memory': {'type': 'integer', 'description': 'Function memory in MB', 'default': 128}, 'memory_range': {'type': 'range', 'description': 'Range of function memory in MB to search', 'required': False}, 'alias': {'type': 'string', 'description': ""Lambda function's alias"", 'required': False, 'default': 'dev'}, 'runtime': {'type': 'string', 'description': 'Function runtime (List of possible values - https://docs.aws.amazon.com/lambda/latest/dg/lambda-runtimes.html)', 'default': 'nodejs'}, 'concurrency_range': {'type': 'range', 'description': 'Range of function concurrency to search', 'required': False}, 'statement_id': {'type': 'string', 'description': 'Lambda policy statement identifier'}, 's3_bucket_name': {'type': 'string', 'description': 'The S3 bucket name containing the function package to be deployed'}, 'timeout': {'type': 'integer', 'description': 'Function timeout in seconds', 'default': 300}, 'concurrency': {'type': 'integer', 'description': 'Function concurrency', 'required': False, 'default': 0}, 'env_vars': {'type': 'map', 'description': ""Function's environment variables"", 'required': False, 'entry_schema': {'type': 'string'}}}, 'requirements': [{'host': {'capability': 'tosca.capabilities.Container', 'node': 'radon.nodes.aws.AwsPlatform', 'relationship': 'tosca.relationships.HostedOn', 'occurrences': [1, 1]}}, {'monitor': {'capability': 'radon.capabilities.monitoring.Monitor', 'node': 'radon.nodes.monitoring.PushGateway', 'relationship': 'radon.relationships.monitoring.AWSIsMonitoredBy', 'occurrences': [0, 'UNBOUNDED']}}], 'interfaces': {'Standard': {'type': 'tosca.interfaces.node.lifecycle.Standard', 'inputs': {'s3_bucket_key': {'type': 'string', 'required': True, 'default': {'get_property': ['SELF', 's3_bucket_key']}}, 'aws_region': {'type': 'string', 'required': True, 'default': {'get_property': ['SELF', 'host', 'region']}}, 'role_arn': {'type': 'string', 'required': True, 'default': {'get_attribute': ['SELF', 'host', 'role_arn']}}, 'lambda_runtime': {'type': 'string', 'required': True, 'default': {'get_property': ['SELF', 'runtime']}}, 'function_name': {'type': 'string', 'required': True, 'default': {'get_property': ['SELF', 'name']}}, 'lambda_timeout': {'type': 'integer', 'required': True, 'default': {'get_property': ['SELF', 'timeout']}}, 'lambda_memory': {'type': 'integer', 'required': True, 'default': {'get_property': ['SELF', 'memory']}}, 'func_alias': {'type': 'string', 'required': True, 'default': {'get_property': ['SELF', 'alias']}}, 'permission_id': {'type': 'string', 'required': True, 'default': {'get_property': ['SELF', 'statement_id']}}, 'lambda_handler': {'type': 'string', 'required': True, 'default': {'get_property': ['SELF', 'handler']}}, 's3_bucket_name': {'type': 'string', 'required': True, 'default': {'get_property': ['SELF', 's3_bucket_name']}}, 'lambda_concurrency': {'type': 'integer', 'required': True, 'default': {'get_property': ['SELF', 'concurrency']}}, 'env_vars': {'type': 'string', 'required': False, 'default': {'get_property': ['SELF', 'env_vars']}}}, 'operations': {'create': {'implementation': {'primary': 'create', 'timeout': 0}}, 'delete': {'implementation': {'primary': 'delete', 'timeout': 0}}}}}, 'artifacts': {'create': {'type': 'radon.artifacts.Ansible', 'file': 'create.yml'}, 'delete': {'type': 'radon.artifacts.Ansible', 'file': 'delete.yml'}}}}",,193.0,0.0,0.0,161.0,0.0,343.0,6.12,0.0,13.0,1.0,0.0,0.0,0.0,12.0,0.0,0.0,0.0
35,"{'tosca.nodes.WebApplication.WordPress': {'derived_from': 'tosca.nodes.WebApplication', 'requirements': [{'database_endpoint': {'capability': 'tosca.capabilities.Endpoint.Database', 'node': 'tosca.nodes.Database', 'relationship': 'tosca.relationships.ConnectsTo'}}], 'interfaces': {'Standard': {'inputs': {'wp_db_name': {'type': 'string'}, 'wp_db_user': {'type': 'string'}, 'wp_db_password': {'type': 'string'}}}}}}",,16.0,0.0,0.0,16.0,0.0,23.0,4.11,0.0,3.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
1781,{'cloudshell.nodes.Metaswitchb': {'derived_from': 'cloudshell.nodes.resource'}},,2.0,0.0,0.0,2.0,0.0,3.0,1.58,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
98,"{'org.alien4cloud.nodes.HelloWindows': {'derived_from': 'tosca.nodes.SoftwareComponent', 'properties': {'world': {'type': 'string'}}, 'requirements': [{'host': {'capability': 'tosca.capabilities.Container', 'node': 'tosca.nodes.Compute', 'relationship': 'tosca.relationships.HostedOn', 'occurrences': [1, 1], 'node_filter': {'capabilities': [{'tosca.capabilities.OperatingSystem': {'properties': [{'type': {'equal': 'windows'}}]}}]}}}], 'artifacts': [{'powershell_script': {'file': 'scripts/start.ps1', 'type': 'tosca.artifacts.File'}}], 'interfaces': {'Standard': {'create': {'inputs': {'WORLD_NAME': {'get_property': ['SELF', 'world']}}, 'implementation': 'scripts/install.bat'}, 'start': {'inputs': {'HELLO_MESSAGE': {'get_operation_output': ['SELF', 'Standard', 'create', 'HELLO_MESSAGE']}}, 'implementation': 'scripts/start.bat'}}}}}",,41.0,0.0,0.0,33.0,0.0,51.0,5.23,0.0,0.0,1.0,0.0,0.0,0.0,2.0,0.0,0.0,0.0
1223,"{'example.TransactionSubsystem': {'derived_from': 'tosca.nodes.Root', 'properties': {'mq_service_ip': {'type': 'string'}, 'receiver_port': {'type': 'integer'}}, 'attributes': {'receiver_ip': {'type': 'string'}, 'receiver_port': {'type': 'integer'}}, 'capabilities': {'message_receiver': 'tosca.capabilities.Endpoint'}, 'requirements': [{'database_endpoint': 'tosca.capabilities.Endpoint.Database'}]}}",,16.0,0.0,0.0,16.0,0.0,23.0,3.91,0.0,0.0,0.0,0.0,0.0,0.0,2.0,0.0,0.0,0.0
2114,"{'sodalite.nodes.hpc.job.torque.configuration': {'description': 'torque job configuration\n', 'derived_from': 'sodalite.nodes.hpc.job.torque.configuration.base', 'properties': {'name': {'type': 'string', 'description': 'Name of the job', 'required': True}, 'script': {'type': 'string', 'description': 'Job script that will be wrapped with j2 template to provide a PBS job script,  Ansible can process it with the template module\n', 'required': True}, 'queue': {'type': 'string', 'description': 'Select queue for the job. Infrastructure specific - default and constraints values MUST be provided by Resource Expert\n', 'required': False, 'default': '', 'constraints': [{'valid_values': ['batch', 'ssd', 'gpu', 'cpu']}]}, 'scratch': {'type': 'string', 'description': 'Select scratch (temporary, fast storage) path for the job, if available. Infrastructure specific - default value MUST be provided by Resource Expert\n', 'required': False, 'default': '/workspace'}, 'workspace': {'type': 'string', 'description': 'Location of the sources and the job script', 'default': '~/'}, 'email': {'type': 'string', 'description': 'Job status will be notified to this email\n', 'default': ''}, 'nb_nodes': {'type': 'integer', 'description': 'Number of requested nodes if node name is not specified\n', 'default': 1, 'required': False}, 'ppn': {'type': 'integer', 'description': 'Number of processes per node\n', 'default': 1}, 'gpus': {'type': 'integer', 'description': 'Number of requested GPUs\n', 'default': 0}, 'walltime': {'type': 'string', 'description': 'Expected time of execution FORMAT: HH:MM:SS\n', 'required': True}, 'enable_audit': {'type': 'boolean', 'default': False}, 'env': {'type': 'map', 'required': False, 'default': None}}, 'attributes': {'job_id': {'type': 'string'}, 'audit': {'type': 'string'}}, 'interfaces': {'Standard': {'type': 'tosca.interfaces.node.lifecycle.Standard', 'operations': {'create': {'inputs': {'wm_public_address': {'default': {'get_attribute': ['SELF', 'host', 'public_address']}}, 'wm_username': {'default': {'get_attribute': ['SELF', 'host', 'username']}}, 'wm_keypath': {'default': {'get_attribute': ['SELF', 'host', 'ssh-key']}}, 'job_name': {'default': {'get_property': ['SELF', 'name']}}, 'job_script': {'default': {'get_property': ['SELF', 'script']}}, 'job_queue': {'default': {'get_property': ['SELF', 'queue']}}, 'job_scratch': {'default': {'get_property': ['SELF', 'scratch']}}, 'job_workspace': {'default': {'get_property': ['SELF', 'workspace']}}, 'job_email': {'default': {'get_property': ['SELF', 'email']}}, 'job_nb_nodes': {'default': {'get_property': ['SELF', 'nb_nodes']}}, 'job_ppn': {'default': {'get_property': ['SELF', 'ppn']}}, 'job_gpus': {'default': {'get_property': ['SELF', 'gpus']}}, 'job_walltime': {'default': {'get_property': ['SELF', 'walltime']}}, 'job_enable_audit': {'default': {'get_property': ['SELF', 'enable_audit']}}}, 'implementation': {'primary': 'torque-job/playbooks/create.yml', 'dependencies': ['torque-job/templates/audit.sh.j2', 'torque-job/templates/job.pbs.j2', 'torque-job/artifacts/jobs']}}}}}}}",,153.0,0.0,0.0,112.0,0.0,294.0,6.45,0.0,14.0,1.0,0.0,0.0,0.0,12.0,0.0,0.0,0.0
1001,"{'tosca.nodes.Compute': {'derived_from': 'tosca.nodes.Root', 'description': 'Represents a real or virtual machine or ‘server’. Informations specified on the Compute node will be used to find the machine that fits the given requirements in the cloud available machines. If no sizing informations are specified the cloud’s provider default machine will be used. It is strongly recommended to specify the required cpus and memory at least.\n', 'tags': {'icon': '/images/compute.png'}, 'properties': {'disk_size': {'type': 'scalar-unit.size', 'required': False, 'constraints': [{'greater_than': '0 B'}]}, 'num_cpus': {'type': 'integer', 'required': False, 'constraints': [{'greater_than': 0}]}, 'mem_size': {'type': 'scalar-unit.size', 'required': False, 'default': '2048 MB', 'constraints': [{'greater_than': '0 B'}]}, 'os_arch': {'default': 'x86_64', 'type': 'string'}, 'os_type': {'type': 'string'}, 'os_distribution': {'type': 'string', 'required': False}, 'os_version': {'type': 'string', 'required': False}, 'ip_address': {'type': 'string', 'required': False}}, 'attributes': {'ip_address': {'type': 'string', 'description': 'The primary IP address assigned by the cloud provider that applications may use to access the Compute node. Note: This is used by the platform provider to convey the primary address used to access the compute node.  Future working drafts will address implementations that support floating or multiple IP addresses.\n'}}, 'requirements': [{'network': {'capability': 'tosca.capabilities.Connectivity', 'occurrences': [0, 'unbounded']}}], 'capabilities': {'compute': {'type': 'tosca.capabilities.Container', 'occurrences': [0, 'unbounded']}, 'scalable': 'tosca.capabilities.Scalable'}}}",,60.0,0.0,0.0,49.0,0.0,189.0,6.35,0.0,0.0,0.0,0.0,0.0,0.0,8.0,0.0,0.0,0.0
2423,"{'org.alien4cloud.mock.ansible.relationships.AnsibleComponentConnectToComponent': {'derived_from': 'org.alien4cloud.mock.pub.relationships.AbstractComponentConnectToComponent', 'valid_target_types': ['org.alien4cloud.mock.ansible.capabilities.AnsibleComponentEndpoint'], 'interfaces': {'configure': {'pre_configure_source': {'inputs': {'ANSIBLE_VERBOSE': True, 'PLAYBOOK_ENTRY': 'operation.yml', 'operation': 'pre_configure_source AnsibleComponentConnectToComponent', 'duration': 2, 'variation': {'get_property': ['SOURCE', 'variation']}, 'weight': 30, 'log_length': {'get_property': ['SOURCE', 'log_length']}}, 'implementation': 'playbook/playbook.ansible'}, 'pre_configure_target': {'inputs': {'ANSIBLE_VERBOSE': True, 'PLAYBOOK_ENTRY': 'operation.yml', 'operation': 'pre_configure_target AnsibleComponentConnectToComponent', 'duration': 2, 'variation': {'get_property': ['SOURCE', 'variation']}, 'weight': 30, 'log_length': {'get_property': ['SOURCE', 'log_length']}}, 'implementation': 'playbook/playbook.ansible'}, 'post_configure_source': {'inputs': {'ANSIBLE_VERBOSE': True, 'PLAYBOOK_ENTRY': 'operation.yml', 'operation': 'post_configure_source AnsibleComponentConnectToComponent', 'duration': 2, 'variation': {'get_property': ['SOURCE', 'variation']}, 'weight': 30, 'log_length': {'get_property': ['SOURCE', 'log_length']}}, 'implementation': 'playbook/playbook.ansible'}, 'post_configure_target': {'inputs': {'ANSIBLE_VERBOSE': True, 'PLAYBOOK_ENTRY': 'operation.yml', 'operation': 'post_configure_target AnsibleComponentConnectToComponent', 'duration': 2, 'variation': {'get_property': ['SOURCE', 'variation']}, 'weight': 30, 'log_length': {'get_property': ['SOURCE', 'log_length']}}, 'implementation': 'playbook/playbook.ansible'}, 'add_target': {'inputs': {'ANSIBLE_VERBOSE': True, 'PLAYBOOK_ENTRY': 'operation.yml', 'operation': 'add_target AnsibleComponentConnectToComponent', 'duration': 2, 'variation': {'get_property': ['SOURCE', 'variation']}, 'weight': 30, 'log_length': {'get_property': ['SOURCE', 'log_length']}}, 'implementation': 'playbook/playbook.ansible'}, 'add_source': {'inputs': {'ANSIBLE_VERBOSE': True, 'PLAYBOOK_ENTRY': 'operation.yml', 'operation': 'add_source AnsibleComponentConnectToComponent', 'duration': 2, 'variation': {'get_property': ['SOURCE', 'variation']}, 'weight': 30, 'log_length': {'get_property': ['SOURCE', 'log_length']}}, 'implementation': 'playbook/playbook.ansible'}}}}}",,102.0,0.0,0.0,77.0,0.0,145.0,4.52,0.0,0.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
41,"{'tosca.nodes.ComputeTest': {'derived_from': 'tosca.nodes.Compute', 'capabilities': {'endpoint': {'type': 'tosca.capabilities.Endpoint'}}}}",,5.0,0.0,0.0,5.0,0.0,7.0,2.81,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
2386,"{'org.alien4cloud.mock.ansible.relationships.AnsibleComponentHostedOnHost': {'derived_from': 'org.alien4cloud.mock.pub.relationships.AbstractComponentHostedOnHost', 'valid_target_types': ['org.alien4cloud.mock.ansible.nodes.AnsibleMockHost'], 'interfaces': {'configure': {'pre_configure_source': {'inputs': {'ANSIBLE_VERBOSE': False, 'PLAYBOOK_ENTRY': 'operation.yml', 'operation': 'pre_configure_source AnsibleComponentHostedOnHost', 'duration': 2, 'variation': {'get_property': ['SOURCE', 'variation']}, 'weight': 30, 'log_length': {'get_property': ['SOURCE', 'log_length']}}, 'implementation': 'playbook/playbook.ansible'}, 'pre_configure_target': {'inputs': {'ANSIBLE_VERBOSE': False, 'PLAYBOOK_ENTRY': 'operation.yml', 'operation': 'pre_configure_target AnsibleComponentHostedOnHost', 'duration': 2, 'variation': {'get_property': ['SOURCE', 'variation']}, 'weight': 30, 'log_length': {'get_property': ['SOURCE', 'log_length']}}, 'implementation': 'playbook/playbook.ansible'}, 'post_configure_source': {'inputs': {'ANSIBLE_VERBOSE': False, 'PLAYBOOK_ENTRY': 'operation.yml', 'operation': 'post_configure_source AnsibleComponentHostedOnHost', 'duration': 2, 'variation': {'get_property': ['SOURCE', 'variation']}, 'weight': 30, 'log_length': {'get_property': ['SOURCE', 'log_length']}}, 'implementation': 'playbook/playbook.ansible'}, 'post_configure_target': {'inputs': {'ANSIBLE_VERBOSE': False, 'PLAYBOOK_ENTRY': 'operation.yml', 'operation': 'post_configure_target AnsibleComponentHostedOnHost', 'duration': 2, 'variation': {'get_property': ['SOURCE', 'variation']}, 'weight': 30, 'log_length': {'get_property': ['SOURCE', 'log_length']}}, 'implementation': 'playbook/playbook.ansible'}, 'add_target': {'inputs': {'ANSIBLE_VERBOSE': False, 'PLAYBOOK_ENTRY': 'operation.yml', 'operation': 'add_target AnsibleComponentHostedOnHost', 'duration': 2, 'variation': {'get_property': ['SOURCE', 'variation']}, 'weight': 30, 'log_length': {'get_property': ['SOURCE', 'log_length']}}, 'implementation': 'playbook/playbook.ansible'}, 'add_source': {'inputs': {'ANSIBLE_VERBOSE': False, 'PLAYBOOK_ENTRY': 'operation.yml', 'operation': 'add_source AnsibleComponentHostedOnHost', 'duration': 2, 'variation': {'get_property': ['SOURCE', 'variation']}, 'weight': 30, 'log_length': {'get_property': ['SOURCE', 'log_length']}}, 'implementation': 'playbook/playbook.ansible'}}}}}",,102.0,0.0,0.0,77.0,0.0,145.0,4.52,0.0,0.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
1222,"{'example.QueuingSubsystem': {'derived_from': 'tosca.nodes.Root', 'capabilities': {'message_queue_endpoint': {'type': 'tosca.capabilities.Endpoint'}}, 'requirements': [{'receiver': {'node': 'example.TransactionSubsystem', 'capabilities': 'tosca.capabilities.Endpoint'}}]}}",,9.0,0.0,0.0,9.0,0.0,13.0,3.39,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
336,"{'tosca.nodes.indigo.SparkMesos': {'derived_from': 'tosca.nodes.SoftwareComponent', 'metadata': {'icon': '/images/spark-mesos.png'}, 'properties': {'marathon_password': {'type': 'string', 'required': True}, 'zookeeper_peers': {'type': 'string', 'required': True}, 'spark_mesos_deploy_app': {'type': 'string', 'constraints': [{'valid_values': ['apache-zeppelin', 'spark-dispatcher']}], 'required': False}, 'spark_hdfs_uri': {'type': 'string', 'required': False, 'default': ''}, 'spark_swift_auth_url': {'type': 'string', 'required': False, 'default': ''}, 'spark_swift_http_port': {'type': 'string', 'required': False, 'default': '8080'}, 'spark_swift_region': {'type': 'string', 'required': False, 'default': ''}, 'spark_swift_tenant': {'type': 'string', 'required': False, 'default': ''}, 'spark_swift_username': {'type': 'string', 'required': False, 'default': ''}, 'spark_swift_password': {'type': 'string', 'required': False, 'default': ''}, 'spark_swift_provider': {'type': 'string', 'required': False, 'default': 'Test'}, 'spark_cores_max': {'type': 'integer', 'required': False, 'default': '-1'}, 'spark_executor_cores': {'type': 'integer', 'required': False, 'default': '-1'}, 'spark_executor_mem': {'type': 'scalar-unit.size', 'required': False, 'default': '0 GB'}, 'spark_driver_mem': {'type': 'scalar-unit.size', 'required': False, 'default': '0 GB'}, 'spark_driver_cores': {'type': 'integer', 'required': False, 'default': '-1'}}, 'artifacts': {'spark_mesos_role': {'file': 'indigo-dc.spark-mesos,master', 'type': 'tosca.artifacts.AnsibleGalaxy.role'}}, 'interfaces': {'Standard': {'create': {'implementation': 'https://raw.githubusercontent.com/indigo-dc/tosca-types/master/artifacts/mesos/spark_mesos_setup.yml', 'inputs': {'marathon_password': {'get_property': ['SELF', 'marathon_password']}, 'zookeeper_peers': {'get_property': ['SELF', 'zookeeper_peers']}, 'spark_mesos_deploy_app': {'get_property': ['SELF', 'spark_mesos_deploy_app']}, 'spark_hdfs_uri': {'get_property': ['SELF', 'spark_hdfs_uri']}, 'spark_swift_auth_url': {'get_property': ['SELF', 'spark_swift_auth_url']}, 'spark_mesos_swift_http_port': {'get_property': ['SELF', 'spark_swift_http_port']}, 'spark_mesos_swift_region': {'get_property': ['SELF', 'spark_swift_region']}, 'spark_mesos_swift_tenant': {'get_property': ['SELF', 'spark_swift_tenant']}, 'spark_mesos_swift_username': {'get_property': ['SELF', 'spark_swift_username']}, 'spark_mesos_swift_password': {'get_property': ['SELF', 'spark_swift_password']}, 'spark_mesos_swift_provider': {'get_property': ['SELF', 'spark_swift_provider']}, 'spark_mesos_cores_max': {'get_property': ['SELF', 'spark_cores_max']}, 'spark_mesos_executor_cores': {'get_property': ['SELF', 'spark_executor_cores']}, 'spark_mesos_executor_mem': {'get_property': ['SELF', 'spark_executor_mem']}, 'spark_mesos_driver_mem': {'get_property': ['SELF', 'spark_driver_mem']}, 'spark_mesos_driver_cores': {'get_property': ['SELF', 'spark_driver_cores']}}}}}, 'requirements': [{'host': {'capability': 'tosca.capabilities.indigo.MesosMaster', 'relationship': 'tosca.relationships.HostedOn', 'node': 'tosca.nodes.SoftwareComponent', 'occurrences': [1, 1]}}]}}",,151.0,0.0,0.0,115.0,0.0,206.0,5.34,0.0,0.0,1.0,0.0,0.0,0.0,16.0,0.0,0.0,0.0
2787,"{'tosca.relationships.Root': {'attributes': {'tosca_id': {'type': 'string'}, 'tosca_name': {'type': 'string'}}, 'interfaces': {'Configure': {'type': 'tosca.interfaces.relationship.Configure'}}}}",,9.0,0.0,0.0,9.0,0.0,12.0,3.02,0.0,0.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
2703,"{'org.ystia.consul.pub.relationships.ConnectsToConsulAgent': {'derived_from': 'tosca.relationships.ConnectsTo', 'description': 'Relationship use to describe that the SoftwareComponent is connected to a Consul Agent', 'valid_target_types': ['org.ystia.consul.pub.capabilities.ConsulAgent']}}",,6.0,0.0,0.0,4.0,0.0,19.0,4.14,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
1461,{'yorc.nodes.kubernetes.api.types.ServiceResource': {'derived_from': 'org.alien4cloud.kubernetes.api.types.ServiceResource'}},,2.0,0.0,0.0,2.0,0.0,3.0,1.58,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
2492,"{'org.alien4cloud.diamond.agent_linux.relationships.DiamondLinuxAgentConnectsToGrafana': {'derived_from': 'tosca.relationships.ConnectsTo', 'valid_target_types': ['org.alien4cloud.grafana.pub.capabilities.GrafanaHttpEndpoint'], 'interfaces': {'Configure': {'pre_configure_source': {'inputs': {'ANSIBLE_VERBOSE': False, 'PLAYBOOK_ENTRY': 'connects_to_grafana.yml', 'grafana_url': {'concat': [{'get_attribute': ['TARGET', 'http_endpoint', 'protocol']}, '://', {'get_attribute': ['TARGET', 'http_endpoint', 'ip_address']}, ':', {'get_attribute': ['TARGET', 'http_endpoint', 'port']}]}, 'grafana_user': {'get_attribute': ['TARGET', 'http_endpoint', 'user']}, 'grafana_password': {'get_attribute': ['TARGET', 'http_endpoint', 'password']}}, 'implementation': 'playbook/playbook.ansible'}}}}}",,37.0,0.0,0.0,19.0,0.0,41.0,4.51,0.0,0.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
1025,"{'fastconnect.nodes.Tomcat': {'derived_from': 'tosca.nodes.ApplicationServer', 'description': 'Installation of Tomcat using Cloudify scripts\n', 'tags': {'icon': '/images/tomcat.gif'}, 'properties': {'version': {'type': 'version', 'default': '7.0.23', 'constraints': [{'equal': '7.0.23'}]}}, 'capabilities': {'httpEndpoint': {'type': 'alien4cloud.capabilities.HttpEndpoint', 'lower_bound': 0, 'upper_bound': 'unbounded'}, 'war_host': {'type': 'alien4cloud.capabilities.WarHosting', 'lower_bound': 0, 'upper_bound': 1}}, 'requirements': {'httpEndpoint': {'type': 'alien4cloud.capabilities.HttpEndpoint', 'lower_bound': 0, 'upper_bound': 'unbounded'}, 'jdbc_resource': {'type': 'alien4cloud.capabilities.JdbcEndpoint', 'lower_bound': 0, 'upper_bound': 1}}, 'interfaces': {'Standard': {'operations': {'create': {'implementation_artifact': {'artifact_type': 'tosca.artifacts.GroovyScript', 'artifact_ref': 'scripts/tomcat_installAlien.groovy'}}, 'start': {'implementation_artifact': {'artifact_type': 'tosca.artifacts.GroovyScript', 'artifact_ref': 'scripts/tomcat_start.groovy'}}, 'stop': {'implementation_artifact': {'artifact_type': 'tosca.artifacts.GroovyScript', 'artifact_ref': 'scripts/tomcat_stop.groovy'}}}}, 'fastconnect.cloudify.extensions': {'operations': {'start_detection': {'implementation_artifact': {'artifact_type': 'tosca.artifacts.GroovyScript', 'artifact_ref': 'scripts/tomcat_startDetection.groovy'}}}}, 'custom': {'operations': {'updateWar': {'implementation_artifact': {'artifact_type': 'tosca.artifacts.GroovyScript', 'artifact_ref': 'scripts/updateWarUrl.groovy'}}, 'updateWarFile': {'implementation_artifact': {'artifact_type': 'tosca.artifacts.GroovyScript', 'artifact_ref': 'scripts/updateWarFile.groovy'}}}}}, 'artifacts': [{'scripts': 'scripts', 'type': 'fastconnect.artifacts.ResourceDirectory'}]}}",,63.0,0.0,0.0,63.0,0.0,100.0,5.44,0.0,0.0,3.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0
604,"{'radon.nodes.datapipeline.process.LocalAction': {'derived_from': 'radon.nodes.datapipeline.MidwayPB', 'metadata': {'targetNamespace': 'radon.nodes.datapipeline.process', 'abstract': 'false', 'final': 'false'}}}",,6.0,0.0,0.0,6.0,0.0,10.0,3.12,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
2459,"{'Trunk': {'properties': {'endpoint': {'type': 'string'}}, 'attributes': {'ip': {'type': 'string'}}}}",,7.0,0.0,0.0,7.0,0.0,9.0,2.73,0.0,0.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0
619,"{'radon.nodes.datapipeline.MidwayPB': {'derived_from': 'radon.nodes.datapipeline.PipelineBlock', 'metadata': {'targetNamespace': 'radon.nodes.datapipeline', 'abstract': 'true', 'final': 'false'}, 'requirements': [{'ConnectToPipeline': {'capability': 'radon.capabilities.datapipeline.ConnectToPipeline', 'node': 'radon.nodes.datapipeline.PipelineBlock', 'relationship': 'radon.relationships.datapipeline.ConnectNifiLocal', 'occurrences': [1, 1]}}], 'capabilities': {'ConnectToPipeline': {'occurrences': [1, 1], 'valid_source_types': ['radon.nodes.datapipeline.SourcePB', 'radon.nodes.datapipeline.MidwayPB'], 'type': 'radon.capabilities.datapipeline.ConnectToPipeline'}}}}",,23.0,0.0,0.0,17.0,0.0,31.0,4.37,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
2168,"{'policy.nodes.Root': {'derived_from': 'tosca.nodes.Root', 'properties': {'policyName': {'type': 'string', 'required': True}, 'policyVersion': {'type': 'string', 'required': True}, 'policyScope': {'type': 'string', 'required': True}, 'policyDescription': {'type': 'string', 'required': False}}}}",,15.0,0.0,0.0,15.0,0.0,24.0,3.39,0.0,0.0,0.0,0.0,0.0,0.0,4.0,0.0,0.0,0.0
1299,"{'org.ystia.kubernetes.pub.nodes.KubernetesMaster': {'abstract': True, 'derived_from': 'tosca.nodes.Root', 'tags': {'icon': '/images/kubernetes-master-icon.png'}, 'description': 'A KubernetesMaster contains Kubernetes services like the API server, the podmaster and so on.\n', 'capabilities': {'api_server': 'org.ystia.kubernetes.pub.capabilities.KubernetesAPIServer', 'app_host': 'org.ystia.kubernetes.pub.capabilities.AppHosting'}}}",,10.0,0.0,0.0,9.0,0.0,28.0,4.74,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
365,{'LightBulb': {'requirements': [{'socket': 'Socket'}]}},,3.0,0.0,0.0,3.0,0.0,4.0,2.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
1880,"{'radon.nodes.minio': {'derived_from': 'tosca.nodes.SoftwareComponent', 'properties': {'minio_ip': {'type': 'string', 'description': 'IP address of the MiniIO object storage'}, 'credentials': {'type': 'string', 'description': 'MiniIO credentials'}}, 'attributes': {'minio_ip': {'type': 'string'}, 'credentials': {'type': 'string'}}, 'interfaces': {'Standard': {'type': 'tosca.interfaces.node.lifecycle.Standard', 'inputs': {'minio_ip': {'default': {'get_property': ['SELF', 'minio_ip']}, 'type': 'string'}, 'credentials': {'default': {'get_property': ['SELF', 'credentials']}, 'type': 'string'}}, 'operations': {'create': {'implementation': {'primary': 'playbooks/minio/create.yml', 'dependencies': ['playbooks/minio/templates/config.json']}}}}}}}",,36.0,0.0,0.0,31.0,0.0,54.0,4.56,0.0,2.0,1.0,0.0,0.0,0.0,2.0,0.0,0.0,0.0
891,"{'yorc.nodes.google.Address': {'derived_from': 'tosca.nodes.Root', 'properties': {'addresses': {'type': 'string', 'description': 'Comma-separated list of external addresses. Only IPv4 is supported. The IP address must be inside the specified subnetwork, if any.\n', 'required': False}, 'address_type': {'type': 'string', 'description': 'Type of address to reserve, either INTERNAL or EXTERNAL. If unspecified, defaults to EXTERNAL.\n', 'required': False}, 'description': {'type': 'string', 'description': 'Optional description of this resource\n', 'required': False}, 'network_tier': {'type': 'string', 'description': 'Networking tier used for configuring this address. This field can take the following values: PREMIUM or STANDARD. If this field is not specified, it is assumed to be PREMIUM.\n', 'required': False}, 'subnetwork': {'type': 'string', 'description': ""URL of the subnetwork in which to reserve the address. If an IP address is specified, it must be within the subnetwork's IP range. This field can only be used with INTERNAL type with GCE_ENDPOINT/DNS_RESOLVER purposes.\n"", 'required': False}, 'labels': {'type': 'string', 'description': 'Comma-separated list of label KEY=VALUE pairs to assign to the Compute Address\n', 'required': False}, 'region': {'type': 'string', 'description': 'Region in which the created address should reside. If it is not provided, the infrastructure location region is used.\n', 'required': False}, 'project': {'type': 'string', 'description': 'ID of the project in which the resource belongs. If it is not provided, the infrastructure location project is used.\n', 'required': False}}, 'capabilities': {'assignment': {'type': 'yorc.capabilities.Assignable'}}, 'interfaces': {'Standard': {'create': {'implementation': {'file': 'embedded', 'type': 'yorc.artifacts.google.Deployment'}}, 'delete': {'implementation': {'file': 'embedded', 'type': 'yorc.artifacts.google.Deployment'}}}}, 'attributes': {'ip_address': {'type': 'string', 'description': 'The compute IP address.'}}}}",,62.0,1.0,0.0,52.0,0.0,234.0,6.28,0.0,0.0,1.0,0.0,0.0,0.0,8.0,0.0,0.0,0.0
446,"{'tosca.nodes.MiCADO.Edge': {'description': 'Base edge node for MiCADO', 'derived_from': 'tosca.nodes.Root', 'properties': {'public_ip': {'type': 'string', 'required': False}}, 'capabilities': {'host': {'type': 'tosca.capabilities.Compute'}, 'os': {'type': 'tosca.capabilities.OperatingSystem'}}}}",,12.0,0.0,0.0,12.0,0.0,22.0,4.24,0.0,0.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0
383,"{'Application': {'derived_from': 'tosca:WebServer', 'properties': {'url': {'type': 'string'}}}}",,5.0,0.0,0.0,5.0,0.0,7.0,2.81,0.0,0.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0
2568,"{'org.alien4cloud.extended.container.relationships.HostedOnContainerRuntime': {'description': 'null', 'derived_from': 'tosca.relationships.HostedOn', 'valid_source_types': ['org.alien4cloud.extended.container.capabilities.ApplicationHost']}}",,5.0,0.0,0.0,4.0,0.0,7.0,2.81,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
621,"{'radon.nodes.abstract.ApiGateway': {'derived_from': 'tosca.nodes.Root', 'metadata': {'targetNamespace': 'radon.nodes.abstract', 'abstract': 'false', 'final': 'false'}, 'requirements': [{'host': {'capability': 'tosca.capabilities.Container', 'node': 'radon.nodes.abstract.CloudPlatform', 'relationship': 'tosca.relationships.HostedOn', 'occurrences': [1, 1]}}, {'invoker': {'capability': 'radon.capabilities.Invocable', 'node': 'radon.nodes.abstract.Function', 'relationship': 'radon.relationships.Triggers', 'occurrences': [0, 'UNBOUNDED']}}]}}",,21.0,0.0,0.0,17.0,0.0,31.0,4.57,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
52,"{'tosca.datatypes.nfv.SwImageData': {'derived_from': 'tosca.datatypes.Root', 'description': 'describes information  related to a software image artifact', 'properties': {'name': {'type': 'string', 'description': 'Name of this software image', 'required': True}}}}",,8.0,0.0,0.0,8.0,0.0,24.0,4.33,0.0,0.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0
1194,"{'vyatta_node_config': {'derived_from': 'cloudify.netconf.nodes.xml_rpc', 'properties': {'metadata': {'default': {'capabilities': ['urn:ietf:params:netconf:base:1.0', 'urn:ietf:params:netconf:capability:writeable-running:1.0', 'urn:ietf:params:netconf:capability:rollback-on-error:1.0', 'urn:ietf:params:netconf:capability:startup:1.0', 'urn:ietf:params:netconf:capability:url:1.0'], 'xmlns': {'vyatta-if-v1': 'urn:vyatta.com:mgmt:vyatta-interfaces:1', 'vyatta-interfaces-dataplane-v1': 'urn:vyatta.com:mgmt:vyatta-interfaces-dataplane:1', 'vyatta-interfaces-loopback-v1': 'urn:vyatta.com:mgmt:vyatta-interfaces-loopback:1', 'vyatta-protocols-static-v1': 'urn:vyatta.com:mgmt:vyatta-protocols-static:1', 'vyatta-protocols-v1': 'urn:vyatta.com:mgmt:vyatta-protocols:1', 'vyatta-service-https-v1': 'urn:vyatta.com:mgmt:vyatta-service-https:1', 'vyatta-service-nat-v1': 'urn:vyatta.com:mgmt:vyatta-service-nat:1', 'vyatta-service-netconf-v1': 'urn:vyatta.com:mgmt:vyatta-service-netconf:1', 'vyatta-service-ssh-v1': 'urn:vyatta.com:mgmt:vyatta-service-ssh:1', 'vyatta-services-v1': 'urn:vyatta.com:mgmt:vyatta-services:1', 'vyatta-system-acm-configd-v1': 'urn:vyatta.com:mgmt:vyatta-system-acm-configd:1', 'vyatta-system-acm-opd-v1': 'urn:vyatta.com:mgmt:vyatta-system-acm-opd:1', 'vyatta-system-acm-v1': 'urn:vyatta.com:mgmt:vyatta-system-acm:1', 'vyatta-system-login-v1': 'urn:vyatta.com:mgmt:vyatta-system-login:1', 'vyatta-system-mgmt-v1': 'urn:vyatta.com:mgmt:vyatta-system-mgmt:1', 'vyatta-system-misc-v1': 'urn:vyatta.com:mgmt:vyatta-system-misc:1', 'vyatta-system-network-v1': 'urn:vyatta.com:mgmt:vyatta-system-network:1', 'vyatta-system-package-v1': 'urn:vyatta.com:mgmt:vyatta-system-package:1', 'vyatta-system-syslog-v1': 'urn:vyatta.com:mgmt:vyatta-system-syslog:1', 'vyatta-system-v1': 'urn:vyatta.com:mgmt:vyatta-system:1'}}}}}}",,32.0,0.0,0.0,27.0,0.0,53.0,5.73,0.0,0.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0
2092,"{'sodalite.nodes.Tests.File.Exist': {'derived_from': 'sodalite.nodes.Tests.File', 'properties': {'exists': {'type': 'boolean', 'description': 'Toggles between checking for its existance and lack of existance', 'default': True}}, 'interfaces': {'Standard': {'type': 'tosca.interfaces.node.lifecycle.Standard', 'operations': {'create': {'inputs': {'file_location': {'type': 'string', 'default': {'get_property': ['SELF', 'file_location']}}, 'follow': {'type': 'string', 'default': {'get_property': ['SELF', 'follow']}}, 'exists': {'type': 'boolean', 'default': {'get_property': ['SELF', 'exists']}}}, 'implementation': {'primary': 'file/exist.yaml'}}}}}}}",,33.0,0.0,0.0,27.0,0.0,51.0,4.81,0.0,3.0,1.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0
240,"{'tosca.nodes.vendor.VDU': {'derived_from': 'tosca.nodes.Compute', 'capabilities': {'virtualbinding': {'type': 'tosca.capabilities.vendor.VendorBindable'}}}}",,5.0,0.0,0.0,5.0,0.0,7.0,2.81,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
2557,"{'yorc.tests.relationships.GetOPOutputsRel': {'derived_from': 'tosca.relationships.DependsOn', 'attributes': {'partition_name': {'get_operation_output': ['SELF', 'Configure', 'pre_configure_source', 'PARTITION_NAME']}}, 'interfaces': {'Configure': {'pre_configure_source': 'scripts/fdisk.sh', 'post_configure_source': {'inputs': {'PARTITION_NAME': {'get_attribute': ['SELF', 'partition_name']}}, 'implementation': 'scripts/mkfs.sh'}}}}}",,19.0,0.0,0.0,13.0,0.0,22.0,4.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,2.0
1398,"{'tosca.nodes.Container.Application': {'derived_from': 'tosca.nodes.Root', 'description': 'The TOSCA Container Application node represents an application that requires Container-level virtualization technology.\n', 'requirements': [{'host': {'capability': 'tosca.capabilities.Container', 'node': 'tosca.nodes.Container', 'relationship': 'tosca.relationships.HostedOn'}}]}}",,9.0,0.0,0.0,8.0,0.0,25.0,4.56,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
2506,"{'radon.relationships.datapipeline.ConnectNifiLocal': {'derived_from': 'tosca.relationships.ConnectsTo', 'metadata': {'targetNamespace': 'radon.relationships.datapipeline', 'abstract': 'false', 'final': 'false'}, 'interfaces': {'Configure': {'type': 'tosca.interfaces.relationship.Configure', 'operations': {'post_configure_source': {'inputs': {'source_pipeline_server_ip': {'type': 'string', 'required': True, 'default': {'get_attribute': ['SOURCE', 'host', 'host', 'public_address']}}, 'target_pipeline_server_ip': {'type': 'string', 'required': True, 'default': {'get_attribute': ['TARGET', 'host', 'host', 'public_address']}}, 'source_pipeline_id': {'type': 'string', 'required': True, 'default': {'get_attribute': ['SOURCE', 'id']}}, 'target_pipeline_id': {'type': 'string', 'required': True, 'default': {'get_attribute': ['TARGET', 'id']}}}, 'implementation': {'primary': 'connect.yml', 'timeout': 0}}}}}}}",,47.0,0.0,0.0,35.0,0.0,62.0,4.83,0.0,4.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
1978,"{'org.lexis.noscheduler.Job': {'derived_from': 'tosca.nodes.SoftwareComponent', 'abstract': True, 'properties': {'walltime_seconds': {'type': 'integer', 'description': 'Maximum duration in seconds of the job execution (0 means no timeout)', 'default': 0, 'required': False}, 'fail_after_walltime': {'type': 'boolean', 'description': 'Should this job end on failure if not finished after wall time (else ends on success)', 'default': True, 'required': False}, 'stdout_file_path': {'type': 'string', 'description': 'Path to the stdout file produced by the job', 'required': False}, 'stderr_file_path': {'type': 'string', 'description': 'Path to the stderr file produced by the job', 'required': False}}, 'attributes': {'stdout': {'get_operation_output': ['SELF', 'tosca.interfaces.node.lifecycle.Runnable', 'run', 'STDOUT']}, 'stderr': {'get_operation_output': ['SELF', 'tosca.interfaces.node.lifecycle.Runnable', 'run', 'STDERR']}, 'submit_date_epoch': {'get_operation_output': ['SELF', 'tosca.interfaces.node.lifecycle.Runnable', 'submit', 'SUBMIT_DATE_EPOCH']}}, 'interfaces': {'tosca.interfaces.node.lifecycle.Runnable': {'run': {'inputs': {'SUBMIT_DATE_EPOCH': {'get_attribute': ['SELF', 'submit_date_epoch']}, 'WALLTIME': {'get_property': ['SELF', 'walltime_seconds']}, 'FAIL_AFTER_WALLTIME': {'get_property': ['SELF', 'fail_after_walltime']}, 'STDOUT_FILE_PATH': {'get_attribute': ['SELF', 'stdout_file_path']}, 'STDERR_FILE_PATH': {'get_attribute': ['SELF', 'stderr_file_path']}}, 'implementation': 'playbooks/get_job_status.yaml'}, 'cancel': {'implementation': 'playbooks/cancel_job.yaml'}}}}}",,69.0,0.0,0.0,46.0,0.0,128.0,5.94,0.0,0.0,1.0,0.0,0.0,0.0,4.0,0.0,0.0,0.0
2338,"{'tosca.relationships.mec.Monitor': {'derived_from': 'tosca.relationships.ConnectsTo', 'valid_target_types': ['tosca.capabilities.mec.Metric']}}",,4.0,0.0,0.0,3.0,0.0,5.0,2.32,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
925,"{'daily_test.nodes.file': {'derived_from': 'tosca.nodes.SoftwareComponent', 'interfaces': {'Standard': {'inputs': {'file_content': {'default': {'get_input': 'file_content'}, 'type': 'string'}}, 'operations': {'create': 'playbooks/create.yaml', 'delete': 'playbooks/delete.yaml'}}}}}",,,,,,,,,,,,,,,,,,
1558,"{'com.toscaruntime.nodes.SourceConflict': {'derived_from': 'tosca.nodes.SoftwareComponent', 'requirements': [{'generate_error': 'com.toscaruntime.capabilities.GenerateConflict', 'type': 'com.toscaruntime.relationships.ConflictRelationship'}]}}",,5.0,0.0,0.0,5.0,0.0,8.0,3.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
1403,"{'radon.nodes.s3_bucket': {'derived_from': 'tosca.nodes.SoftwareComponent', 'properties': {'bucket_name': {'type': 'string', 'description': 'The name of the bucket'}, 'aws_region': {'type': 'string'}}, 'attributes': {'bucket_name': {'type': 'string'}}, 'interfaces': {'Standard': {'type': 'tosca.interfaces.node.lifecycle.Standard', 'inputs': {'bucket_name': {'default': {'get_property': ['SELF', 'bucket_name']}, 'type': 'string'}, 'aws_region': {'default': {'get_property': ['SELF', 'aws_region']}, 'type': 'string'}}, 'operations': {'create': 'playbooks/bucket/create.yml', 'delete': 'playbooks/bucket/undeploy.yml'}}}, 'capabilities': {'bucket': {'type': 'tosca.capabilities.Compute', 'valid_source_types': ['radon.nodes.triggers.bucket_notification']}}}}",,,,,,,,,,,,,,,,,,
1004,"{'fastconnect.nodes.apacheLBGroovy': {'derived_from': 'fastconnect.nodes.apacheLB', 'description': 'Installation of apacheLB using Cloudify scripts\n', 'properties': {'version': {'type': 'version', 'default': 2, 'constraints': [{'equal': 2}]}}, 'interfaces': {'lifecycle': {'create': 'scripts/apacheLB_installCalm.groovy', 'start': 'scripts/apacheLB_start.groovy', 'stop': 'scripts/apacheLB_stop.groovy', 'delete': 'scripts/apacheLB_uninstall.groovy'}, 'monitor': {'locator': 'scripts/monitor/locator.groovy', 'startDetection': 'scripts/monitor/startDetection.groovy'}, 'custom': {'addNode': {'inputs': {'instanceId': {'type': 'string', 'required': True}, 'node': {'type': 'string', 'required': True}}, 'implementation': 'scripts/apacheLB_addNode.groovy'}, 'removeNode': 'scripts/apacheLB_removeNode.groovy', 'deployPublic': {'inputs': {'publicUrl': {'type': 'string', 'required': True}}}, 'updateWar': {'inputs': {'warUrl': {'type': 'string', 'required': True}, 'countSlave': {'type': 'integer', 'required': False}, 'tresholdRate': {'type': 'float', 'required': True}}, 'implementation': 'scripts/updateWarUrl.groovy'}, 'updateWarFile': 'scripts/updateWarFile.groovy'}}, 'requirements': [{'httpEndpoint': {'capability': 'calm.capabilities.HttpEndpoint', 'occurrences': [0, 'unbounded']}}], 'artifacts': [{'scripts': {'file': 'scripts', 'type': 'fastconnect.artifacts.ResourceDirectory'}}]}}",,57.0,0.0,0.0,55.0,0.0,92.0,5.74,0.0,0.0,3.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0
1454,"{'org.ystia.yorc.samples.job.slurm.singularity.nodes.LolcowComponent': {'derived_from': 'yorc.nodes.slurm.SingularityJob', 'tags': {'icon': '/images/singularity.png'}, 'interfaces': {'tosca.interfaces.node.lifecycle.Runnable': {'submit': {'implementation': {'file': 'docker://godlovedc/lolcow:latest', 'repository': 'docker', 'type': 'yorc.artifacts.Deployment.SlurmJobImage'}}}}}}",,11.0,0.0,0.0,11.0,0.0,16.0,4.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
2798,"{'my.relationships.NginxSiteHosting': {'derived_from': 'tosca.relationships.HostedOn', 'interfaces': {'Standard': {'type': 'tosca.interfaces.node.lifecycle.Standard', 'operations': {'post_configure_source': {'implementation': {'primary': 'playbooks/nginx/reload.yml'}}}}}}}",,9.0,0.0,0.0,9.0,0.0,12.0,3.58,0.0,0.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
2430,"{'mycompany.mytypes.myCustomClientServerType': {'derived_from': 'tosca.relationships.HostedOn', 'properties': None}}",,3.0,0.0,0.0,3.0,0.0,5.0,2.32,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
1111,{'alien.test.nodes.Tomcat': {'derived_from': 'alien.test.nodes.ApplicationServer'}},,2.0,0.0,0.0,2.0,0.0,3.0,1.58,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
2084,"{'sodalite.nodes.Tests.Text': {'derived_from': 'sodalite.nodes.Tests', 'properties': {'comparable_string': {'type': 'string', 'description': ""String to compare to the file's contents. This parameter usage depends on the regex property."", 'required': True}, 'regex': {'type': 'boolean', 'description': 'If true, comparable string is used as regex pattern to search the string against. Otherwise a direct comparison is made.', 'default': False, 'required': True}}}}",,14.0,0.0,0.0,12.0,0.0,53.0,5.18,0.0,0.0,0.0,0.0,0.0,0.0,2.0,0.0,0.0,0.0
1870,"{'aria.openstack.nodes.FloatingIP': {'derived_from': 'tosca.nodes.Root', 'attributes': {'floating_ip_address': {'type': 'string'}}, 'properties': {'floatingip': {'type': 'aria.openstack.datatypes.FloatingIP', 'required': False, 'default': {}}, 'use_external_resource': {'type': 'boolean', 'default': False, 'description': 'a boolean for setting whether to create the resource or use an existing one. See the using existing resources section.'}, 'create_if_missing': {'default': False, 'type': 'boolean', 'description': 'If use_external_resource is ``true`` and the resource is missing, create it instead of failing.'}, 'resource_id': {'description': ""name to give to the new resource or the name or ID of an existing resource when the ``use_external_resource`` property is set to ``true`` (see the using existing resources section). Defaults to '' (empty string)."", 'default': '', 'type': 'string'}, 'openstack_config': {'type': 'aria.openstack.datatypes.Config', 'required': False}}, 'interfaces': {'Standard': {'create': {'implementation': 'cloudify-openstack-plugin > neutron_plugin.floatingip.create', 'inputs': {'args': {'default': {}, 'type': 'aria.openstack.datatypes.FloatingIP', 'required': False}}}, 'delete': 'cloudify-openstack-plugin > neutron_plugin.floatingip.delete'}, 'Validation': {'type': 'aria.openstack.interfaces.validation', 'creation': 'cloudify-openstack-plugin > neutron_plugin.floatingip.creation_validation'}}, 'capabilities': {'address': {'type': 'tosca.capabilities.Node'}}}}",,45.0,0.0,0.0,41.0,0.0,135.0,5.93,0.0,0.0,2.0,0.0,0.0,0.0,5.0,0.0,0.0,0.0
422,"{'tosca.nodes.Container.Application': {'derived_from': 'tosca.nodes.Root', 'description': 'The TOSCA Container Application node represents an application that requires Container-level virtualization technology.\n', 'requirements': [{'host': {'capability': 'tosca.capabilities.Compute', 'node': 'tosca.nodes.Container.Runtime', 'relationship': 'tosca.relationships.HostedOn'}}, {'storage': {'capability': 'tosca.capabilities.Storage'}}, {'network': {'capability': 'tosca.capabilities.EndPoint'}}]}}",,13.0,0.0,0.0,12.0,0.0,31.0,4.74,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
2064,"{'my.nodes.NodeExporter': {'derived_from': 'tosca.nodes.SoftwareComponent', 'requirements': [{'host': {'capability': 'tosca.capabilities.Compute', 'relationship': 'tosca.relationships.HostedOn'}}], 'interfaces': {'Standard': {'type': 'tosca.interfaces.node.lifecycle.Standard', 'operations': {'create': 'playbooks/node_exporter/node_exporter.yml'}}}}}",,,,,,,,,,,,,,,,,,
1199,"{'tosca.nodes.SoftwareComponent.Logstash': {'derived_from': 'tosca.nodes.SoftwareComponent', 'description': 'Logstash is a tool for receiving, processing and outputting logs. All kinds of logs. System logs, webserver logs, error logs, application logs, and just about anything you can throw at it.', 'requirements': [{'search_endpoint': {'capability': 'tosca.capabilities.Endpoint', 'node': 'tosca.nodes.SoftwareComponent.Elasticsearch', 'relationship': {'type': 'tosca.relationships.ConnectsTo', 'interfaces': {'Configure': {'pre_configure_source': {'inputs': {'elasticsearch_ip': {'type': 'string'}}}}}}}}], 'capabilities': {'log_endpoint': {'type': 'tosca.capabilities.Endpoint'}}}}",,20.0,0.0,0.0,18.0,0.0,55.0,5.44,0.0,0.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
805,"{'yorc.nodes.kubernetes.api.types.JobResource': {'derived_from': 'org.alien4cloud.kubernetes.api.types.JobResource', 'interfaces': {'tosca.interfaces.node.lifecycle.Runnable': {'submit': {'implementation': {'file': 'embedded', 'type': 'yorc.artifacts.Deployment.Kubernetes'}}, 'run': {'implementation': {'file': 'embedded', 'type': 'yorc.artifacts.Deployment.Kubernetes'}}, 'cancel': {'implementation': {'file': 'embedded', 'type': 'yorc.artifacts.Deployment.Kubernetes'}}}}}}",,16.0,0.0,0.0,16.0,0.0,23.0,3.49,0.0,0.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
1953,"{'Acme.1111': {'derived_from': 'org.tmforum.igxxxx.nodes.port_card', 'capabilities': {'PhysicalResourceSpecFurtherExtendedBy': {'properties': {'modelNumber': {'type': 'string', 'default': '1111'}, 'vendorName': {'type': 'string', 'default': 'Acme'}}}}}}",,11.0,0.0,0.0,11.0,0.0,16.0,3.62,0.0,0.0,0.0,0.0,0.0,0.0,2.0,0.0,0.0,0.0
2081,"{'sodalite.nodes.hpc.job.slurm.result': {'description': 'slurm job result\n', 'derived_from': 'tosca.nodes.SoftwareComponent', 'requirements': [{'host': {'node': 'sodalite.nodes.hpc.wm.slurm', 'capability': 'tosca.capabilities.Compute', 'relationship': 'tosca.relationships.HostedOn'}}, {'job': {'node': 'sodalite.nodes.hpc.job.slurm', 'capability': 'sodalite.capabilities.hpc.StartedJob', 'relationship': 'tosca.relationships.DependsOn'}}], 'properties': {'monitor_period': {'type': 'integer', 'default': 10}, 'monitor_retries_headroom': {'type': 'integer', 'default': 2}, 'enable_audit': {'type': 'boolean', 'default': False}}, 'attributes': {'job_id': {'type': 'string', 'default': ''}, 'audit': {'type': 'string', 'default': ''}}, 'interfaces': {'Standard': {'type': 'tosca.interfaces.node.lifecycle.Standard', 'operations': {'start': {'inputs': {'wm_public_address': {'default': {'get_attribute': ['SELF', 'host', 'public_address']}}, 'wm_username': {'default': {'get_attribute': ['SELF', 'host', 'username']}}, 'wm_keypath': {'default': {'get_attribute': ['SELF', 'host', 'ssh-key']}}, 'job_id': {'type': 'string', 'default': {'get_attribute': ['SELF', 'job', 'job_id']}}, 'job_name': {'default': {'get_property': ['SELF', 'job', 'configured_job', 'name']}}, 'job_workspace': {'default': {'get_property': ['SELF', 'job', 'configured_job', 'workspace']}}, 'job_walltime': {'default': {'get_property': ['SELF', 'job', 'configured_job', 'walltime']}}, 'job_monitor_period': {'default': {'get_property': ['SELF', 'monitor_period']}}, 'job_monitor_retries_headroom': {'default': {'get_property': ['SELF', 'monitor_retries_headroom']}}, 'job_enable_audit': {'default': {'get_property': ['SELF', 'job', 'configured_job', 'enable_audit']}}}, 'implementation': 'slurm-job/playbooks/check.yml'}}}}, 'capabilities': {'job': {'type': 'sodalite.capabilities.hpc.CompleteJob'}}}}",,102.0,0.0,0.0,70.0,0.0,126.0,5.35,0.0,10.0,1.0,0.0,0.0,0.0,3.0,0.0,0.0,0.0
1735,"{'onap.vcpe_vgw': {'derived_from': 'tosca.nodes.nfv.VNF', 'properties': {'descriptor_id': {'type': 'string', 'constraints': [{'valid_values': ['b1bb0ce7-2222-4fa7-95ed-4840d70a1177']}], 'default': 'b1bb0ce7-2222-4fa7-95ed-4840d70a1177'}, 'provider': {'type': 'string', 'constraints': [{'valid_values': ['onap']}], 'default': 'onap'}, 'product_name': {'type': 'string', 'constraints': [{'valid_values': ['vcpe_vgw']}], 'default': 'vcpe_vgw'}, 'software_version': {'type': 'string', 'constraints': [{'valid_values': ['1.0']}], 'default': '1.0'}, 'descriptor_version': {'type': 'string', 'constraints': [{'valid_values': ['1.0']}], 'default': '1.0'}, 'flavour_id': {'type': 'string', 'constraints': [{'valid_values': ['simple']}], 'default': 'simple'}, 'flavour_description': {'type': 'string', 'default': 'simple'}, 'vnfm_info': {'type': 'list', 'entry_schema': {'type': 'string'}, 'default': ['gvnfm']}}}}",,48.0,0.0,0.0,41.0,0.0,65.0,4.08,0.0,0.0,0.0,0.0,0.0,0.0,8.0,0.0,0.0,0.0
1836,{'rnc.nodes.CP': {'derived_from': 'tosca.nodes.nfv.CP'}},,2.0,0.0,0.0,2.0,0.0,3.0,1.58,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
1950,"{'nodes.org.tmforum.models.sidmodels.ResourceDomain.ResourceABE.LogicalResourceABE.ComputingandSoftwareABE': {'derived_from': 'nodes.org.tmforum.models.sidmodels.ResourceDomain.ResourceABE.LogicalResourceABE', 'metadata': {'sid_release': '19.0'}}}",,4.0,0.0,0.0,4.0,0.0,6.0,2.58,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
2270,"{'tosca.nodes.indigo.HadoopMaster': {'derived_from': 'tosca.nodes.SoftwareComponent', 'artifacts': {'hadoop_role': {'file': 'indigo-dc.hadoop', 'type': 'tosca.artifacts.AnsibleGalaxy.role'}}, 'interfaces': {'Standard': {'configure': {'implementation': 'https://raw.githubusercontent.com/indigo-dc/tosca-types/dodas_roll/artifacts/hadoop/hadoop_master_install.yml', 'inputs': {'hadoop_master_ip': {'get_attribute': ['HOST', 'private_address', 0]}}}}}}}",,16.0,0.0,0.0,13.0,0.0,20.0,4.32,0.0,0.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
2781,"{'org.alien4cloud.relationships.RexrayConnectsToLibStorage': {'derived_from': 'tosca.relationships.ConnectsTo', 'valid_target_types': ['org.alien4cloud.nodes.RexrayServer'], 'description': 'Connects Rexray clients to the Rexray server', 'interfaces': {'Configure': {'post_configure_source': {'inputs': {'REXRAY_SERVER': {'get_attribute': ['TARGET', 'ip_address']}}, 'implementation': 'scripts/rexray/configure_connectsToLibStorage.sh'}}}}}",,14.0,0.0,0.0,11.0,0.0,23.0,4.44,0.0,0.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,1.0
1575,"{'org.ystia.monitoring.service.impl.Graphite': {'derived_from': 'org.ystia.monitoring.service.pub.MonitoringService', 'metadata': {'icon': '/images/graphite.png'}, 'attributes': {'web_ui_url': {'concat': ['http://', {'get_attribute': ['SELF', 'http_endpoint', 'ip_address']}, ':', {'get_attribute': ['SELF', 'http_endpoint', 'port']}]}}, 'capabilities': {'http_endpoint': {'type': 'org.ystia.monitoring.service.impl.GraphiteHttpEndpoint', 'description': 'Endpoint to Graphite Web UI'}, 'data_collection': {'type': 'org.ystia.monitoring.service.impl.GraphiteDataCollectionEndpoint', 'description': 'Endpoint to collect data'}}, 'interfaces': {'Standard': {'start': {'implementation': {'file': 'sitespeedio/graphite:1.0.2-2-b', 'repository': 'docker', 'type': 'tosca.artifacts.Deployment.Image.Container.Docker'}}}}}}",,31.0,0.0,0.0,23.0,0.0,47.0,5.14,0.0,0.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
2244,"{'tosca.nodes.indigo.GalaxyWN': {'derived_from': 'tosca.nodes.SoftwareComponent', 'properties': {'front_end_ip': {'type': 'string', 'description': 'IP of the Front-End node', 'required': True}, 'export_dir': {'type': 'string', 'description': 'path to store galaxy data', 'default': '/export', 'required': True}}, 'requirements': [{'host': {'capability': 'tosca.capabilities.Container', 'node': 'tosca.nodes.Compute', 'relationship': 'tosca.relationships.HostedOn'}}], 'interfaces': {'Standard': {'configure': {'implementation': 'https://raw.githubusercontent.com/indigo-dc/tosca-types/dodas_roll/artifacts/galaxy/galaxy_wn_configure.yml', 'inputs': {'galaxy_front_end_ip': {'get_property': ['SELF', 'front_end_ip']}, 'export_dir': {'get_property': ['SELF', 'export_dir']}}}}}}}",,30.0,0.0,0.0,26.0,0.0,50.0,5.19,0.0,0.0,1.0,0.0,0.0,0.0,2.0,0.0,0.0,0.0
1053,"{'tosca.nodes.Compute': {'derived_from': 'tosca.nodes.Root', 'description': 'Represents a compute instance in the IaaS layer.', 'properties': {'disk_size': {'type': 'integer', 'constraints': [{'greater_than': 0}]}, 'num_cpus': {'type': 'integer', 'constraints': [{'greater_than': 0}]}, 'mem_size': {'type': 'integer', 'constraints': [{'greater_than': 0}]}, 'os_arch': {'type': 'string'}, 'os_name': {'type': 'string'}, 'os_distribution': {'type': 'string'}, 'os_version': {'type': 'string'}}, 'tags': {'icon': '../.../images/test.jpg'}}}",,26.0,0.0,0.0,26.0,0.0,46.0,4.51,0.0,0.0,0.0,0.0,0.0,0.0,7.0,0.0,0.0,0.0
789,"{'ystia.yorc.tests.nodes.WFNode': {'derived_from': 'tosca.nodes.SoftwareComponent', 'interfaces': {'Standard': {'create': {'implementation': {'type': 'ystia.yorc.tests.artifacts.Implementation.Custom', 'file': 'whatever'}}}, 'custom': {'operation1': {'implementation': {'type': 'ystia.yorc.tests.artifacts.Implementation.Custom', 'file': 'whatever'}}, 'operation2': {'implementation': {'type': 'ystia.yorc.tests.artifacts.Implementation.Custom', 'file': 'whatever'}}}}}}",,17.0,0.0,0.0,17.0,0.0,24.0,3.59,0.0,0.0,2.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
47,"{'tosca.nodes.SoftwareComponent.Rsyslog': {'derived_from': 'tosca.nodes.SoftwareComponent', 'requirements': [{'log_endpoint': {'capability': 'tosca.capabilities.Endpoint', 'node': 'tosca.nodes.SoftwareComponent.Logstash', 'relationship': 'tosca.relationships.ConnectsTo'}}]}}",,7.0,0.0,0.0,7.0,0.0,11.0,3.46,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
2251,"{'tosca.nodes.indigo.LRMS.WorkerNode.Slurm': {'derived_from': 'tosca.nodes.indigo.LRMS.WorkerNode', 'artifacts': {'slurm_role': {'file': 'indigo-dc.slurm', 'type': 'tosca.artifacts.AnsibleGalaxy.role'}, 'nfs_role': {'file': 'indigo-dc.nfs', 'type': 'tosca.artifacts.AnsibleGalaxy.role'}, 'openvpn_role': {'file': 'indigo-dc.openvpn', 'type': 'tosca.artifacts.AnsibleGalaxy.role'}}, 'interfaces': {'Standard': {'configure': {'implementation': 'https://raw.githubusercontent.com/indigo-dc/tosca-types/dodas_roll/artifacts/lrms/slurm/slurm_wn_install.yml', 'inputs': {'slurm_front_end_ip': {'get_property': ['SELF', 'front_end_ip']}, 'wn_hybrid_cluster': {'get_property': ['SELF', 'hybrid']}, 'slurm_public_front_end_ip': {'get_property': ['SELF', 'public_front_end_ip']}}}}}}}",,29.0,0.0,0.0,23.0,0.0,37.0,4.57,0.0,0.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
2279,"{'tosca.nodes.indigo.LRMS.FrontEnd.Kubernetes': {'derived_from': 'tosca.nodes.indigo.LRMS.FrontEnd', 'properties': {'admin_username': {'required': False, 'type': 'string', 'default': 'kubeuser'}, 'admin_token': {'required': False, 'type': 'string', 'value': 'some_insecure_token'}}, 'artifacts': {'kube_role': {'file': 'indigo-dc.kubernetes', 'type': 'tosca.artifacts.AnsibleGalaxy.role'}, 'nfs_role': {'file': 'indigo-dc.nfs', 'type': 'tosca.artifacts.AnsibleGalaxy.role'}, 'openvpn_role': {'file': 'indigo-dc.openvpn', 'type': 'tosca.artifacts.AnsibleGalaxy.role'}}, 'capabilities': {'lrms': {'type': 'tosca.capabilities.indigo.LRMS.Kubernetes'}}, 'interfaces': {'Standard': {'configure': {'implementation': 'https://raw.githubusercontent.com/indigo-dc/tosca-types/k8s/artifacts/lrms/kubernetes/kube_fe_install.yml', 'inputs': {'kube_front_end_ip': {'get_attribute': ['HOST', 'private_address', 0]}, 'fe_hybrid_cluster': {'get_property': ['SELF', 'hybrid']}, 'kube_admin_username': {'get_property': ['SELF', 'admin_username']}, 'kube_admin_token': {'get_property': ['SELF', 'admin_token']}}}}}}}",,46.0,0.0,0.0,37.0,0.0,61.0,5.2,0.0,0.0,1.0,0.0,0.0,0.0,2.0,0.0,0.0,0.0
2773,"{'org.lexis.datatransfer.relationships.FilesProvider': {'derived_from': 'tosca.relationships.DependsOn', 'description': 'Relationship with a provider of files\n', 'valid_target_types': ['org.lexis.datatransfer.capabilities.FilesProvider']}}",,5.0,0.0,0.0,4.0,0.0,12.0,3.58,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
1964,"{'org.lexis.datatransfer.nodes.CopyFromJobTask': {'derived_from': 'tosca.nodes.SoftwareComponent', 'description': 'Copy files from a HEAppE Job task output directory\n', 'properties': {'task_name': {'description': 'Name of the task in the Job', 'type': 'string', 'required': True}, 'source_files_patterns': {'type': 'list', 'entry_schema': {'type': 'string'}, 'description': 'List of file patterns to copy from job output directory\n', 'required': True}, 'destination_directory': {'description': 'Directory where to copy files', 'type': 'string', 'required': True}}, 'requirements': [{'job': {'capability': 'org.heappe.capabilities.HeappeJob', 'node': 'org.heappe.nodes.Job', 'relationship': 'org.heappe.relationships.GetResultsFromJob', 'occurrences': [1, 1]}}], 'interfaces': {'Standard': {'create': {'implementation': 'playbooks/noop.yaml'}, 'start': {'inputs': {'user': {'get_attribute': ['REQ_TARGET', 'job', 'file_transfer', 'user']}, 'private_key': {'get_attribute': ['REQ_TARGET', 'job', 'file_transfer', 'key']}, 'server': {'get_attribute': ['REQ_TARGET', 'job', 'file_transfer', 'server']}, 'source_files_patterns': {'get_property': ['SELF', 'source_files_patterns']}, 'job_directory': {'get_attribute': ['REQ_TARGET', 'job', 'file_transfer', 'path']}, 'tasks_name_id': {'get_attribute': ['REQ_TARGET', 'job', 'tasks_name_id']}, 'task_name': {'get_property': ['SELF', 'task_name']}, 'destination_directory': {'get_property': ['SELF', 'destination_directory']}}, 'implementation': 'playbooks/copyfromjobtask.yaml'}, 'delete': {'implementation': 'playbooks/noop.yaml'}}}, 'tags': {'icon': 'images/copyfromjob.png'}}}",,78.0,0.0,0.0,51.0,0.0,124.0,5.83,0.0,0.0,1.0,0.0,0.0,0.0,3.0,0.0,0.0,0.0
2253,"{'tosca.nodes.indigo.LRMS.FrontEnd.Slurm': {'derived_from': 'tosca.nodes.indigo.LRMS.FrontEnd', 'artifacts': {'slurm_role': {'file': 'indigo-dc.slurm', 'type': 'tosca.artifacts.AnsibleGalaxy.role'}, 'nfs_role': {'file': 'indigo-dc.nfs', 'type': 'tosca.artifacts.AnsibleGalaxy.role'}, 'openvpn_role': {'file': 'indigo-dc.openvpn', 'type': 'tosca.artifacts.AnsibleGalaxy.role'}}, 'capabilities': {'lrms': {'type': 'tosca.capabilities.indigo.LRMS.Slurm'}}, 'interfaces': {'Standard': {'configure': {'implementation': 'https://raw.githubusercontent.com/indigo-dc/tosca-types/dodas_roll/artifacts/lrms/slurm/slurm_fe_install.yml', 'inputs': {'wn_ips': {'get_property': ['SELF', 'wn_ips']}, 'front_end_ip': {'get_attribute': ['HOST', 'private_address', 0]}, 'fe_hybrid_cluster': {'get_property': ['SELF', 'hybrid']}}}}}}}",,33.0,0.0,0.0,26.0,0.0,42.0,4.83,0.0,0.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
784,"{'DockerEngine': {'derived_from': 'tosca.nodes.Root', 'capabilities': {'host': {'type': 'DockerHost'}}, 'requirements': [{'os': None, 'type': 'linux', 'distribution': 'ubuntu', 'architecture': 'x86_64'}], 'interfaces': {'Standard': {'create': {'implementation': 'dockerengine_create.sh'}, 'start': {'implementation': 'dockerengine_start.sh'}, 'stop': {'implementation': 'dockerengine_stop.sh'}}}}}",,18.0,0.0,0.0,18.0,0.0,27.0,4.5,0.0,0.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,3.0
1160,"{'tosca.nodes.tier': {'description': 'A logical node that allows to group several nodes together.', 'properties': {'name': {'type': 'string', 'constraints': [{'required': True}, {'whatever': 'arf'}]}}}}",,8.0,0.0,0.0,8.0,0.0,21.0,4.39,0.0,0.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0
545,"{'org.alien4cloud.grafana.pub.nodes.GrafanaService': {'derived_from': 'tosca.nodes.SoftwareComponent', 'abstract': True, 'metadata': {'icon': '/images/grafana.png'}, 'capabilities': {'http_endpoint': {'type': 'org.alien4cloud.grafana.pub.capabilities.GrafanaHttpEndpoint', 'occurrences': [0, 'UNBOUNDED'], 'description': 'UI endpoint'}}}}",,12.0,0.0,0.0,10.0,0.0,18.0,4.17,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
1699,"{'tosca.nodes.indigo.LRMS.WorkerNode.Torque': {'derived_from': 'tosca.nodes.indigo.LRMS.WorkerNode', 'interfaces': {'Standard': {'configure': {'implementation': 'https://raw.githubusercontent.com/indigo-dc/tosca-types/master/artifacts/lrms/torque/torque_wn_install.yml', 'inputs': {'torque_front_end_ip': {'get_property': ['SELF', 'front_end_ip']}}}}}}}",,11.0,0.0,0.0,9.0,0.0,13.0,3.7,0.0,0.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
602,"{'radon.nodes.mongodb.MongoDBDatabase': {'derived_from': 'tosca.nodes.Database', 'metadata': {'targetNamespace': 'radon.nodes.mongodb', 'abstract': 'false', 'final': 'false'}, 'properties': {'authentication_database': {'type': 'string', 'required': False}}, 'requirements': [{'host': {'capability': 'tosca.capabilities.Compute', 'node': 'radon.nodes.mongodb.MongoDBMS', 'relationship': 'tosca.relationships.HostedOn', 'occurrences': [1, 1]}}], 'capabilities': {'database_endpoint': {'occurrences': [0, 'UNBOUNDED'], 'type': 'tosca.capabilities.Endpoint.Database'}}, 'interfaces': {'Standard': {'type': 'tosca.interfaces.node.lifecycle.Standard', 'inputs': {'DB_USER_AUTH_DB': {'type': 'string', 'required': False, 'default': {'get_property': ['SELF', 'authentication_database']}}, 'DB_USER': {'type': 'string', 'required': True, 'default': {'get_property': ['SELF', 'user']}}, 'DB_NAME': {'type': 'string', 'required': True, 'default': {'get_property': ['SELF', 'name']}}, 'DB_PASSWORD': {'type': 'string', 'required': True, 'default': {'get_property': ['SELF', 'password']}}}}}}}",,56.0,0.0,0.0,44.0,0.0,75.0,5.14,0.0,4.0,1.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0
1168,"{'org.alien4cloud.nodes.Job': {'abstract': True, 'derived_from': 'tosca.nodes.Root', 'interfaces': {'tosca.interfaces.node.lifecycle.Runnable': {'run': {'description': 'Standard lifecycle run operation.'}}}}}",,7.0,0.0,0.0,7.0,0.0,13.0,3.55,0.0,0.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
1805,"{'tosca.nodes.network.Network': {'derived_from': 'tosca.nodes.Root', 'properties': {'ip_version': {'type': 'integer', 'required': False, 'default': 4, 'constraints': [{'valid_values': [4, 6]}]}, 'cidr': {'type': 'string', 'required': False}, 'start_ip': {'type': 'string', 'required': False}, 'end_ip': {'type': 'string', 'required': False}, 'gateway_ip': {'type': 'string', 'required': False}, 'network_name': {'type': 'string', 'required': False}, 'network_id': {'type': 'string', 'required': False}, 'segmentation_id': {'type': 'string', 'required': False}, 'network_type': {'type': 'string', 'required': False}, 'physical_network': {'type': 'string', 'required': False}}, 'capabilities': {'link': {'type': 'tosca.capabilities.network.Linkable'}}}}",,41.0,0.0,0.0,39.0,0.0,64.0,3.89,0.0,0.0,0.0,0.0,0.0,0.0,10.0,0.0,0.0,0.0
1495,{'seaclouds.nodes.Compute.HP': {'derived_from': 'seaclouds.nodes.Compute'}},,2.0,0.0,0.0,2.0,0.0,3.0,1.58,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
1120,"{'tosca.nodes.Root': {'abstract': True, 'description': 'This is the default (root) TOSCA Node Type that all other TOSCA nodes should extends. This allows all TOSCA nodes to have a consistent set of features for modeling and management (e.g, consistent definitions for requirements, capabilities, and lifecycle interfaces).\n', 'tags': {'icon': '/images/root.png'}, 'requirements': {'dependency': {'type': 'tosca.capabilities.Feature', 'lower_bound': 0, 'upper_bound': 'unbounded'}}, 'capabilities': {'feature': {'type': 'tosca.capabilities.Feature', 'lower_bound': 0, 'upper_bound': 'unbounded'}}, 'interfaces': {'Standard': {'description': 'Default lifecycle for nodes in TOSCA.', 'create': {'description': 'Basic lifecycle create operation.'}, 'configure': {'description': 'Basic lifecycle configure operation.'}, 'start': {'description': 'Basic lifecycle start operation.'}, 'stop': {'description': 'Basic lifecycle stop operation.'}, 'delete': {'description': 'Basic lifecycle delete operation.'}}}}}",,31.0,0.0,0.0,28.0,0.0,102.0,5.63,0.0,0.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
312,"{'tosca.nodes.indigo.ElasticCluster': {'derived_from': 'tosca.nodes.SoftwareComponent', 'metadata': {'icon': '/images/ec3.png'}, 'properties': {'secret_token': {'type': 'string', 'description': 'Token to access CLUES web interface', 'default': 'not_very_secret_token', 'required': False}, 'deployment_id': {'type': 'string', 'description': 'ID of the deployment of this elastic cluster in the orchestrator', 'required': False, 'default': ''}, 'orchestrator_url': {'type': 'string', 'description': 'URL of the orchestrator', 'required': False, 'default': 'http://orchestrator01-indigo.cloud.ba.infn.it:8080/orchestrator'}, 'iam_access_token': {'type': 'string', 'description': 'INDIGO IAM access token', 'required': False, 'default': 'iam_access_token'}, 'iam_clues_client_id': {'type': 'string', 'description': 'INDIGO IAM client id to be used by CLUES', 'required': False, 'default': 'iam_clues_client_id'}, 'iam_clues_client_secret': {'type': 'string', 'description': 'INDIGO IAM client secret to be used by CLUES', 'required': False, 'default': 'iam_clues_client_secret'}, 'marathon_credentials': {'type': 'tosca.datatypes.Credential', 'description': 'Credentials to access the marathon endpoint from CLUES plugin', 'default': {'protocol': 'http', 'user': 'admin', 'token': 'password', 'token_type': 'password'}, 'required': False}, 'chronos_credentials': {'type': 'tosca.datatypes.Credential', 'description': 'Credentials to access the chronos endpoint from CLUES plugin', 'default': {'protocol': 'http', 'user': 'admin', 'token': 'password', 'token_type': 'password'}, 'required': False}, 'mesos_credentials': {'type': 'tosca.datatypes.Credential', 'description': 'Credentials to access the mesos endpoint from CLUES plugin', 'default': {'protocol': 'http', 'user': 'admin', 'token': 'password', 'token_type': 'password'}, 'required': False}, 'hybrid': {'type': 'boolean', 'description': 'Flag to specify that this ElasticCluster will work in a hybrid environment', 'default': False, 'required': False}, 'powermanager_plugin': {'type': 'string', 'description': 'Plugin that will manage the VMs (indigo_orchestrator or im)', 'default': 'indigo_orchestrator', 'required': False}, 'im_auth': {'type': 'string', 'description': 'IM auth data', 'default': '', 'required': False}}, 'artifacts': {'clues_role': {'file': 'indigo-dc.clues,master', 'type': 'tosca.artifacts.AnsibleGalaxy.role'}, 'im_role': {'file': 'grycap.im,master', 'type': 'tosca.artifacts.AnsibleGalaxy.role'}}, 'interfaces': {'Standard': {'create': {'implementation': 'https://raw.githubusercontent.com/indigo-dc/tosca-types/master/artifacts/ec3/ec3_install.yml', 'inputs': {'clues_secret_token': {'get_property': ['SELF', 'secret_token']}, 'clues_queue_system': {'get_property': ['SELF', 'lrms', 'type']}, 'ec3_max_instances': {'get_property': ['SELF', 'wn', 'max_instances']}, 'ec3_deployment_id': {'get_property': ['SELF', 'deployment_id']}, 'orchestrator_url': {'get_property': ['SELF', 'orchestrator_url']}, 'ec3_iam_access_token': {'get_property': ['SELF', 'iam_access_token']}, 'ec3_iam_clues_client_id': {'get_property': ['SELF', 'iam_clues_client_id']}, 'ec3_iam_clues_client_secret': {'get_property': ['SELF', 'iam_clues_client_secret']}, 'clues_marathon_credentials': {'get_property': ['SELF', 'marathon_credentials']}, 'clues_chronos_credentials': {'get_property': ['SELF', 'chronos_credentials']}, 'clues_mesos_credentials': {'get_property': ['SELF', 'mesos_credentials']}, 'clues_powermanager_plugin': {'get_property': ['SELF', 'powermanager_plugin']}, 'im_auth_data': {'get_property': ['SELF', 'im_auth']}}}}}, 'requirements': [{'wn': {'capability': 'tosca.capabilities.Scalable', 'node': 'tosca.nodes.indigo.LRMS.WorkerNode', 'relationship': 'tosca.relationships.indigo.Manages'}}, {'lrms': {'capability': 'tosca.capabilities.indigo.LRMS', 'node': 'tosca.nodes.indigo.LRMS.FrontEnd', 'relationship': 'tosca.relationships.HostedOn'}}]}}",,153.0,0.0,0.0,124.0,0.0,304.0,6.35,0.0,0.0,1.0,0.0,0.0,0.0,12.0,0.0,0.0,0.0
2586,"{'tosca.relationships.ConnectsTo': {'derived_from': 'tosca.relationships.Root', 'valid_target_types': ['tosca.capabilities.Endpoint'], 'properties': {'credential': {'type': 'tosca.datatypes.Credential', 'required': False}}}}",,8.0,0.0,0.0,7.0,0.0,11.0,3.46,0.0,0.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0
2547,"{'tosca.relationships.AttachesTo': {'metadata': {'puccini.normative': 'true', 'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.1]', 'specification.location': '5.7.5'}, 'description': 'This type represents an attachment relationship between two nodes. For example, an AttachesTo relationship type would be used for attaching a storage node to a Compute node.', 'derived_from': 'tosca.relationships.Root', 'valid_target_types': ['tosca.capabilities.Attachment'], 'properties': {'location': {'description': 'The relative location (e.g., path on the file system), which provides the root location to address an attached node. e.g., a mount point / path such as \'/usr/data\'. Note: The user must provide it and it cannot be ""root"".', 'type': 'string', 'constraints': [{'min_length': 1}]}, 'device': {'description': ""The logical device name which for the attached device (which is represented by the target node in the model). e.g., '/dev/hda1'."", 'type': 'string', 'required': False}}, 'attributes': {'device': {'description': 'The logical name of the device as exposed to the instance. Note: A runtime property that gets set when the model gets instantiated by the orchestrator.', 'type': 'string'}}}}",,,,,,,,,,,,,,,,,,
704,"{'tosca.nodes.Database': {'metadata': {'puccini.normative': 'true', 'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.0]', 'specification.location': '5.8.7'}, 'description': 'The TOSCA Database node represents a logical database that can be managed and hosted by a TOSCA DBMS node.', 'derived_from': 'tosca.nodes.Root', 'properties': {'name': {'description': 'The logical database Name.', 'type': 'string'}, 'port': {'description': 'The port the database service will use to listen for incoming data and requests.', 'type': 'integer', 'required': False}, 'user': {'description': 'The special user account used for database administration.', 'type': 'string', 'required': False}, 'password': {'description': ""The password associated with the user account provided in the 'user' property."", 'type': 'string', 'required': False}}, 'capabilities': {'database_endpoint': {'type': 'tosca.capabilities.Endpoint.Database'}}, 'requirements': [{'host': {'capability': 'tosca.capabilities.Container', 'node': 'tosca.nodes.DBMS', 'relationship': 'tosca.relationships.HostedOn'}}]}}",,34.0,0.0,0.0,31.0,0.0,103.0,5.87,0.0,0.0,0.0,0.0,0.0,0.0,4.0,0.0,0.0,0.0
2411,"{'org.alien4cloud.automation.a4c.config.location_resources.cfy_byon.LocationConnectsToHostpool': {'derived_from': 'tosca.relationships.ConnectsTo', 'valid_target_types': ['org.alien4cloud.automation.cloudify.hostpool.pub.capabilities.HostPoolServiceApi'], 'interfaces': {'Configure': {'pre_configure_source': {'inputs': {'ANSIBLE_VERBOSE': False, 'PLAYBOOK_ENTRY': 'connect_hostpool.yml', 'hostpool_url': {'concat': [{'get_property': ['TARGET', 'cloudify_hostpool', 'protocol']}, '://', {'get_attribute': ['TARGET', 'cloudify_hostpool', 'ip_address']}, ':', {'get_property': ['TARGET', 'cloudify_hostpool', 'port']}]}}, 'implementation': 'playbook/playbook.ansible'}}}}}",,27.0,0.0,0.0,15.0,0.0,31.0,4.58,0.0,0.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
1244,"{'openstack.nodes.MariaDB': {'derived_from': 'tosca.nodes.SoftwareComponent', 'capabilities': {'mdb': {'description': 'MariaDB capability', 'type': 'openstack.capabilities.Endpoint.MariaDB'}}, 'requirements': [{'com': {'capability': 'openstack.capabilities.Endpoint.Common', 'node': 'openstack.nodes.Common', 'relationship': 'openstack.relationships.ConnectsTo'}}, {'ha': {'capability': 'openstack.capabilities.Endpoint.HAProxy', 'node': 'openstack.nodes.HAProxy', 'relationship': 'openstack.relationships.ConnectsTo'}}]}}",,15.0,0.0,0.0,15.0,0.0,25.0,4.21,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
1192,"{'vyatta-machine': {'derived_from': 'cloudify.netconf.nodes.xml_rpc', 'properties': {'metadata': {'default': {'xmlns': {'vyatta-interfaces-dataplane-v1': 'urn:vyatta.com:mgmt:vyatta-interfaces-dataplane:1', 'vyatta-if-v1': 'urn:vyatta.com:mgmt:vyatta-interfaces:1'}}}}}}",,8.0,0.0,0.0,8.0,0.0,11.0,3.46,0.0,0.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0
24,"{'tosca.nodes.WebServer': {'derived_from': 'tosca.nodes.SoftwareComponent', 'capabilities': {'data_endpoint': {'type': 'tosca.capabilities.Endpoint'}, 'admin_endpoint': {'type': 'tosca.capabilities.Endpoint.Admin'}, 'host': {'type': 'tosca.capabilities.Container', 'valid_source_types': ['tosca.nodes.WebApplication']}}}}",,11.0,0.0,0.0,10.0,0.0,15.0,3.59,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
671,"{'radon.nodes.azure.AzurePlatform': {'derived_from': 'radon.nodes.abstract.CloudPlatform', 'metadata': {'targetNamespace': 'radon.nodes.azure', 'abstract': 'false', 'final': 'false'}, 'properties': {'password': {'type': 'string'}, 'user_name': {'type': 'string'}, 'region': {'type': 'string', 'required': False}}, 'capabilities': {'host': {'occurrences': [1, 'UNBOUNDED'], 'valid_source_types': ['radon.nodes.azure.AzureFunction', 'radon.nodes.azure.AzureResource'], 'type': 'tosca.capabilities.Container'}}, 'interfaces': {'Standard': {'type': 'tosca.interfaces.node.lifecycle.Standard', 'inputs': {'PASSWORD': {'type': 'string', 'required': True, 'default': {'get_property': ['SELF', 'password']}}, 'USER_NAME': {'type': 'string', 'required': True, 'default': {'get_property': ['SELF', 'user_name']}}}}}}}",,41.0,0.0,0.0,33.0,0.0,55.0,4.87,0.0,2.0,1.0,0.0,0.0,0.0,3.0,0.0,0.0,0.0
1003,"{'fastconnect.nodes.apacheLBGroovy': {'derived_from': 'fastconnect.nodes.apacheLB', 'description': 'Installation of apacheLB using Cloudify scripts\n', 'properties': {'version': {'type': 'version', 'default': 2, 'constraints': [{'equal': 2}]}}, 'interfaces': {'lifecycle': {'create': 'scripts/apacheLB_installCalm.groovy', 'start': 'scripts/apacheLB_start.groovy', 'stop': 'scripts/apacheLB_stop.groovy', 'delete': 'scripts/apacheLB_uninstall.groovy'}, 'monitor': {'locator': 'scripts/monitor/locator.groovy', 'startDetection': 'scripts/monitor/startDetection.groovy'}, 'custom': {'addNode': 'scripts/apacheLB_addNode.groovy', 'removeNode': 'scripts/apacheLB_removeNode.groovy', 'deployPublic': {'inputs': {'publicUrl': {'type': 'string', 'required': True}}}, 'updateWar': {'inputs': {'warUrl': {'type': 'string', 'required': True}, 'countSlave': {'type': 'integer', 'required': False}, 'tresholdRate': {'type': 'float', 'required': True}}, 'implementation': 'scripts/updateWarUrl.groovy'}, 'updateWarFile': 'scripts/updateWarFile.groovy'}}, 'requirements': [{'httpEndpoint': {'capability': 'calm.capabilities.HttpEndpoint', 'occurrences': [0, 'unbounded']}}], 'artifacts': [{'scripts': {'file': 'scripts', 'type': 'fastconnect.artifacts.ResourceDirectory'}}]}}",,49.0,0.0,0.0,47.0,0.0,80.0,5.84,0.0,0.0,3.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0
1552,{'com.toscaruntime.mock.nodes.MockCompute': {'derived_from': 'tosca.nodes.Compute'}},,2.0,0.0,0.0,2.0,0.0,3.0,1.58,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
620,"{'radon.nodes.aws.AwsS3Bucket': {'derived_from': 'radon.nodes.abstract.ObjectStorage', 'metadata': {'targetNamespace': 'radon.nodes.aws', 'abstract': 'false', 'final': 'false'}, 'attributes': {'bucket_name': {'type': 'string'}, 'region': {'type': 'string'}}, 'requirements': [{'host': {'capability': 'tosca.capabilities.Container', 'node': 'radon.nodes.aws.AwsPlatform', 'relationship': 'tosca.relationships.HostedOn', 'occurrences': [1, 1]}}, {'invoker': {'capability': 'radon.capabilities.Invocable', 'node': 'radon.nodes.abstract.Function', 'relationship': 'radon.relationships.aws.AwsTriggers', 'occurrences': [0, 'UNBOUNDED']}}], 'interfaces': {'Standard': {'type': 'tosca.interfaces.node.lifecycle.Standard', 'inputs': {'aws_region': {'type': 'string', 'required': True, 'default': {'get_property': ['SELF', 'host', 'region']}}, 'bucket_name': {'type': 'string', 'required': True, 'default': {'get_property': ['SELF', 'name']}}}, 'operations': {'create': {'implementation': {'primary': 'create', 'timeout': 0}}, 'delete': {'implementation': {'primary': 'delete', 'timeout': 0}}}}}, 'artifacts': {'create': {'type': 'radon.artifacts.Ansible', 'file': 'create.yml'}, 'delete': {'type': 'radon.artifacts.Ansible', 'file': 'delete.yml'}}}}",,61.0,0.0,0.0,52.0,0.0,86.0,5.5,0.0,2.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
1050,"{'alien.test.nodes.TestComponent': {'derived_from': 'tosca.nodes.SoftwareComponent', 'capabilities': {'connectivity': {'type': 'alien.test.capabilities.TestComponentConnects'}, 'capa_upperbound_test': {'type': 'alien.test.capabilities.CapaUpperBoundTest', 'occurrences': [1, 2]}, 'req_upperbound_test': {'type': 'alien.test.capabilities.ReqUpperBoundTest', 'occurrences': [1, 2]}, 'capa_to_be_deleted': {'type': 'alien.test.capabilities.CapaToBeDeleted'}, 'req_to_be_deleted': {'type': 'alien.test.capabilities.ReqToBeDeleted'}}}}",,19.0,0.0,0.0,15.0,0.0,25.0,3.94,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
2032,"{'tosca.nodes.Container.Application': {'metadata': {'shorthand_name': 'Container.Application', 'type_qualified_name': 'tosca:Container.Application', 'type_uri': 'tosca.nodes.Container.Application'}, 'derived_from': 'tosca.nodes.Root', 'requirements': [{'host': {'capability': 'tosca.capabilities.Container', 'node': 'tosca.nodes.Container.Runtime', 'relationship': 'tosca.relationships.HostedOn'}}, {'storage': {'capability': 'tosca.capabilities.Storage'}}, {'network': {'capability': 'tosca.capabilities.EndPoint'}}]}}",,15.0,0.0,0.0,15.0,0.0,24.0,4.3,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
2058,"{'my.nodes.Nginx': {'derived_from': 'tosca.nodes.SoftwareComponent', 'attributes': {'site_config_dir': {'type': 'string', 'description': 'Location of nginx site configs'}, 'remote_host_ip': {'type': 'string', 'description': 'Location of nginx site configs'}}, 'capabilities': {'host': {'type': 'tosca.capabilities.Compute', 'valid_source_types': ['my.nodes.Nginx.Site']}}, 'interfaces': {'Standard': {'type': 'tosca.interfaces.node.lifecycle.Standard', 'operations': {'create': {'implementation': {'primary': 'playbooks/nginx/install.yml'}}, 'delete': {'implementation': {'primary': 'playbooks/nginx/uninstall.yml'}}}}}}}",,24.0,0.0,0.0,23.0,0.0,41.0,4.72,0.0,0.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
662,"{'radon.nodes.datapipeline.source.ConsumeLocal': {'derived_from': 'radon.nodes.datapipeline.source.ConsumeDataEndPoint', 'metadata': {'targetNamespace': 'radon.nodes.datapipeline.source', 'abstract': 'false', 'final': 'false'}, 'attributes': {'template_name': {'type': 'string', 'default': 'ConsumeLocal_localConn'}}, 'properties': {'directory': {'type': 'string', 'description': 'Path to the file/folder'}}, 'interfaces': {'Standard': {'type': 'tosca.interfaces.node.lifecycle.Standard', 'operations': {'create': {'inputs': {'template_name': {'type': 'string', 'required': True, 'default': {'get_attribute': ['SELF', 'template_name']}}, 'template_file': {'type': 'string', 'required': True, 'default': 'ConsumeLocal_localConn.xml'}}, 'implementation': {'primary': 'create', 'dependencies': ['templateFile_localConn'], 'timeout': 0}}, 'configure': {'inputs': {'pipeline_id': {'type': 'string', 'required': False, 'default': {'get_attribute': ['SELF', 'id']}}, 'directory': {'type': 'string', 'description': 'Directory on local machine from where the data will be read.', 'required': True, 'default': {'get_property': ['SELF', 'directory']}}}, 'implementation': {'primary': 'configure', 'timeout': 0}}}}}, 'artifacts': {'templateFile_LocalConn': {'type': 'tosca.artifacts.File', 'description': 'Nifi template to consume local data and send to local pipelines.', 'file': 'ConsumeLocal_localConn.xml'}, 'create': {'type': 'tosca.artifacts.File', 'file': 'create.yml'}, 'configure': {'type': 'tosca.artifacts.File', 'file': 'configure.yml'}, 'templateFile_RmtConn': {'type': 'tosca.artifacts.File', 'description': 'Nifi template to consume local data and send to remote pipelines.', 'file': 'ConsumeLocal_RmtConn.xml'}}}}",,72.0,0.0,0.0,64.0,0.0,137.0,5.78,0.0,4.0,1.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0
1904,{'org.tmforum.igxxxx.nodes.chassis': {'derived_from': 'tosca.nodes.org.tmforum.models.sidmodels.ResourceDomain.ResourceABE.PhysicalResource.Hardware.ManagedHardware.PhysicalContainer.Equipment'}},,2.0,0.0,0.0,2.0,0.0,3.0,1.58,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
244,"{'my.nodes.Container.Application.Docker': {'derived_from': 'tosca.nodes.Container.Application.Docker', 'description': 'represents a containerized application.', 'capabilities': {'endpoint': 'tosca.capabilities.Endpoint'}, 'attributes': {'uuid': {'type': 'string'}}, 'properties': {'env_vars': {'type': 'map', 'required': False, 'entry_schema': {'description': 'Environment variables for the Docker container.', 'type': 'string'}}}, 'artifacts': {'my_image': {'type': 'tosca.artifacts.Deployment.Image.Container.Docker'}}}}",,18.0,0.0,0.0,18.0,0.0,35.0,4.79,0.0,0.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0
2069,"{'sodalite.data.mover': {'description': 'Moves data from ""src"" node to ""dst"" node\n', 'derived_from': 'tosca.nodes.Root'}}",,3.0,0.0,0.0,3.0,0.0,12.0,3.58,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
2340,"{'tosca.relationships.Root': {'description': 'The TOSCA root Relationship Type all other TOSCA base Relationship Types derive from.\n', 'attributes': {'tosca_id': {'type': 'string'}, 'tosca_name': {'type': 'string'}}, 'interfaces': {'Configure': {'type': 'tosca.interfaces.relationship.Configure'}}}}",,11.0,0.0,0.0,10.0,0.0,26.0,4.29,0.0,0.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
2266,"{'tosca.nodes.indigo.CmsOneclient': {'derived_from': 'tosca.nodes.SoftwareComponent', 'properties': {'oneclient_pkg': {'type': 'string', 'required': True}}, 'artifacts': {'oneclient_role': {'file': 'indigo-dc.oneclient', 'type': 'tosca.artifacts.AnsibleGalaxy.role'}}, 'interfaces': {'Standard': {'configure': {'implementation': 'https://raw.githubusercontent.com/indigo-dc/tosca-types/oneclient/artifacts/onedata/cms_oneclient.yml', 'inputs': {'oneclient_pkg': {'get_property': ['SELF', 'oneclient_pkg']}}}}}}}",,19.0,0.0,0.0,17.0,0.0,25.0,4.37,0.0,0.0,1.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0
901,"{'yorc.test.NodeA': {'derived_from': 'tosca.nodes.SoftwareComponent', 'requirements': [{'connection': {'capability': 'tosca.capabilities.Feature', 'relationship': 'tosca.relationships.ConnectsTo', 'occurrences': [1, 1]}}]}}",,9.0,0.0,0.0,7.0,0.0,12.0,3.42,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
813,"{'yorc.test.nodes.SSHBastionHost': {'derived_from': 'tosca.nodes.SoftwareComponent', 'capabilities': {'bastion': {'type': 'yorc.capabilities.SSHBastionHost', 'properties': {'port': {'get_property': ['HOST', 'endpoint', 'port']}, 'network_name': {'get_property': ['HOST', 'endpoint', 'network_name']}, 'port_name': {'get_property': ['HOST', 'endpoint', 'port_name']}}}}, 'interfaces': {'Standard': {'configure': {'implementation': {'file': 'ansible/bastion.yml', 'type': 'tosca.artifacts.Implementation.Ansible'}}}}}}",,27.0,0.0,0.0,18.0,0.0,31.0,4.24,0.0,0.0,1.0,0.0,0.0,0.0,3.0,0.0,0.0,0.0
715,{'cloudify.nodes.Container': {'derived_from': 'cloudify.nodes.Compute'}},,2.0,0.0,0.0,2.0,0.0,3.0,1.58,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
972,"{'fastconnect.nodes.Java': {'abstract': True, 'derived_from': 'tosca.nodes.SoftwareComponent', 'description': 'A Java Virtual Machine Software Component.\n', 'tags': {'icon': '/images/java.png', 'marurity': 'very bad'}, 'properties': {'version': {'type': 'version', 'default': '1.6', 'constraints': [{'greater_or_equal': '1.5'}]}, 'vendor': {'type': 'string'}, 'os_name': {'type': 'string'}, 'os_arch': {'type': 'string'}}, 'capabilities': {'java': {'type': 'tosca.capabilities.Java', 'occurrences': [0, 'unbounded']}}}}",,25.0,0.0,0.0,23.0,0.0,43.0,5.0,0.0,0.0,0.0,0.0,0.0,0.0,4.0,0.0,0.0,0.0
1712,"{'tosca.nodes.indigo.CmsWnConfig': {'derived_from': 'tosca.nodes.SoftwareComponent', 'properties': {'cms_local_site': {'type': 'string', 'required': True}, 'cms_stageoutsite': {'type': 'string', 'required': True}, 'cms_stageoutserver': {'type': 'string', 'required': True}, 'cms_stageoutprefix': {'type': 'string', 'required': True}, 'cms_stageoutsite_fallback': {'type': 'string', 'required': True}, 'cms_stageoutserver_fallback': {'type': 'string', 'required': True}, 'cms_stageoutprefix_fallback': {'type': 'string', 'required': True}, 'mysquid_host': {'type': 'string', 'required': True}, 'proxycache_host': {'type': 'string', 'required': True}, 'monitordb_ip': {'type': 'string', 'required': False}, 'elasticsearch_secret': {'type': 'string', 'required': False}}, 'artifacts': {'cms_config_role': {'file': 'indigo-dc.cms_config', 'type': 'tosca.artifacts.AnsibleGalaxy.role'}}, 'interfaces': {'Standard': {'configure': {'implementation': 'https://raw.githubusercontent.com/indigo-dc/tosca-types/master/artifacts/mesos/cms_wn_configure.yml', 'inputs': {'cms_config_mysquid_host': {'get_property': ['SELF', 'mysquid_host']}, 'cms_config_proxycache_host': {'get_property': ['SELF', 'proxycache_host']}, 'cms_config_cms_local_site': {'get_property': ['SELF', 'cms_local_site']}, 'cms_config_stageoutsite': {'get_property': ['SELF', 'cms_stageoutsite']}, 'cms_config_stageoutserver': {'get_property': ['SELF', 'cms_stageoutserver']}, 'cms_config_stageoutprefix': {'get_property': ['SELF', 'cms_stageoutprefix']}, 'cms_config_stageoutsite_fallback': {'get_property': ['SELF', 'cms_stageoutsite_fallback']}, 'cms_config_stageoutserver_fallback': {'get_property': ['SELF', 'cms_stageoutserver_fallback']}, 'cms_config_stageoutprefix_fallback': {'get_property': ['SELF', 'cms_stageoutprefix_fallback']}, 'cms_config_elastic_secret': {'get_property': ['SELF', 'elasticsearch_secret']}, 'monitordb_ip': {'get_property': ['SELF', 'monitordb_ip']}}}}}, 'requirements': [{'host': {'capability': 'tosca.capabilities.indigo.MesosSlave', 'relationship': 'tosca.relationships.HostedOn', 'node': 'tosca.nodes.SoftwareComponent', 'occurrences': [1, 1]}}]}}",,97.0,0.0,0.0,73.0,0.0,126.0,4.96,0.0,0.0,1.0,0.0,0.0,0.0,11.0,0.0,0.0,0.0
1714,"{'tosca.nodes.indigo.SparkMesos': {'derived_from': 'tosca.nodes.SoftwareComponent', 'properties': {'marathon_password': {'type': 'string', 'required': True}, 'zookeeper_peers': {'type': 'string', 'required': True}, 'spark_mesos_deploy_app': {'type': 'string', 'constraints': [{'valid_values': ['apache-zeppelin', 'spark-dispatcher']}], 'required': False}, 'spark_hdfs_uri': {'type': 'string', 'required': False, 'default': ''}, 'spark_swift_auth_url': {'type': 'string', 'required': False, 'default': ''}, 'spark_swift_http_port': {'type': 'string', 'required': False, 'default': '8080'}, 'spark_swift_region': {'type': 'string', 'required': False, 'default': ''}, 'spark_swift_tenant': {'type': 'string', 'required': False, 'default': ''}, 'spark_swift_username': {'type': 'string', 'required': False, 'default': ''}, 'spark_swift_password': {'type': 'string', 'required': False, 'default': ''}, 'spark_swift_provider': {'type': 'string', 'required': False, 'default': 'Test'}, 'spark_cores_max': {'type': 'string', 'required': False, 'default': ''}, 'spark_executor_cores': {'type': 'string', 'required': False, 'default': ''}, 'spark_executor_mem': {'type': 'string', 'required': False, 'default': ''}, 'spark_driver_mem': {'type': 'string', 'required': False, 'default': ''}, 'spark_driver_cores': {'type': 'string', 'required': False, 'default': ''}}, 'artifacts': {'spark_mesos_role': {'file': 'indigo-dc.spark-mesos', 'type': 'tosca.artifacts.AnsibleGalaxy.role'}}, 'interfaces': {'Standard': {'create': {'implementation': 'https://raw.githubusercontent.com/indigo-dc/tosca-types/master/artifacts/mesos/spark_mesos_setup.yml', 'inputs': {'marathon_password': {'get_property': ['SELF', 'marathon_password']}, 'zookeeper_peers': {'get_property': ['SELF', 'zookeeper_peers']}, 'spark_mesos_hdfs_uri': {'get_property': ['SELF', 'spark_hdfs_uri']}, 'spark_mesos_swift_auth_url': {'get_property': ['SELF', 'spark_swift_auth_url']}, 'spark_mesos_swift_http_port': {'get_property': ['SELF', 'spark_swift_http_port']}, 'spark_mesos_swift_region': {'get_property': ['SELF', 'spark_swift_region']}, 'spark_mesos_swift_tenant': {'get_property': ['SELF', 'spark_swift_tenant']}, 'spark_mesos_swift_username': {'get_property': ['SELF', 'spark_swift_username']}, 'spark_mesos_swift_password': {'get_property': ['SELF', 'spark_swift_password']}, 'spark_mesos_swift_provider': {'get_property': ['SELF', 'spark_swift_provider']}, 'spark_mesos_cores_max': {'get_property': ['SELF', 'spark_cores_max']}, 'spark_mesos_executor_cores': {'get_property': ['SELF', 'spark_executor_cores']}, 'spark_mesos_executor_memory': {'get_property': ['SELF', 'spark_executor_mem']}, 'spark_mesos_driver_memory': {'get_property': ['SELF', 'spark_driver_mem']}, 'spark_mesos_driver_cores': {'get_property': ['SELF', 'spark_driver_cores']}}}}}, 'requirements': [{'host': {'capability': 'tosca.capabilities.indigo.MesosMaster', 'relationship': 'tosca.relationships.HostedOn', 'node': 'tosca.nodes.SoftwareComponent', 'occurrences': [1, 1]}}]}}",,145.0,0.0,0.0,111.0,0.0,197.0,5.11,0.0,0.0,1.0,0.0,0.0,0.0,16.0,0.0,0.0,0.0
1655,"{'org.alien4cloud.kubernetes.api.types.KubeConfigurableContainer': {'derived_from': 'org.alien4cloud.kubernetes.api.types.KubeContainer', 'description': 'A specification of a Kube Container that is configurable using configMaps.\n', 'properties': {'config_settings': {'type': 'list', 'required': False, 'entry_schema': {'type': 'org.alien4cloud.kubernetes.api.datatypes.internal.ConfigSetting'}}}}}",,9.0,0.0,0.0,9.0,0.0,24.0,4.5,0.0,0.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0
2110,"{'sodalite.nodes.Configuration': {'derived_from': 'tosca.nodes.SoftwareComponent', 'properties': {'dir': {'description': 'Dir with config file', 'type': 'string', 'required': True}, 'filename': {'description': 'Filename of target configuration', 'required': True, 'type': 'string'}, 'template_name': {'description': 'Filename of configuration template', 'required': True, 'type': 'string'}, 'permissions': {'description': 'File permissions', 'required': True, 'type': 'string', 'default': '0777'}}, 'attributes': {'config_file_path': {'description': 'Path to conf file on target VM', 'type': 'string'}}, 'interfaces': {'Standard': {'type': 'tosca.interfaces.node.lifecycle.Standard', 'operations': {'create': {'inputs': {'dir': {'type': 'string', 'default': {'get_property': ['SELF', 'dir']}}, 'filename': {'type': 'string', 'default': {'get_property': ['SELF', 'filename']}}, 'template_name': {'type': 'string', 'default': {'get_property': ['SELF', 'template_name']}}, 'permissions': {'type': 'string', 'default': {'get_property': ['SELF', 'permissions']}}}, 'implementation': {'primary': 'playbooks/create_conf.yml'}}, 'delete': {'inputs': {'dir': {'type': 'string', 'default': {'get_property': ['SELF', 'dir']}}, 'filename': {'type': 'string', 'default': {'get_property': ['SELF', 'filename']}}}, 'implementation': {'primary': 'playbooks/remove_conf.yml'}}}}}}}",,72.0,0.0,0.0,60.0,0.0,113.0,4.95,0.0,6.0,1.0,0.0,0.0,0.0,4.0,0.0,0.0,0.0
2152,"{'dcae.nodes.ExternalTargetFeed': {'derived_from': 'cloudify.dcae.nodes.Root', 'capabilities': {'feed': {'type': 'dcae.capabilities.dmmap.feed'}}, 'properties': {'url': {'type': 'string'}, 'username': {'type': 'string'}, 'userpw': {'type': 'string'}}}}",,12.0,0.0,0.0,12.0,0.0,17.0,3.34,0.0,0.0,0.0,0.0,0.0,0.0,3.0,0.0,0.0,0.0
337,"{'tosca.nodes.indigo.OneDataStorage': {'derived_from': 'tosca.nodes.BlockStorage', 'metadata': {'icon': '/images/onedata.png'}, 'properties': {'size': {'type': 'scalar-unit.size', 'required': False}, 'oneprovider_host': {'type': 'list', 'entry_schema': {'type': 'string'}, 'required': False}, 'onezone_endpoint': {'type': 'string', 'required': False}, 'dataspace': {'type': 'list', 'entry_schema': {'type': 'string'}, 'required': False}, 'credential': {'type': 'tosca.datatypes.Credential', 'required': True}}}}",,24.0,0.0,0.0,24.0,0.0,38.0,3.98,0.0,0.0,0.0,0.0,0.0,0.0,5.0,0.0,0.0,0.0
2040,"{'radon.nodes.nifi.Nifi': {'derived_from': 'tosca.nodes.SoftwareComponent', 'properties': {'component_version': {'description': 'The version of Apache Nifi', 'type': 'string', 'required': True}, 'port': {'description': 'The port exposed by Apache Nifi', 'required': True, 'type': 'string', 'default': 8080}}, 'capabilities': {'host': {'type': 'tosca.capabilities.Container'}}, 'interfaces': {'Standard': {'type': 'tosca.interfaces.node.lifecycle.Standard', 'operations': {'create': {'inputs': {'tarball_version': {'default': {'get_property': ['SELF', 'component_version']}}}, 'implementation': 'nodetypes/radon/nodes/nifi/nifiplatform/files/create.yml'}, 'start': {'implementation': 'nodetypes/radon/nodes/nifi/nifiplatform/files/start.yml'}, 'stop': {'implementation': 'nodetypes/radon/nodes/nifi/nifiplatform/files/stop.yml'}, 'delete': {'inputs': {'tarball_version': {'default': {'get_property': ['SELF', 'component_version']}}}, 'implementation': 'nodetypes/radon/nodes/nifi/nifiplatform/files/delete.yml'}, 'configure': {'inputs': {'tarball_version': {'default': {'get_property': ['SELF', 'component_version']}}}, 'implementation': 'nodetypes/radon/nodes/nifi/nifiplatform/files/configure.yml'}}}}}}",,47.0,0.0,0.0,41.0,0.0,71.0,5.15,0.0,3.0,1.0,0.0,0.0,0.0,2.0,0.0,0.0,0.0
1686,"{'tosca.nodes.Database.MySQL': {'derived_from': 'tosca.nodes.Database', 'requirements': [{'host': {'capability': 'tosca.capabilities.Container', 'relationship': 'tosca.relationships.HostedOn', 'node': 'tosca.nodes.DBMS.MySQL'}}], 'interfaces': {'Standard': {'create': {'implementation': 'https://raw.githubusercontent.com/indigo-dc/tosca-types/master/artifacts/mysql/mysql_db_configure.yml', 'inputs': {'db_password': {'get_property': ['SELF', 'password']}, 'db_name': {'get_property': ['SELF', 'name']}, 'db_user': {'get_property': ['SELF', 'user']}, 'db_root_password': '', 'db_access_host': '%'}}}}}}",,26.0,0.0,0.0,20.0,0.0,33.0,4.76,0.0,0.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
958,"{'tosca.nodes.DBMS.MongoDB': {'derived_from': 'tosca.nodes.DBMS', 'properties': {'dbms_port': {'description': 'reflect the default MongoDB server port (verify default value)', 'default': 27017}}, 'requirements': None, 'capabilities': [{'host': None, 'type': 'Container', 'properties': {'valid_node_types': ['tosca.nodes.Database.MongoDB']}}], 'interfaces': {'Standard': {'create': '#!/bin/bash\napt-get install -y mongodb\n', 'configure': {'description': 'configure is automatic for mongodb. No post config is needed.'}, 'start': '#!/bin/bash\nstart mongodb \n', 'stop': '#!/bin/bash\nstop mongodb\n', 'delete': '#!/bin/bash\napt-get purge -y mongodb\n'}}}}",,21.0,0.0,4.0,20.0,0.0,58.0,5.45,0.0,0.0,1.0,0.0,0.0,0.0,2.0,0.0,0.0,0.0
2167,"{'dcae.nodes.policies': {'derived_from': 'cloudify.dcae.nodes.Root', 'properties': {'policy_filter': {'type': 'map'}}, 'capabilities': {'policy': {'type': 'dcae.capabilities.policy'}}}}",,8.0,0.0,0.0,8.0,0.0,11.0,3.28,0.0,0.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0
2045,"{'radon.nodes.container_create': {'derived_from': 'tosca.nodes.SoftwareComponent', 'properties': {'container_in_name': {'type': 'string', 'description': 'The name of the incoming Azure container'}, 'container_out_name': {'type': 'string', 'description': 'The name of the Azure container with results'}, 'resource_group_name': {'type': 'string', 'description': 'Name of the resource group to use'}, 'storage_account_name': {'type': 'string', 'description': 'Name of the storage account to use'}, 'location': {'type': 'string', 'description': 'Resurce location'}}, 'attributes': {'container_in_name': {'type': 'string'}, 'container_out_name': {'type': 'string'}, 'resource_group_name': {'type': 'string'}, 'storage_account_name': {'type': 'string'}, 'location': {'type': 'string'}}, 'interfaces': {'Standard': {'type': 'tosca.interfaces.node.lifecycle.Standard', 'inputs': {'container_in_name': {'default': {'get_property': ['SELF', 'container_in_name']}, 'type': 'string'}, 'container_out_name': {'default': {'get_property': ['SELF', 'container_out_name']}, 'type': 'string'}, 'resource_group_name': {'default': {'get_property': ['SELF', 'resource_group_name']}, 'type': 'string'}, 'storage_account_name': {'default': {'get_property': ['SELF', 'storage_account_name']}, 'type': 'string'}, 'location': {'default': {'get_property': ['SELF', 'location']}, 'type': 'string'}}, 'operations': {'create': 'playbooks/create.yml'}}}}}",,,,,,,,,,,,,,,,,,
1501,"{'tosca.nodes.openstack.compute': {'derived_from': 'tosca.nodes.Compute', 'properties': {'use_connection_pool': {'type': 'boolean', 'default': False}, 'compute_api_version': {'type': 'string', 'default': '2', 'constraints': [{'valid_values': ['2']}]}, 'compute_name': {'type': 'string', 'required': False, 'description': 'An identifier that represents an existing Compte instance in the underlying cloud infrastructure or can be used as the name of the newly created compute. If compute_name is provided (with exception of compute_id), then an existing compute instance will be used. If compute_name is provided alongside with more properties then a new compute with this name will be created.\n'}, 'compute_id': {'type': 'string', 'required': False, 'description': 'An identifier that represents an existing Compute instance in the underlying cloud infrastructure. This property is mutually exclusive with all other properties except compute_name. This can be used alone or together with compute_name to identify an existing network.\n'}, 'availability_zone': {'type': 'string', 'required': False}, 'config_drive': {'type': 'boolean', 'default': True, 'required': False}}, 'capabilities': {'host': {'type': 'tosca.capabilities.openstack.flavor'}, 'binding': {'type': 'tosca.capabilities.network.Bindable'}, 'os': {'type': 'tosca.capabilities.OperatingSystem'}, 'scalable': {'type': 'tosca.capabilities.Scalable'}}, 'attributes': {'compute_id': {'type': 'string'}, 'networks': {'type': 'list'}, 'ports': {'type': 'map', 'entry_schema': {'type': 'tosca.datatypes.network.PortInfo'}}}, 'artifacts': {'image_ref': {'type': 'tosca.artifacts.openstack.image'}, 'userdata': {'type': 'tosca.artifacts.openstack.user_data'}}, 'interfaces': {'Standard': {'type': 'tosca.interfaces.node.lifecycle.Standard', 'create': {'implementation': 'openstack_plugin.tasks.compute:create', 'inputs': {'task_retries': 30, 'task_retry_interval': 10}}, 'start': {'implementation': 'openstack_plugin.tasks.compute:start', 'inputs': {'task_retries': 30, 'task_retry_interval': 10}}, 'stop': {'implementation': 'openstack_plugin.tasks.compute:stop', 'inputs': {'task_retries': 30, 'task_retry_interval': 10}}, 'delete': {'implementation': 'openstack_plugin.tasks.compute:delete', 'inputs': {'task_retries': 30, 'task_retry_interval': 10}}}}}}",,80.0,0.0,0.0,72.0,0.0,207.0,6.44,0.0,0.0,1.0,0.0,0.0,0.0,6.0,0.0,0.0,0.0
1215,"{'tosca.nodes.SoftwareComponent.Kibana': {'derived_from': 'tosca.nodes.SoftwareComponent', 'description': 'Kibana is an open source analytics and visualization platform designed to work with Elasticsearch. You use Kibana to search, view, and interact with data stored in Elasticsearch.', 'requirements': [{'search_endpoint': {'capability': 'tosca.capabilities.Endpoint', 'node': 'tosca.nodes.SoftwareComponent.Elasticsearch', 'relationship': 'tosca.relationships.ConnectsTo'}}]}}",,10.0,0.0,0.0,8.0,0.0,39.0,5.03,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
2682,"{'org.ystia.yorc.experimental.consul.pub.relationships.JoinConsulAgent': {'derived_from': 'tosca.relationships.ConnectsTo', 'description': 'Joins to a Consul agent\n', 'valid_target_types': ['org.alien4cloud.consul.pub.capabilities.ConsulAgent']}}",,5.0,0.0,0.0,4.0,0.0,11.0,3.46,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
702,"{'tosca.nodes.WebApplication': {'metadata': {'puccini.normative': 'true', 'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.0]', 'specification.location': '5.8.5'}, 'description': 'The TOSCA WebApplication node represents a software application that can be managed and run by a TOSCA WebServer node. Specific types of web applications such as Java, etc. could be derived from this type.', 'derived_from': 'tosca.nodes.Root', 'properties': {'context_root': {'description': ""The web application's context root which designates the application's URL path within the web server it is hosted on."", 'type': 'string', 'required': False}}, 'capabilities': {'app_endpoint': {'type': 'tosca.capabilities.Endpoint'}}, 'requirements': [{'host': {'capability': 'tosca.capabilities.Container', 'node': 'tosca.nodes.WebServer', 'relationship': 'tosca.relationships.HostedOn'}}]}}",,23.0,0.0,0.0,20.0,0.0,83.0,6.1,0.0,0.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0
2702,"{'org.ystia.slurm.ansible.relationships.SlurmDaemonConnectsTo': {'derived_from': 'tosca.relationships.ConnectsTo', 'interfaces': {'Configure': {'post_configure_source': {'inputs': {'CONTROLLER_HOST': {'get_attribute': ['TARGET', 'hostname']}, 'CLUSTER_NAME': {'get_property': ['TARGET', 'cluster_name']}}, 'implementation': 'playbooks/post_configure_daemon.yaml'}, 'add_source': {'inputs': {'hostname': {'get_attribute': ['SOURCE', 'hostname']}, 'sockets': {'get_attribute': ['SOURCE', 'sockets']}, 'cores_per_socket': {'get_attribute': ['SOURCE', 'cores_per_socket']}, 'threads_per_core': {'get_attribute': ['SOURCE', 'threads_per_core']}, 'real_memory': {'get_attribute': ['SOURCE', 'real_memory']}}, 'implementation': 'playbooks/add_source_daemon.yaml'}}}}}",,38.0,0.0,0.0,24.0,0.0,41.0,4.24,0.0,0.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
1148,"{'org.alien4cloud.test.nodes.envVarTestComponent': {'derived_from': 'tosca.nodes.SoftwareComponent', 'properties': {'name': {'type': 'string'}}}}",,5.0,0.0,0.0,5.0,0.0,7.0,2.81,0.0,0.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0
1149,"{'org.alien4cloud.test.TestComputeWithGetOperationOutput': {'derived_from': 'tosca.nodes.Compute', 'properties': {'customHostName': {'type': 'string'}}, 'attributes': {'old_hostname': {'get_operation_output': ['SELF', 'Standard', 'create', 'old_hostnane']}, 'new_hostname': {'get_operation_output': ['SELF', 'Standard', 'configure', 'new_hostnane']}}, 'interfaces': {'Standard': {'create': 'scripts/dummy.sh', 'configure': {'inputs': {'customHostName': {'get_property': ['SELF', 'customHostName']}, 'OUTPUT_FROM_CREATE': {'get_operation_output': ['SELF', 'Standard', 'create', 'output_from_create']}}, 'implementation': 'scripts/dummy.sh'}}}}}",,34.0,0.0,0.0,20.0,0.0,38.0,4.35,0.0,0.0,1.0,0.0,0.0,0.0,1.0,0.0,0.0,2.0
2778,"{'org.alien4cloud.relationships.AppHostedOnMarathon': {'derived_from': 'tosca.relationships.HostedOn', 'valid_target_types': ['org.alien4cloud.nodes.Marathon']}}",,4.0,0.0,0.0,3.0,0.0,5.0,2.32,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
1469,"{'yorc.nodes.slurm.Compute': {'derived_from': 'yorc.nodes.Compute', 'properties': {'gres': {'type': 'string', 'required': False, 'description': 'Specifies a comma delimited list of generic consumable resources. The format of each entry on the list is ""name[[:type]:count]"". The name is that of the consumable resource. The count is the number of those resources with a default value of 1. The specified resources will be allocated to the job on each node. The available generic consumable resources is configurable by the system administrator. Examples of use include ""--gres=gpu:2,mic=1"", ""--gres=gpu:kepler:2"", and ""--gres=help"".\n'}, 'constraint': {'type': 'string', 'required': False, 'description': 'Nodes can have features assigned to them by the Slurm administrator. Users can specify which of these features are required by their job using the constraint option. Only nodes having features matching the job constraints will be used to satisfy the request. Multiple constraints may be specified with AND, OR, matching OR, resource counts, etc. (some operators are not supported on all system types).\n'}, 'partition': {'type': 'string', 'required': False, 'description': 'Slurm partition where the nodes will be deployed'}, 'job_name': {'type': 'string', 'required': False, 'description': 'Specify a name for the job allocation. The specified name will appear along with the job id.'}, 'account': {'type': 'string', 'description': 'Charge resources used by this allocation to specified account. May be mandatory according to configuration.\n', 'required': False}, 'reservation': {'type': 'string', 'description': 'Allocate resources from the named reservation.\n', 'required': False}}, 'capabilities': {'endpoint': {'type': 'yorc.capabilities.slurm.Endpoint'}}, 'attributes': {'cuda_visible_devices': {'type': 'string', 'description': 'Coma separated list of visibles GPU devices for the compute.'}, 'job_id': {'type': 'string', 'description': 'The ID of the job allocation.'}, 'partition': {'type': 'string', 'description': 'Slurm partition where the nodes are deployed.'}}}}",,53.0,0.0,0.0,40.0,0.0,262.0,6.5,0.0,0.0,0.0,0.0,0.0,0.0,6.0,0.0,0.0,0.0
1462,{'yorc.nodes.kubernetes.api.types.SimpleResource': {'derived_from': 'org.alien4cloud.kubernetes.api.types.SimpleResource'}},,2.0,0.0,0.0,2.0,0.0,3.0,1.58,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
1767,{'cloudshell.nodes.Cisco IOS Switch': {'derived_from': 'cloudshell.nodes.resource'}},,2.0,0.0,0.0,2.0,0.0,3.0,2.32,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
358,"{'tosca.nodes.indigo.VR.CentralPoint': {'derived_from': 'tosca.nodes.SoftwareComponent', 'properties': {'indigovr_subnet': {'type': 'string', 'description': 'Cluster network', 'required': False, 'default': '192.168.0.0'}}, 'artifacts': {'indigovr_role': {'file': 'indigo-dc.indigovr,master', 'type': 'tosca.artifacts.AnsibleGalaxy.role'}}, 'capabilities': {'central_point': {'type': 'tosca.capabilities.Endpoint', 'valid_source_types': ['tosca.nodes.indigo.VR.Client', 'tosca.nodes.indigo.VR.VRouter']}}, 'interfaces': {'Standard': {'configure': {'implementation': 'https://raw.githubusercontent.com/indigo-dc/tosca-types/master/artifacts/indigovr/central_point_install.yml', 'inputs': {'INDIGOVR_SUBNET': {'get_property': ['SELF', 'indigovr_subnet']}}}}}}}",,27.0,0.0,0.0,23.0,0.0,37.0,5.03,0.0,0.0,1.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0
2644,"{'tosca.relationships.NodejsConnectToMongo': {'derived_from': 'tosca.relationships.ConnectsTo', 'description': 'Relationship use to connect nodejs with a mongodb databse', 'valid_target_types': ['tosca.capabilities.Endpoint.Database'], 'interfaces': {'Configure': {'pre_configure_source': {'inputs': {'DB_IP': {'get_attribute': ['TARGET', 'ip_address']}, 'DB_PORT': {'get_property': ['TARGET', 'port']}, 'NODECELLAR_PORT': {'get_property': ['SOURCE', 'port']}}, 'implementation': 'scripts/set-mongo-url.sh'}}}}}",,22.0,0.0,0.0,15.0,0.0,33.0,4.86,0.0,0.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,1.0
2071,"{'sodalite.data.mover.gridftp-client': {'description': 'GridFTP client\n', 'derived_from': 'tosca.nodes.SoftwareComponent', 'capabilities': {'client': {'type': 'tosca.capabilities.Root', 'valid_source_types': ['sodalite.data.mover.gridftp']}}, 'properties': {'cert_path': {'type': 'string', 'required': False, 'default': None, 'description': 'Location of certificates, where certificate artifacts (artifacts/certs) will be copied to\n'}, 'cert': {'type': 'string', 'required': False, 'default': 'usercert.pem'}, 'key': {'type': 'string', 'required': False, 'default': 'userkey.pem'}, 'certdir': {'type': 'string', 'required': False, 'default': 'certificates'}, 'initial_data_path': {'type': 'string', 'required': False, 'default': None, 'description': 'Location of initial data, where data artifacts (artifacts/data) will be copied to\n'}, 'hostnames': {'type': 'map', 'required': False, 'default': {}}, 'env': {'type': 'map', 'required': False, 'default': {}}}, 'interfaces': {'Standard': {'type': 'tosca.interfaces.node.lifecycle.Standard', 'operations': {'configure': {'inputs': {'cert_path': {'default': {'get_property': ['SELF', 'cert_path']}}, 'cert': {'default': {'get_property': ['SELF', 'cert']}}, 'key': {'default': {'get_property': ['SELF', 'key']}}, 'certdir': {'default': {'get_property': ['SELF', 'certdir']}}, 'initial_data_path': {'default': {'get_property': ['SELF', 'initial_data_path']}}, 'hostnames': {'default': {'get_property': ['SELF', 'hostnames']}}, 'env': {'default': {'get_property': ['SELF', 'env']}}, 'ansible_user': {'default': {'get_property': ['SELF', 'host', 'username']}}}, 'implementation': {'primary': 'playbooks/configure-gridftp-client.yml', 'dependencies': ['artifacts/certs', 'artifacts/data']}}}}}}}",,93.0,0.0,0.0,71.0,0.0,139.0,5.36,0.0,8.0,1.0,0.0,0.0,0.0,7.0,0.0,0.0,0.0
1075,"{'fastconnect.nodes.TomcatPuppet': {'abstract': False, 'description': 'A Tomcat application server implemented thanks to a Puppet install.\n', 'derived_from': 'fastconnect.nodes.Tomcat'}}",,4.0,0.0,0.0,4.0,0.0,16.0,4.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
1784,{'cloudshell.nodes.Traffic Generator Blade': {'derived_from': 'cloudshell.nodes.resource'}},,2.0,0.0,0.0,2.0,0.0,3.0,2.32,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
279,{'brooklyn.nodes.Compute': {'derived_from': 'tosca.nodes.Compute'}},,2.0,0.0,0.0,2.0,0.0,3.0,1.58,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
526,"{'org.alien4cloud.cloudify.patches.change_max_fd.nodes.ChangeMaxFd': {'derived_from': 'org.alien4cloud.cloudify.patches.pub.nodes.CloudifyPatch', 'description': 'Increase number of file descriptor for user cloudify.', 'properties': {'max_file': {'type': 'integer', 'required': True, 'default': 500000}}, 'interfaces': {'Standard': {'create': {'inputs': {'ANSIBLE_VERBOSE': False, 'PLAYBOOK_ENTRY': 'create.yml', 'max_file': {'get_property': ['SELF', 'max_file']}}, 'implementation': 'playbook/playbook.ansible'}}}}}",,19.0,0.0,0.0,17.0,0.0,34.0,4.95,0.0,0.0,1.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0
2050,"{'tosca.nodes.WebApplication': {'derived_from': 'tosca.nodes.Root', 'properties': {'context_root': {'type': 'string'}}, 'capabilities': {'app_endpoint': {'type': 'tosca.capabilities.Endpoint'}}, 'requirements': [{'host': {'capability': 'tosca.capabilities.Container', 'node': 'tosca.nodes.WebServer', 'relationship': 'tosca.relationships.HostedOn'}}]}}",,13.0,0.0,0.0,13.0,0.0,19.0,4.14,0.0,0.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0
904,"{'NodeSoftware': {'derived_from': 'tosker.nodes.Software', 'interfaces': {'my_interface': {'type': 'language_interface'}}}}",,5.0,0.0,0.0,5.0,0.0,7.0,2.81,0.0,0.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
1800,"{'tosca.nodes.Root': {'description': 'The TOSCA root node all other TOSCA base node types derive from.', 'attributes': {'tosca_id': {'type': 'string'}, 'tosca_name': {'type': 'string'}, 'state': {'type': 'string'}}, 'capabilities': {'feature': {'type': 'tosca.capabilities.Node'}}, 'requirements': [{'dependency': {'capability': 'tosca.capabilities.Node', 'node': 'tosca.nodes.Root', 'relationship': 'tosca.relationships.DependsOn', 'occurrences': [0, 'UNBOUNDED']}}], 'interfaces': {'Standard': {'type': 'tosca.interfaces.node.lifecycle.Standard'}}}}",,23.0,0.0,0.0,21.0,0.0,43.0,4.8,0.0,0.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
311,"{'tosca.nodes.indigo.TeskAPI': {'derived_from': 'tosca.nodes.WebServer', 'properties': {'auth_mode': {'type': 'string', 'description': 'Authentication mode', 'default': 'noauth', 'required': False}, 'mount_ftp': {'description': 'Flag used to specify that the ftp has to be enabled', 'type': 'boolean', 'required': False, 'default': True}, 'teskmaster_ftp_url': {'type': 'string', 'description': 'ftp url', 'default': 'ftp://ftp_url', 'required': False}, 'teskmaster_ftp_user': {'type': 'string', 'description': 'ftp username', 'default': 'user', 'required': False}, 'teskmaster_ftp_password': {'type': 'string', 'description': 'ftp password', 'default': 'password', 'required': False}}, 'requirements': [{'lrms': {'capability': 'tosca.capabilities.indigo.LRMS', 'node': 'tosca.nodes.indigo.LRMS.FrontEnd', 'relationship': 'tosca.relationships.HostedOn'}}], 'artifacts': {'galaxy_role': {'file': 'indigo-dc.tesk,master', 'type': 'tosca.artifacts.AnsibleGalaxy.role'}}, 'interfaces': {'Standard': {'configure': {'implementation': 'https://raw.githubusercontent.com/indigo-dc/tosca-types/master/artifacts/ga4gh_cloud_apis/tesk_install.yml', 'inputs': {'auth_mode': {'get_property': ['SELF', 'auth_mode']}, 'mount_ftp': {'get_property': ['SELF', 'mount_ftp']}, 'teskmaster_ftp_url': {'get_property': ['SELF', 'teskmaster_ftp_url']}, 'teskmaster_ftp_user': {'get_property': ['SELF', 'teskmaster_ftp_user']}, 'teskmaster_ftp_password': {'get_property': ['SELF', 'teskmaster_ftp_password']}}}}}}}",,62.0,0.0,0.0,52.0,0.0,103.0,5.43,0.0,0.0,1.0,0.0,0.0,0.0,5.0,0.0,0.0,0.0
447,"{'tosca.nodes.MiCADO.Compute': {'description': 'Base compute node for MiCADO', 'derived_from': 'tosca.nodes.Compute', 'properties': {'context': {'type': 'context_type', 'required': False}}, 'capabilities': {'host': {'type': 'tosca.capabilities.Compute'}, 'os': {'type': 'tosca.capabilities.OperatingSystem'}, 'scalable': {'type': 'tosca.capabilities.Scalable'}}}}",,14.0,0.0,0.0,14.0,0.0,25.0,4.32,0.0,0.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0
1377,"{'org.ystia.traefik.ansible-linux.nodes.TraefikRoute': {'derived_from': 'org.ystia.traefik.pub.nodes.TraefikRoute', 'requirements': [{'application': {'capability': 'tosca.capabilities.Endpoint', 'relationship': 'org.ystia.traefik.ansible-linux.relationships.TraefikRoutesTo', 'occurrences': [0, 'UNBOUNDED']}}], 'interfaces': {'Standard': {'configure': {'inputs': {'CONFIG_DIR': {'get_property': ['SELF', 'config_dir']}, 'RULES': {'get_property': ['SELF', 'rules']}, 'ENTRYPOINT_PROTOCOL': {'get_property': ['HOST', 'entrypoint', 'protocol']}}, 'implementation': 'playbooks/configure_route.yaml'}, 'stop': {'inputs': {'CONFIG_DIR': {'get_property': ['SELF', 'config_dir']}}, 'implementation': 'playbooks/remove_route.yaml'}}}}}",,34.0,0.0,0.0,23.0,0.0,39.0,4.75,0.0,0.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
2500,"{'radon.relationships.monitoring.GCPIsMonitoredBy': {'derived_from': 'tosca.relationships.ConnectsTo', 'metadata': {'targetNamespace': 'radon.relationships', 'abstract': 'false', 'final': 'false'}, 'interfaces': {'Configure': {'type': 'tosca.interfaces.relationship.Configure', 'inputs': {'user_email': {'type': 'string', 'required': True, 'default': {'get_property': ['TARGET', 'user_email']}}, 'monitored_function': {'type': 'string', 'required': True, 'default': {'get_property': ['SOURCE', 'name']}}, 'pushgateway_ip': {'type': 'string', 'required': True, 'default': {'get_attribute': ['TARGET', 'pushgateway_ip']}}, 'grafana_api_ip': {'type': 'string', 'required': True, 'default': {'get_property': ['TARGET', 'grafana_api_ip']}}, 'service_account_file': {'type': 'string', 'required': True, 'default': '/tmp/service_account.json'}}, 'operations': {'post_configure_source': {'implementation': {'primary': 'grafana-injection.yml', 'timeout': 30}}}}}}}",,47.0,0.0,0.0,39.0,0.0,65.0,4.8,0.0,5.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
355,"{'tosca.nodes.indigo.OnedataServiceSpace': {'derived_from': 'tosca.nodes.Root', 'attributes': {'space': {'type': 'string'}, 'path': {'type': 'string'}, 'selected_provider': {'type': 'string'}, 'token': {'type': 'string'}, 'onezone': {'type': 'string'}}, 'properties': {'smartScheduling': {'type': 'boolean', 'required': False, 'default': False}}}}",,18.0,0.0,0.0,18.0,0.0,27.0,3.68,0.0,0.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0
2186,"{'tosker.nodes.Volume': {'derived_from': 'tosker.nodes.Root', 'attributes': {'id': {'type': 'string'}, 'size': {'type': 'string'}}, 'properties': {'size': {'type': 'string', 'required': False}}, 'capabilities': {'attachment': {'type': 'tosca.capabilities.Attachment', 'valid_source_types': ['tosker.nodes.Container'], 'occurrences': [0, 'UNBOUNDED']}}}}",,19.0,0.0,0.0,16.0,0.0,25.0,4.05,0.0,0.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0
2293,"{'tosca.nodes.indigo.MesosSlaveCms': {'derived_from': 'tosca.nodes.indigo.MesosSlave', 'properties': {'mysquid_host': {'type': 'string', 'required': True}, 'proxycache_host': {'type': 'string', 'required': True}}, 'artifacts': {'cms_config_role': {'file': 'indigo-dc.cms_config', 'type': 'tosca.artifacts.AnsibleGalaxy.role'}}, 'interfaces': {'Standard': {'create': {'implementation': 'https://raw.githubusercontent.com/indigo-dc/tosca-types/master/artifacts/mesos/cms_mesos_slave_install.yml', 'inputs': {'mesos_master_ips': {'get_property': ['SELF', 'master_ips']}, 'consul_server_ips': {'get_property': ['SELF', 'master_ips']}, 'mesos_masters_list_ips': {'get_property': ['SELF', 'master_ips']}, 'mysquid_ip': {'get_property': ['SELF', 'mysquid_host']}, 'proxycache_ip': {'get_property': ['SELF', 'proxycache_host']}}}}}}}",,38.0,0.0,0.0,28.0,0.0,46.0,4.59,0.0,0.0,1.0,0.0,0.0,0.0,2.0,0.0,0.0,0.0
1643,"{'org.alien4cloud.kubernetes.api.types.AbstractController': {'abstract': True, 'derived_from': 'org.alien4cloud.kubernetes.api.types.Base', 'capabilities': {'host': 'tosca.capabilities.Container.Docker', 'scalable': 'tosca.capabilities.Scalable'}, 'properties': {'spec': {'type': 'org.alien4cloud.kubernetes.api.datatypes.ControllerSpec'}}}}",,9.0,0.0,0.0,9.0,0.0,14.0,3.81,0.0,0.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0
2454,"{'tosca.relationships.nfv.VirtualBindsTo': {'metadata': {'puccini.normative': 'true', 'specification.citation': '[TOSCA-Simple-Profile-NFV-v1.0-csd04]', 'specification.location': '5.7.1'}, 'description': 'This relationship type represents an association relationship between VDU and CP node types.', 'derived_from': 'tosca.relationships.DependsOn', 'valid_target_types': ['tosca.capabilities.nfv.VirtualBindable']}}",,10.0,0.0,0.0,8.0,0.0,26.0,4.62,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
1204,"{'tosca.nodes.DatabaseWithListParam': {'derived_from': 'tosca.nodes.Database', 'properties': {'list_prop': {'type': 'list', 'entry_schema': 'integer'}}}}",,6.0,0.0,0.0,6.0,0.0,9.0,3.17,0.0,0.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0
11,"{'tosca.nodes.mec.CP': {'derived_from': 'tosca.nodes.network.Port', 'properties': {'type': {'type': 'string', 'required': False}}, 'requirements': [{'virtualLink': {'capability': 'tosca.capabilities.mec.VirtualLinkable', 'relationship': 'tosca.relationships.mec.VirtualLinksTo', 'node': 'tosca.nodes.mec.VL'}}, {'virtualBinding': {'capability': 'tosca.capabilities.mec.VirtualBindable', 'relationship': 'tosca.relationships.mec.VirtualBindsTo', 'node': 'tosca.nodes.mec.VDU'}}], 'attributes': {'address': {'type': 'string'}}}}",,18.0,0.0,0.0,18.0,0.0,28.0,4.35,0.0,0.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0
88,"{'tosca.nodes.WebApplication.WordPress': {'derived_from': 'tosca.nodes.WebApplication', 'requirements': [{'database_endpoint': {'capability': 'tosca.capabilities.Endpoint.Database', 'node': 'tosca.nodes.Database', 'relationship': 'tosca.relationships.ConnectsTo'}}], 'interfaces': {'Standard': {'inputs': {'wp_db_name': {'type': 'string'}, 'wp_db_user': {'type': 'string'}, 'wp_db_password': {'type': 'string'}}}}}}",,16.0,0.0,0.0,16.0,0.0,23.0,4.11,0.0,3.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
690,"{'tosca.nodes.Database': {'metadata': {'puccini.normative': 'true', 'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.1]', 'specification.location': '5.9.7'}, 'description': 'The TOSCA Database node represents a logical database that can be managed and hosted by a TOSCA DBMS node.', 'derived_from': 'tosca.nodes.Root', 'properties': {'name': {'description': 'The logical database Name.', 'type': 'string'}, 'port': {'description': 'The port the database service will use to listen for incoming data and requests.', 'type': 'integer', 'required': False}, 'user': {'description': 'The special user account used for database administration.', 'type': 'string', 'required': False}, 'password': {'description': ""The password associated with the user account provided in the 'user' property."", 'type': 'string', 'required': False}}, 'capabilities': {'database_endpoint': {'type': 'tosca.capabilities.Endpoint.Database'}}, 'requirements': [{'host': {'capability': 'tosca.capabilities.Container', 'node': 'tosca.nodes.DBMS', 'relationship': 'tosca.relationships.HostedOn'}}]}}",,34.0,0.0,0.0,31.0,0.0,103.0,5.87,0.0,0.0,0.0,0.0,0.0,0.0,4.0,0.0,0.0,0.0
1864,"{'aria.openstack.nodes.KeyPair': {'derived_from': 'tosca.nodes.Root', 'properties': {'keypair': {'default': {}, 'type': 'aria.openstack.datatypes.Keypair', 'required': False, 'description': 'the path (on the machine the plugin is running on) to where the private key should be stored. If use_external_resource is set to ""true"", the existing private key is expected to be at this path.'}, 'private_key_path': {'description': 'the path (on the machine the plugin is running on) to where the private key should be stored. If use_external_resource is set to ""true"", the existing private key is expected to be at this path.\n', 'type': 'string'}, 'use_external_resource': {'type': 'boolean', 'default': False, 'description': 'a boolean describing whether this resource should be created or rather that it already exists on Openstack and should be used as-is.'}, 'create_if_missing': {'default': False, 'type': 'boolean', 'description': 'If use_external_resource is ``true`` and the resource is missing, create it instead of failing.'}, 'resource_id': {'default': '', 'type': 'string', 'description': 'the name that will be given to the resource on Openstack (excluding optional prefix). If not provided, a default name will be given instead. If use_external_resource is set to ""true"", this exact value (without any prefixes applied) will be looked for as either the name or id of an existing keypair to be used.'}, 'openstack_config': {'type': 'aria.openstack.datatypes.Config', 'required': False}}, 'interfaces': {'Standard': {'create': {'implementation': 'cloudify-openstack-plugin > nova_plugin.keypair.create', 'inputs': {'args': {'required': False, 'default': {}, 'type': 'aria.openstack.datatypes.Keypair'}}}, 'delete': 'cloudify-openstack-plugin > nova_plugin.keypair.delete'}, 'Validation': {'type': 'aria.openstack.interfaces.validation', 'creation': 'cloudify-openstack-plugin > nova_plugin.keypair.creation_validation'}}, 'capabilities': {'keypair': {'type': 'tosca.capabilities.Node'}}}}",,52.0,0.0,0.0,42.0,0.0,227.0,6.23,0.0,0.0,2.0,0.0,0.0,0.0,6.0,0.0,0.0,0.0
392,"{'Router': {'derived_from': 'NetworkFunction', 'capabilities': {'route': 'Routable'}}}",,4.0,0.0,0.0,4.0,0.0,6.0,2.58,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
1047,"{'alien.types.test.error.MyType': {'derived_from': 'tosca.nodes.Root', 'capabilities': {'feature': {'type': 'tosca.capabilities.Unknown'}}}}",,5.0,0.0,0.0,5.0,0.0,7.0,2.81,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
2288,"{'tosca.nodes.indigo.LRMS.FrontEnd.Mesos': {'derived_from': 'tosca.nodes.indigo.LRMS.FrontEnd', 'capabilities': {'lrms': {'type': 'tosca.capabilities.indigo.LRMS.Mesos'}}, 'properties': {'mesos_masters_list': {'type': 'string', 'required': False, 'default': 'localhost'}, 'marathon_enable_ssl': {'type': 'boolean', 'required': False, 'default': True}, 'marathon_username': {'type': 'string', 'required': False, 'default': 'admin'}, 'marathon_password': {'type': 'string', 'required': True}, 'chronos_enable_ssl': {'type': 'boolean', 'required': False, 'default': True}, 'chronos_username': {'type': 'string', 'required': False, 'default': 'admin'}, 'chronos_password': {'type': 'string', 'required': True}}, 'artifacts': {'docker_agent_role': {'file': 'indigo-dc.docker', 'type': 'tosca.artifacts.AnsibleGalaxy.role'}, 'consul_agent_role': {'file': 'indigo-dc.consul', 'type': 'tosca.artifacts.AnsibleGalaxy.role'}, 'zookeeper_agent_role': {'file': 'indigo-dc.zookeeper', 'type': 'tosca.artifacts.AnsibleGalaxy.role'}, 'mesos_agent_role': {'file': 'indigo-dc.mesos', 'type': 'tosca.artifacts.AnsibleGalaxy.role'}, 'marathon_agent_role': {'file': 'indigo-dc.marathon', 'type': 'tosca.artifacts.AnsibleGalaxy.role'}, 'chronos_agent_role': {'file': 'indigo-dc.chronos', 'type': 'tosca.artifacts.AnsibleGalaxy.role'}}, 'interfaces': {'Standard': {'configure': {'implementation': 'https://raw.githubusercontent.com/indigo-dc/tosca-types/master/artifacts/mesos/mesos_master_install.yml', 'inputs': {'mesos_masters_list_ips': {'get_attribute': ['HOST', 'public_address']}, 'marathon_enable_ssl': {'get_property': ['SELF', 'marathon_enable_ssl']}, 'marathon_user': {'get_property': ['SELF', 'marathon_username']}, 'marathon_pass': {'get_property': ['SELF', 'marathon_password']}, 'chronos_enable_ssl': {'get_property': ['SELF', 'chronos_enable_ssl']}, 'chronos_user': {'get_property': ['SELF', 'chronos_username']}, 'chronos_pass': {'get_property': ['SELF', 'chronos_password']}}}}}}}",,84.0,0.0,0.0,70.0,0.0,118.0,5.19,0.0,0.0,1.0,0.0,0.0,0.0,7.0,0.0,0.0,0.0
275,"{'org.apache.brooklyn.entity.webapp.tomcat.TomcatServer': {'derived_from': 'tosca.nodes.Root', 'description': 'A simple Tomcat server\n', 'properties': {'http.port': {'type': 'list', 'required': False, 'entry_schema': {'type': 'string'}}, 'java.sysprops': {'type': 'map', 'required': False, 'entry_schema': {'type': 'string'}}}, 'artifacts': [{'wars.root': None, 'type': 'tosca.artifacts.File'}]}}",,17.0,0.0,0.0,17.0,0.0,30.0,4.25,0.0,0.0,0.0,0.0,0.0,0.0,2.0,0.0,0.0,0.0
1446,{'yorc.nodes.openstack.Network': {'derived_from': 'tosca.nodes.Network'}},,2.0,0.0,0.0,2.0,0.0,3.0,1.58,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
1286,"{'org.ystia.kafka.linux.bash.nodes.KafkaTopic': {'derived_from': 'org.ystia.nodes.Root', 'description': 'Kafka topic implementation for linux', 'tags': {'icon': '/images/kafka-topic-icon.png'}, 'properties': {'topic_name': {'type': 'string', 'description': 'Name of this topic', 'required': True, 'constraints': [{'pattern': '[-_A-Za-z0-9]+'}]}, 'partitions': {'type': 'integer', 'description': 'Number of partitions. default is 1 partition.', 'required': False, 'default': 1}, 'replicas': {'type': 'integer', 'description': 'Number of replicas. default is 1 replica.', 'required': False, 'default': 1}, 'min_insync_replicas': {'description': 'When a producer sets request_required_acks to in_syncs, min_insync_replicas specifies the minimum number of replicas that must acknowledge a write for the write to be considered successful. If this minimum cannot be met, then the producer will raise an exception (either NotEnoughReplicas or NotEnoughReplicasAfterAppend). When used together, min_insync_replicas and request_required_acks allow you to enforce greater durability guarantees. A typical scenario would be to create a topic with a replication factor of 3, set min_insync_replicas to 2, and produce with request_required_acks of in_syncs. This will ensure that the producer raises an exception if a majority of replicas do not receive a write.\n', 'type': 'integer', 'required': False, 'default': 1, 'constraints': [{'greater_or_equal': 0}]}, 'retention_minutes': {'description': 'The number of minutes to keep a log file before deleting it. Default value is 7 days.\n', 'type': 'integer', 'required': False, 'default': 10080, 'constraints': [{'greater_or_equal': 1}]}, 'segment_minutes': {'description': ""This configuration controls the period of time after which Kafka will force the log to roll even if the segment file isn't full to ensure that retention can delete or compact old data. Default value is 7 days.\n"", 'type': 'integer', 'required': False, 'default': 10080, 'constraints': [{'greater_or_equal': 1}]}, 'segment_bytes': {'description': 'Segment file size for the log. Default value is 1GB.\n', 'type': 'integer', 'required': False, 'default': 1073741824, 'constraints': [{'greater_or_equal': 1024}]}}, 'capabilities': {'kafka_topic': 'org.ystia.kafka.pub.capabilities.KafkaTopic', 'spark_app_resource': 'org.ystia.kafka.pub.capabilities.SparkEndpoint'}, 'requirements': [{'host': {'capability': 'org.ystia.kafka.pub.capabilities.KafkaHosting', 'relationship': 'org.ystia.kafka.linux.bash.relationships.HostedOnKafka', 'occurrences': [1, 1]}}], 'interfaces': {'Standard': {'create': {'inputs': {'TOPIC_NAME': {'get_property': ['SELF', 'topic_name']}, 'PARTITIONS': {'get_property': ['SELF', 'partitions']}, 'REPLICAS': {'get_property': ['SELF', 'replicas']}, 'MIN_INSYNC_REPLICAS': {'get_property': ['SELF', 'min_insync_replicas']}, 'RETENTION_MINUTES': {'get_property': ['SELF', 'retention_minutes']}, 'SEGMENT_BYTES': {'get_property': ['SELF', 'segment_bytes']}, 'SEGMENT_MINUTES': {'get_property': ['SELF', 'segment_minutes']}}, 'implementation': 'scripts/createKafkaTopic.sh'}}}, 'artifacts': [{'scripts': {'file': 'scripts', 'type': 'tosca.artifacts.File'}}]}}",,109.0,1.0,0.0,81.0,0.0,319.0,6.95,0.0,0.0,1.0,0.0,0.0,0.0,7.0,0.0,0.0,1.0
1726,"{'onap.vcpe_vbrgemu': {'derived_from': 'tosca.nodes.nfv.VNF', 'properties': {'descriptor_id': {'type': 'string', 'constraints': [{'valid_values': ['b1bb0ce7-4444-4fa7-95ed-4840d70a1177']}], 'default': 'b1bb0ce7-4444-4fa7-95ed-4840d70a1177'}, 'provider': {'type': 'string', 'constraints': [{'valid_values': ['onap']}], 'default': 'onap'}, 'product_name': {'type': 'string', 'constraints': [{'valid_values': ['vcpe_vbrgemu']}], 'default': 'vcpe_vbrgemu'}, 'software_version': {'type': 'string', 'constraints': [{'valid_values': ['1.0']}], 'default': '1.0'}, 'descriptor_version': {'type': 'string', 'constraints': [{'valid_values': ['1.0']}], 'default': '1.0'}, 'flavour_id': {'type': 'string', 'constraints': [{'valid_values': ['simple']}], 'default': 'simple'}, 'flavour_description': {'type': 'string', 'default': 'simple'}, 'vnfm_info': {'type': 'list', 'entry_schema': {'type': 'string'}, 'default': ['gvnfm']}}}}",,48.0,0.0,0.0,41.0,0.0,65.0,4.08,0.0,0.0,0.0,0.0,0.0,0.0,8.0,0.0,0.0,0.0
1897,"{'org.tmforum.igxxxx.nodes.ModularRouter': {'derived_from': 'tosca.nodes.org.tmforum.models.sidmodels.ResourceDomain.ResourceABE.CompoundResourceABE.CompoundResource', 'properties': {'property1': {'type': 'string'}, 'property2': {'type': 'integer'}}, 'attributes': {'attribute1': {'type': 'float'}, 'attribute2': {'type': 'boolean'}}, 'requirements': [{'router_software': {'capability': 'tosca.capabilities.Root', 'node': 'org.tmforum.igxxxx.nodes.RouterSoftware', 'relationship': 'DependsOn'}}, {'chassis': {'capability': 'tosca.capabilities.Root', 'node': 'org.tmforum.igxxxx.nodes.chassis', 'relationship': 'DependsOn'}}]}}",,21.0,0.0,0.0,21.0,0.0,32.0,4.44,0.0,0.0,0.0,0.0,0.0,0.0,2.0,0.0,0.0,0.0
2403,"{'org.alien4cloud.monitoring.diamond.collectors.relationships.DiamondPostgresqlCollector': {'derived_from': 'tosca.relationships.ConnectsTo', 'valid_target_types': ['org.alien4cloud.db.postgresql.pub.PostgresqlEndpoint'], 'interfaces': {'Configure': {'pre_configure_source': {'inputs': {'ANSIBLE_VERBOSE': False, 'PLAYBOOK_ENTRY': 'collect_postgresql.yml', 'datasource_name': {'get_attribute': ['SOURCE', 'datasource_name']}, 'collectors_conf_path': {'get_attribute': ['SOURCE', 'collectors_conf_path']}, 'dashboard_dir': {'get_attribute': ['SOURCE', 'dashboard_dir']}, 'postgresql_port': {'get_attribute': ['TARGET', 'postgresql', 'port']}, 'postgresql_user': {'get_attribute': ['TARGET', 'postgresql', 'user']}, 'postgresql_password': {'get_attribute': ['TARGET', 'postgresql', 'password']}}, 'implementation': 'playbook/playbook.ansible'}}}}}",,38.0,0.0,0.0,22.0,0.0,42.0,4.54,0.0,0.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
1780,{'cloudshell.nodes.MX960': {'derived_from': 'cloudshell.nodes.resource'}},,2.0,0.0,0.0,2.0,0.0,3.0,1.58,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
398,"{'tosca.nodes.WebServer.Nodejs': {'description': 'The TOSCA WebServer.NodeJS node type is a non-normative type that represents NodeJS Web Server software.', 'derived_from': 'tosca.nodes.WebServer', 'properties': {'github_url': {'required': False, 'type': 'string', 'description': 'Location of the the desired implementation in the Github repository.', 'default': 'https://github.com/mmm/testnode.git'}}, 'interfaces': {'Standard': {'inputs': {'github_url': {'type': 'string'}}}}}}",,15.0,0.0,0.0,14.0,0.0,44.0,5.03,0.0,1.0,1.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0
2042,"{'radon.nodes.nifi.NifiPlatform': {'derived_from': 'tosca.nodes.SoftwareComponent', 'properties': {'version': {'type': 'string', 'description': 'the version of Nifi to be'}}, 'requirements': [{'host': {'capability': 'tosca.capabilities.Compute', 'relationship': 'tosca.relationships.HostedOn'}}], 'capabilities': {'host': {'type': 'tosca.capabilities.Container'}}, 'interfaces': {'Standard': {'type': 'tosca.interfaces.node.lifecycle.Standard', 'create': {'inputs': {'tarball_version': {'default': {'get_property': ['SELF', 'version']}}}, 'implementation': 'files/create.yml'}, 'start': {'implementation': 'files/start.yml'}, 'stop': {'implementation': 'files/stop.yml'}, 'configure': {'implementation': 'files/configure.yml'}, 'delete': {'inputs': {'tarball_version': {'default': {'get_property': ['SELF', 'version']}}}, 'implementation': 'files/delete.yml'}}}}}",,38.0,0.0,0.0,34.0,0.0,55.0,5.12,0.0,0.0,1.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0
1016,"{'alien.test.nodes.TestComponent': {'derived_from': 'tosca.nodes.SoftwareComponent', 'properties': {'toBeDeleted': {'type': 'string', 'default': 'deleteMe'}}}}",,6.0,0.0,0.0,6.0,0.0,9.0,3.17,0.0,0.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0
2171,"{'tosca.nodes.WebServer.Apache': {'derived_from': 'tosca.nodes.WebServer', 'description': 'The TOSCA Apache Node Type represents an apache component that can be managed and run by a TOSCA Compute Node Type.\n', 'capabilities': {'host': {'type': 'tosca.capabilities.Container'}}, 'requirements': [{'host': {'capability': 'tosca.capabilities.Container', 'node': 'tosca.nodes.Compute', 'relationship': 'tosca.relationships.HostedOn'}}], 'properties': {'port': {'type': 'integer', 'description': 'Port for the Apache server', 'default': 80, 'constraints': [{'greater_or_equal': 1}]}, 'document_root': {'type': 'string', 'default': '/var/www'}}, 'interfaces': {'Standard': {'type': 'tosca.interfaces.node.lifecycle.Standard', 'create': {'inputs': {'ip': 'string', 'port': 'integer', 'doc_root': 'string'}, 'implementation': 'string'}, 'start': 'string'}}}}",,32.0,0.0,0.0,31.0,0.0,73.0,5.67,0.0,0.0,1.0,0.0,0.0,0.0,2.0,0.0,0.0,0.0
1479,"{'org.ystia.yorc.samples.python.Component': {'derived_from': 'tosca.nodes.SoftwareComponent', 'description': 'Sample component to illustrate how to implement a Component lifecycle in Python\n', 'tags': {'icon': '/images/python.png'}, 'properties': {'user': {'description': 'name to whom say hello or goodbye in custom command', 'type': 'string', 'required': True, 'default': 'John Doe'}, 'hello_message': {'description': 'A simple message to print', 'type': 'string', 'required': True, 'default': 'Hello World!'}, 'outputVar1': {'description': 'Dummy property used to test operation outputs', 'type': 'string', 'required': True, 'default': 'ov1'}, 'outputVar2': {'description': 'Dummy property used to test operation outputs', 'type': 'string', 'required': True, 'default': 'ov2'}}, 'attributes': {'resolvedOutput1': {'get_operation_output': ['SELF', 'Standard', 'create', 'myVar1']}, 'resolvedOutput2': {'get_operation_output': ['SELF', 'Standard', 'create', 'myVar2']}}, 'interfaces': {'Standard': {'create': {'inputs': {'var1': {'get_property': ['SELF', 'outputVar1']}, 'var2': {'get_property': ['SELF', 'outputVar2']}}, 'implementation': 'scripts/create.py'}, 'start': {'inputs': {'msg': {'get_property': ['SELF', 'hello_message']}}, 'implementation': 'scripts/start.py'}}, 'custom': {'inputs': {'user': {'get_property': ['SELF', 'user']}}, 'say_hello': {'implementation': 'scripts/hello.py'}, 'say_goodbye': {'implementation': 'scripts/goodbye.py'}}}}}",,70.0,0.0,0.0,53.0,0.0,130.0,5.93,0.0,1.0,2.0,0.0,0.0,0.0,4.0,0.0,0.0,0.0
804,"{'yorc.nodes.kubernetes.api.types.StatefulSetResource': {'derived_from': 'org.alien4cloud.kubernetes.api.types.StatefulSetResource', 'attributes': {'replicas': {'type': 'integer', 'description': 'Current number of replicas for this deployment\n'}}, 'interfaces': {'org.alien4cloud.management.ClusterControl': {'scale': {'inputs': {'EXPECTED_INSTANCES': {'type': 'integer'}, 'INSTANCES_DELTA': {'type': 'integer'}}, 'implementation': {'file': 'embedded', 'type': 'yorc.artifacts.Deployment.Kubernetes'}}}, 'Standard': {'create': {'implementation': {'file': 'embedded', 'type': 'yorc.artifacts.Deployment.Kubernetes'}}, 'delete': {'implementation': {'file': 'embedded', 'type': 'yorc.artifacts.Deployment.Kubernetes'}}}}}}",,26.0,0.0,0.0,26.0,0.0,43.0,4.47,0.0,0.0,2.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
991,"{'tosca.nodes.Router': {'derived_from': 'tosca.nodes.Network', 'description': 'The TOSCA Network node represents a simple, logical network service.\n', 'tags': {'icon': '/images/router.png'}}}",,5.0,0.0,0.0,5.0,0.0,17.0,4.09,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
2640,"{'tosca.relationships.Root': {'description': 'The TOSCA root Relationship Type all other TOSCA base Relationship Types derive from', 'attributes': {'tosca_id': {'type': 'string', 'description': 'A unique identifier of the realized instance of a Relationship Template that derives from any TOSCA normative type.'}, 'tosca_name': {'type': 'string', 'description': 'This attribute reflects the name of the Relationship Template as defined in the TOSCA service template. This name is not unique to the realized instance model of corresponding deployed application as each template in the model can result in one or more instances (e.g., scaled) when orchestrated to a provider environment.\n'}, 'state': {'type': 'string', 'description': 'The state of the relationship instance.', 'default': 'initial'}}, 'interfaces': {'tosca.interfaces.relationship.Configure': {'description': 'The lifecycle interfaces define the essential, normative operations that each TOSCA Relationship Types may support.\n', 'pre_configure_source': {'description': 'Operation to pre-configure the source endpoint.'}, 'pre_configure_target': {'description': 'Operation to pre-configure the target endpoint.'}, 'post_configure_source': {'description': 'Operation to post-configure the source endpoint.'}, 'post_configure_target': {'description': 'Operation to post-configure the target endpoint.'}, 'add_target': {'description': 'Operation to notify the source node of a target node being added via a relationship.'}, 'add_source': {'description': 'Operation to notify the target node of a source node which is now available via a relationship.'}, 'remove_target': {'description': 'Operation to notify the source node of a target node being removed from a relationship.'}, 'remove_source': {'description': 'Operation to notify the target node of a source node being removed from a relationship.'}, 'target_changed': {'description': 'Operation to notify source some property or attribute of the target changed'}, 'source_changed': {'description': 'Operation to notify target some property or attribute of the source'}}}}}",,49.0,0.0,0.0,36.0,0.0,252.0,6.03,0.0,0.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
474,"{'tosca.nodes.MiCADO.Container.Application.Pod.Deployment': {'description': 'An abstraction of a generic Pod, creates a Deployment', 'derived_from': 'tosca.nodes.MiCADO.Container.Application.Pod', 'interfaces': {'Kubernetes': {'type': 'tosca.interfaces.MiCADO.Kubernetes', 'create': {'inputs': {'kind': 'Deployment', 'spec': {'strategy': {'type': 'Recreate'}}}}}}}}",,12.0,0.0,0.0,12.0,0.0,25.0,4.4,0.0,0.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
1802,"{'tosca.nodes.Database': {'derived_from': 'tosca.nodes.Root', 'properties': {'user': {'required': False, 'type': 'string', 'description': 'User account name for DB administration\n'}, 'password': {'required': False, 'type': 'string', 'description': 'The password for the DB user account\n'}, 'name': {'required': False, 'type': 'string', 'description': 'The name of the database.\n'}, 'port': {'type': 'integer', 'description': 'the port the underlying database service will listen to for data'}}, 'requirements': [{'host': {'capability': 'tosca.capabilities.Container', 'node': 'tosca.nodes.DBMS', 'relationship': 'tosca.relationships.HostedOn'}}], 'capabilities': {'database_endpoint': {'type': 'tosca.capabilities.Endpoint.Database'}}}}",,26.0,0.0,0.0,26.0,0.0,67.0,5.15,0.0,0.0,0.0,0.0,0.0,0.0,4.0,0.0,0.0,0.0
2817,"{'onap.multivim.server_connected_to_floating_ip': {'derived_from': 'ConnectsTo', 'interfaces': {'Configure': {'add_source': {'implementation': 'onap-multivim-plugin > nova_plugin.server.connect_floatingip', 'inputs': {'fixed_ip': {'description': 'The fixed IP to be associated with the floating IP. If omitted, Openstack will choose which port to associate.\n', 'type': 'string', 'default': ''}}}, 'remove_source': 'onap-multivim-plugin > nova_plugin.server.disconnect_floatingip'}}}}",,13.0,0.0,0.0,12.0,0.0,40.0,5.17,0.0,0.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
1928,"{'tosca.nodes.port_card.Acme.1111': {'derived_from': 'tosca.nodes.port_card', 'capabilities': {'PhysicalResourceSpecFurtherExtendedBy': {'properties': {'modelNumber': '1111', 'vendorName': 'Acme'}, 'attributes': None}}}}",,8.0,0.0,0.0,8.0,0.0,12.0,3.58,0.0,0.0,0.0,0.0,0.0,0.0,2.0,0.0,0.0,0.0
1354,"{'org.ystia.samples.hybrid-demo.cost-computing-dashboard.nodes.CostComputingJobDashboard': {'derived_from': 'org.ystia.kibana.linux.bash.nodes.KibanaDashboard', 'description': 'The dashboard element hosted on Kibana for the Apache log generator sample cost computing part', 'artifacts': [{'dashboard_file': {'file': 'dashboards/cost_computing_dashboard.json', 'type': 'org.ystia.kibana.pub.artifacts.Dashboard'}}]}}",,8.0,0.0,0.0,7.0,0.0,25.0,4.64,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
1723,"{'tosca.nodes.indigo.Kepler': {'derived_from': 'tosca.nodes.SoftwareComponent', 'artifacts': {'galaxy_role': {'file': 'indigo-dc.kepler', 'type': 'tosca.artifacts.AnsibleGalaxy.role'}}, 'interfaces': {'Standard': {'configure': {'implementation': 'https://raw.githubusercontent.com/indigo-dc/tosca-types/master/artifacts/kepler/kepler_install.yml'}}}}}",,10.0,0.0,0.0,10.0,0.0,14.0,3.81,0.0,0.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
536,"{'org.alien4cloud.graphite.linux_ans.nodes.Graphite': {'derived_from': 'org.alien4cloud.graphite.pub.nodes.GraphiteService', 'metadata': {'icon': '/images/graphite.png'}, 'description': 'Represente a Graphite Service\n', 'properties': {'component_version': {'type': 'version', 'default': '1.0.0', 'constraints': [{'valid_values': ['1.0.0']}]}}, 'capabilities': {'data_endpoint': {'type': 'org.alien4cloud.graphite.pub.capabilities.GraphiteDataEndpoint', 'occurrences': [0, 'UNBOUNDED'], 'description': 'Endpoint to stream metrics into graphite', 'properties': {'protocol': 'http', 'port': 2003}}, 'http_endpoint': {'type': 'org.alien4cloud.graphite.pub.capabilities.GraphiteHttpEndpoint', 'occurrences': [0, 'UNBOUNDED'], 'description': 'UI Endpoint to connect to graphite', 'properties': {'protocol': 'http', 'port': 8080}}}, 'attributes': {'graphite_url': {'concat': ['http://', {'get_attribute': ['SELF', 'public_ip_address']}, ':', {'get_property': ['SELF', 'http_endpoint', 'port']}]}}, 'requirements': [{'host': {'capability': 'tosca.capabilities.Container', 'node': 'tosca.nodes.Compute', 'relationship': 'tosca.relationships.HostedOn', 'occurrences': [1, 1], 'node_filter': {'capabilities': [{'tosca.capabilities.OperatingSystem': {'properties': [{'type': {'equal': 'linux'}}, {'architecture': {'equal': 'x86_64'}}, {'distribution': {'valid_values': ['red hat', 'centos', 'rhel']}}]}}]}}}], 'interfaces': {'Standard': {'create': {'inputs': {'ANSIBLE_VERBOSE': False, 'PLAYBOOK_ENTRY': 'create.yml', 'port_httpd': 8008}, 'implementation': 'playbook/playbook.ansible'}, 'start': {'inputs': {'ANSIBLE_VERBOSE': False, 'PLAYBOOK_ENTRY': 'start.yml'}, 'implementation': 'playbook/playbook.ansible'}, 'stop': {'inputs': {'ANSIBLE_VERBOSE': False, 'PLAYBOOK_ENTRY': 'stop.yml'}, 'implementation': 'playbook/playbook.ansible'}, 'delete': {'inputs': {'ANSIBLE_VERBOSE': False, 'PLAYBOOK_ENTRY': 'delete.yml'}, 'implementation': 'playbook/playbook.ansible'}}}}}",,87.0,0.0,0.0,70.0,0.0,132.0,6.22,0.0,0.0,1.0,0.0,0.0,0.0,8.0,0.0,0.0,0.0
1848,"{'db_match2': {'derived_from': 'seaclouds.nodes.Compute', 'attributes': {'num_cpus': 6, 'disk_size': '1 TB', 'scaling_vertical': 'auto', 'availability': 99.8}}}",,7.0,0.0,0.0,7.0,0.0,13.0,3.7,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
1010,"{'alien.test.Command': {'derived_from': 'tosca.nodes.Root', 'properties': {'customer': {'type': 'sample.datatypes.Citizen', 'default': {'first_name': 'Foo', 'last_name': 'Bar', 'address': {'zipcode': 92130, 'city_name': 'ISSY LES MOULES'}, 'emails': ['contact@fastconnect.fr', 'info@fastconnect.fr'], 'accounts': {'main': 'root', 'secondary': 'user'}}}}}}",,17.0,0.0,0.0,15.0,0.0,27.0,4.75,0.0,0.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0
810,"{'org.alien4cloud.nodes.Job': {'abstract': True, 'derived_from': 'tosca.nodes.Root', 'description': 'A job is a component that has a run operation.\n', 'interfaces': {'tosca.interfaces.node.lifecycle.Runnable': {'submit': {'description': 'Submit a job to an engine.'}, 'run': {'description': 'Monitor a submitted job for completion.'}, 'cancel': {'description': 'Cancel a submitted job.'}}}}}",,12.0,0.0,0.0,12.0,0.0,40.0,4.61,0.0,0.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
2146,"{'tosca.dcae.nodes.dmaap.feed': {'derived_from': 'tosca.dcae.nodes.Root', 'properties': {'location': {'type': 'string'}, 'node_name': {'type': 'string'}, 'feed_name': {'type': 'string'}}, 'capabilities': {'feed': {'type': 'dcae.capabilities.dmmap.feed'}}, 'requirements': [{'composition': {'capability': 'dcae.capabilities.composition.host'}}]}}",,15.0,0.0,0.0,15.0,0.0,21.0,3.78,0.0,0.0,0.0,0.0,0.0,0.0,3.0,0.0,0.0,0.0
992,"{'tosca.nodes.LoadBalancer': {'derived_from': 'tosca.nodes.Network', 'tags': {'icon': '/images/loadbalancer.png'}}}",,4.0,0.0,0.0,4.0,0.0,6.0,2.58,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
1730,"{'tosca.nodes.nfv.VduCp': {'derived_from': 'tosca.nodes.nfv.Cp', 'properties': {'bitrate_requirement': {'type': 'integer', 'required': False}, 'vnic_name': {'type': 'string', 'required': False}, 'vnic_order': {'type': 'integer', 'required': False}, 'vnic_type': {'type': 'string', 'constraints': [{'valid_values': ['normal', 'macvtap', 'direct', 'baremetal', 'direct-physical', 'virtio-forwarder']}], 'required': False}, 'virtual_network_interface_requirements': {'type': 'list', 'entry_schema': {'type': 'tosca.datatypes.nfv.VirtualNetworkInterfaceRequirements'}, 'required': False}}, 'requirements': [{'virtual_link': {'capability': 'tosca.capabilities.nfv.VirtualLinkable', 'relationship': 'tosca.relationships.nfv.VirtualLinksTo', 'node': 'tosca.nodes.nfv.VnfVirtualLink'}}, {'virtual_binding': {'capability': 'tosca.capabilities.nfv.VirtualBindable', 'relationship': 'tosca.relationships.nfv.VirtualBindsTo', 'node': 'tosca.nodes.nfv.Vdu.Compute'}}]}}",,37.0,0.0,0.0,31.0,0.0,55.0,4.9,0.0,0.0,0.0,0.0,0.0,0.0,5.0,0.0,0.0,0.0
323,"{'tosca.nodes.indigo.Container.Application.Docker': {'derived_from': 'tosca.nodes.Container.Application.Docker', 'properties': {'command': {'required': False, 'type': 'string'}, 'uris': {'required': False, 'type': 'list', 'entry_schema': {'type': 'string'}}, 'environment_variables': {'required': False, 'type': 'map', 'entry_schema': {'type': 'string'}}, 'constraints': {'required': False, 'type': 'list', 'entry_schema': {'type': 'list', 'entry_schema': {'type': 'string'}}}, 'secrets': {'required': False, 'type': 'map', 'entry_schema': {'type': 'string'}}, 'labels': {'required': False, 'type': 'map', 'entry_schema': {'type': 'string'}}, 'privileged': {'required': False, 'type': 'boolean', 'default': False}, 'force_pull_image': {'required': False, 'type': 'boolean', 'default': False}}}}",,41.0,0.0,0.0,41.0,0.0,66.0,3.7,0.0,0.0,0.0,0.0,0.0,0.0,8.0,0.0,0.0,0.0
476,"{'tosca.nodes.MiCADO.Container.Config.ConfigMap': {'description': 'base type for Config files', 'derived_from': 'tosca.nodes.MiCADO.Container.Config', 'properties': {'data': {'type': 'map', 'description': 'data', 'required': False}, 'binaryData': {'type': 'map', 'description': 'datab', 'required': False}}, 'capabilities': {'volume': {'type': 'tosca.capabilities.Attachment'}}, 'interfaces': {'Kubernetes': {'type': 'tosca.interfaces.MiCADO.Kubernetes', 'create': {'inputs': {'data': {'get_property': ['SELF', 'data']}, 'binaryData': {'get_property': ['SELF', 'binaryData']}}}}}}}",,28.0,0.0,0.0,24.0,0.0,42.0,4.46,0.0,0.0,1.0,0.0,0.0,0.0,2.0,0.0,0.0,0.0
1019,"{'tosca.nodes.Compute': {'properties': {'os_type': {'type': 'string', 'constraints': [{'valid_values': ['linux', 'aix', 'mac os', 'windows']}], 'description': 'The host Operating System (OS) type.'}, 'os_distribution': {'type': 'string', 'required': False, 'description': 'The host Operating System (OS) distribution.'}, 'os_version': {'type': 'string', 'required': False, 'description': 'The host Operating System version.'}, 'size': {'type': 'scalar-unit.size'}, 'size_good': {'type': 'scalar-unit.size'}}}}",,23.0,0.0,0.0,19.0,0.0,48.0,4.58,0.0,0.0,0.0,0.0,0.0,0.0,5.0,0.0,0.0,0.0
1588,"{'tosca.nodes.CloudProvider': {'derived_from': 'tosca.nodes.SoftwareComponent', 'properties': {'provider': {'description': 'Name of cloud provider', 'type': 'string', 'required': True, 'default': 'Azure'}, 'datacenter': {'description': 'Location of data center', 'type': 'string', 'required': True, 'default': 'West Europe'}}, 'capabilities': {'host': {'type': 'tosca.capabilities.Host.Compute'}}}}",,16.0,0.0,0.0,16.0,0.0,33.0,4.48,0.0,0.0,0.0,0.0,0.0,0.0,2.0,0.0,0.0,0.0
2267,"{'tosca.nodes.indigo.CmsWnConfig': {'derived_from': 'tosca.nodes.SoftwareComponent', 'properties': {'cms_local_site': {'type': 'string', 'required': True}, 'cms_stageoutsite': {'type': 'string', 'required': True}, 'cms_stageoutprotocol': {'type': 'string', 'required': True}, 'cms_phedexnode': {'type': 'string', 'required': True}, 'cms_stageoutcommand': {'type': 'string', 'required': True}, 'cms_fallback_phedexnode': {'type': 'string', 'required': False, 'default': 'T2_IT_myt2'}, 'cms_fallback_lfn_prefix': {'type': 'string', 'required': False, 'default': 'srm://t2-srm-02.lnl.infn.it:8443/srm/managerv2?SFN=xxxxxxx'}, 'cms_fallback_command': {'type': 'string', 'required': False, 'default': 'gfal2'}, 'cms_xrd_readserver': {'type': 'string', 'required': False, 'default': 'xrootd.ba.infn.it'}, 'cms_input_path': {'type': 'string', 'required': False, 'default': 'my/oneclient/path'}, 'cms_input_protocol': {'type': 'string', 'required': False, 'default': 'xrootd'}, 'mysquid_host': {'type': 'string', 'required': True}, 'proxycache_host': {'type': 'string', 'required': True}, 'monitordb_ip': {'type': 'string', 'required': False}, 'elasticsearch_secret': {'type': 'string', 'required': False}, 'cms_orchestrator': {'type': 'string', 'required': False, 'default': 'marathon'}}, 'artifacts': {'cms_config_role': {'file': 'indigo-dc.cms_config,v1.0.1-dodas-rc3', 'type': 'tosca.artifacts.AnsibleGalaxy.role'}}, 'interfaces': {'Standard': {'configure': {'implementation': 'https://raw.githubusercontent.com/indigo-dc/tosca-types/k8s/artifacts/mesos/cms_wn_configure.yml', 'inputs': {'cms_orchestrator': {'get_property': ['SELF', 'cms_orchestrator']}, 'cms_config_mysquid_host': {'get_property': ['SELF', 'mysquid_host']}, 'cms_config_proxycache_host': {'get_property': ['SELF', 'proxycache_host']}, 'cms_config_cms_local_site': {'get_property': ['SELF', 'cms_local_site']}, 'cms_config_stageoutsite': {'get_property': ['SELF', 'cms_stageoutsite']}, 'cms_config_stageoutprotocol': {'get_property': ['SELF', 'cms_stageoutprotocol']}, 'cms_config_stageoutcommand': {'get_property': ['SELF', 'cms_stageoutcommand']}, 'cms_config_phedexnode': {'get_property': ['SELF', 'cms_phedexnode']}, 'cms_config_fallback_phedexnode': {'get_property': ['SELF', 'cms_fallback_phedexnode']}, 'cms_config_fallback_lfn_prefix': {'get_property': ['SELF', 'cms_fallback_lfn_prefix']}, 'cms_config_fallback_command': {'get_property': ['SELF', 'cms_fallback_command']}, 'cms_xrd_readserver': {'get_property': ['SELF', 'cms_xrd_readserver']}, 'cms_input_path': {'get_property': ['SELF', 'cms_input_path']}, 'cms_input_protocol': {'get_property': ['SELF', 'cms_input_protocol']}, 'cms_config_elastic_secret': {'get_property': ['SELF', 'elasticsearch_secret']}, 'monitordb_ip': {'get_property': ['SELF', 'monitordb_ip']}}}}}, 'requirements': [{'host': {'capability': 'tosca.capabilities.indigo.MesosSlave', 'relationship': 'tosca.relationships.HostedOn', 'node': 'tosca.nodes.SoftwareComponent', 'occurrences': [1, 1]}}]}}",,139.0,0.0,0.0,105.0,0.0,185.0,5.14,0.0,0.0,1.0,0.0,0.0,0.0,16.0,0.0,0.0,0.0
808,"{'org.ystia.yorc.test.implem.AppAType': {'derived_from': 'org.ystia.yorc.test.pub.AppAType', 'description': 'Test Application A', 'properties': {'appA_propDInt': {'type': 'integer', 'description': 'Integer property', 'required': True, 'default': 2}}, 'attributes': {'web_ui_url': {'concat': ['http://', {'get_attribute': ['HOST', 'public_address']}, ':', {'get_property': ['SELF', 'consul_agent', 'api_port']}]}, 'join_address': {'get_attribute': ['HOST', 'private_address']}}, 'requirements': [{'appA_capB': {'capability': 'org.ystia.yorc.test.pub.AppACapBType', 'relationship': 'org.ystia.yorc.test.implem.AppAJoinAppARelType', 'occurrences': [0, 1]}}], 'interfaces': {'Standard': {'inputs': {'INSTALL_DIR': '/install'}, 'create': {'description': 'App A installation step', 'inputs': {'PROPA': {'get_property': ['SELF', 'appA_propABool']}}, 'implementation': 'test_playbook.yml'}, 'configure': {'inputs': {'PROPB': {'get_property': ['SELF', 'appA_propBString']}}, 'implementation': 'test_playbook.yml'}, 'start': {'implementation': 'test_playbook.yml'}, 'stop': {'implementation': 'test_playbook.yml'}, 'maintenance_on': {'inputs': {'MAINT_MODE': 'on'}, 'implementation': 'test_playbook.yml'}, 'maintenance_off': {'inputs': {'MAINT_MODE': 'off'}, 'implementation': 'test_playbook.yml'}}}}}",,63.0,0.0,0.0,48.0,0.0,87.0,5.7,0.0,1.0,1.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0
2139,"{'radon.nodes.function_deploy': {'derived_from': 'tosca.nodes.SoftwareComponent', 'properties': {'function_app_name': {'type': 'string', 'description': 'Name of the existing function application.'}, 'node_ip': {'type': 'string', 'description': 'IP of the target node'}, 'storage_account_name': {'type': 'string', 'description': 'Name of the storage account.'}, 'resource_group_name': {'type': 'string', 'description': 'Name of the resource group.'}, 'function_name': {'type': 'string', 'description': 'Name of the brand new Azure function'}, 'container_out_name': {'type': 'string', 'description': 'The name of the Azure container with results'}}, 'attributes': {'azure_connection_string': {'type': 'string'}, 'function_app_name': {'type': 'string'}, 'node_ip': {'type': 'string'}, 'storage_account_name': {'type': 'string'}, 'resource_group_name': {'type': 'string'}, 'function_name': {'type': 'string'}, 'container_out_name': {'type': 'string'}}, 'interfaces': {'Standard': {'type': 'tosca.interfaces.node.lifecycle.Standard', 'inputs': {'function_app_name': {'default': {'get_property': ['SELF', 'function_app_name']}, 'type': 'string'}, 'node_ip': {'default': {'get_property': ['SELF', 'node_ip']}, 'type': 'string'}, 'storage_account_name': {'default': {'get_property': ['SELF', 'storage_account_name']}, 'type': 'string'}, 'resource_group_name': {'default': {'get_property': ['SELF', 'resource_group_name']}, 'type': 'string'}, 'function_name': {'default': {'get_property': ['SELF', 'function_name']}, 'type': 'string'}, 'container_out_name': {'default': {'get_property': ['SELF', 'container_out_name']}, 'type': 'string'}}, 'operations': {'create': {'implementation': {'primary': 'playbooks/create.yml', 'dependencies': ['playbooks/functions']}}}}}, 'capabilities': {'connection_str': {'type': 'tosca.capabilities.Compute', 'valid_source_types': ['radon.nodes.aws_lambda_transfer']}}}}",,87.0,0.0,0.0,73.0,0.0,146.0,4.96,0.0,6.0,1.0,0.0,0.0,0.0,6.0,0.0,0.0,0.0
462,"{'tosca.nodes.MiCADO.EC2.Compute.Terra': {'description': 'Basic EC2 VM for MiCADO, by Terraform, on eu-west-2', 'derived_from': 'tosca.nodes.MiCADO.EC2.Compute', 'properties': {'region_name': {'type': 'string', 'default': 'eu-west-2', 'required': True}}, 'interfaces': {'Terraform': {'type': 'tosca.interfaces.MiCADO.Terraform', 'create': None}}}}",,12.0,0.0,0.0,12.0,0.0,27.0,4.61,0.0,0.0,1.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0
346,"{'tosca.nodes.indigo.OphidiaServer': {'derived_from': 'tosca.nodes.SoftwareComponent', 'metadata': {'icon': '/images/ophidia-server.png'}, 'properties': {'io_ips': {'type': 'list', 'entry_schema': {'type': 'string'}, 'description': 'List of IPs of the Ophidia IO nodes', 'required': False, 'default': []}}, 'artifacts': {'ophidia_role': {'file': 'indigo-dc.ophidia-cluster,master', 'type': 'tosca.artifacts.AnsibleGalaxy.role'}, 'slurm_role': {'file': 'indigo-dc.slurm,master', 'type': 'tosca.artifacts.AnsibleGalaxy.role'}, 'nfs_role': {'file': 'indigo-dc.nfs,master', 'type': 'tosca.artifacts.AnsibleGalaxy.role'}}, 'interfaces': {'Standard': {'configure': {'implementation': 'https://raw.githubusercontent.com/indigo-dc/tosca-types/master/artifacts/ophidia/ophidia_server_install.yml', 'inputs': {'ophidia_io_ips': {'get_property': ['SELF', 'io_ips']}}}}}}}",,31.0,0.0,0.0,29.0,0.0,51.0,5.18,0.0,0.0,1.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0
1031,{'org.alien4cloud.nodes.mock.BlockStorage': {'derived_from': 'tosca.nodes.BlockStorage'}},,2.0,0.0,0.0,2.0,0.0,3.0,1.58,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
1289,"{'org.ystia.flink.linux.bash.nodes.TaskManager': {'derived_from': 'org.ystia.consul.pub.nodes.ConsulUser', 'description': 'Flink TaskManager component for linux', 'tags': {'icon': '/images/flink-icon.png'}, 'properties': {'component_version': {'type': 'version', 'default': '1.1.3', 'description': 'Version of the installed Flink component', 'constraints': [{'valid_values': ['1.1.3', '1.1.4', '1.1.5', '1.2.1', '1.3.2']}]}, 'taskmanager_rpc_port': {'type': 'integer', 'description': 'The task manager’s IPC port (DEFAULT: 0, which lets the OS choose a free port).\n', 'default': 0, 'constraints': [{'equal': 0}]}, 'taskmanager_heap_mb': {'type': 'integer', 'description': 'JVM heap size (in megabytes) for the TaskManagers, which are the parallel workers of the system. This value should be as large as possible. If the cluster is exclusively running Flink, the total amount of available memory per machine minus some memory for the operating system (maybe 1-2 GB) is a good value.\n', 'default': '512'}, 'taskmanager_numberOfTaskSlots': {'type': 'integer', 'description': 'The number of parallel operator or user function instances that a single TaskManager can run. This value is typically proportional to the number of physical CPU cores that the TaskManager’s machine has (e.g., equal to the number of cores, or half the number of cores).\n', 'default': 1}, 'parallelism_default': {'type': 'integer', 'description': 'The default parallelism to use for programs that have no parallelism specified. For setups that have no concurrent jobs running, setting this value to NumTaskManagers * NumSlotsPerTaskManager will cause the system to use all available execution resources for the program’s execution.\n', 'default': 1}, 'taskmanager_tmp_dirs': {'type': 'string', 'description': 'Specifies a list of directories into which Flink writes temporary files when data doesn’t fit into main memory. The paths of the directories need to be separated by ‘:’ (colon character)\n', 'default': '/tmp'}, 'repository': {'type': 'string', 'default': 'http://archive.apache.org/dist/flink', 'description': 'This property give the opportunity to specify an alternative download repository for this component artifacts.  It is your responsibility to provide an accessible download url and to store required artifacts on it.  You should specify only the base repository url. Artifacts names will be appended to it, so this property could be shared among several components using the inputs feature.\n', 'required': False, 'constraints': [{'pattern': '^(http|https|ftp)://.+/.*$'}]}}, 'attributes': {'java_home': {'get_operation_output': ['SELF', 'Configure', 'pre_configure_source', 'JAVA_HOME']}}, 'requirements': [{'host': {'capability': 'org.ystia.java.pub.capabilities.JavaHosting', 'relationship': 'org.ystia.java.pub.relationships.HostedOnJavaRuntime', 'occurrences': [1, 1]}}, {'jobmanager_endpoint': {'capability': 'org.ystia.flink.pub.capabilities.JobManager', 'relationship': 'org.ystia.flink.linux.bash.relationships.TaskManagerToJobManager', 'occurrences': [1, 1]}}], 'interfaces': {'Standard': {'create': {'inputs': {'FLINK_REPO': {'get_property': ['SELF', 'repository']}, 'FLINK_VERSION': {'get_property': ['SELF', 'component_version']}}, 'implementation': 'scripts/flink_install.sh'}, 'configure': {'inputs': {'IP_ADDRESS': {'get_attribute': ['SELF', 'ip_address']}, 'TASKMANAGER_PORT': {'get_property': ['SELF', 'taskmanager_rpc_port']}, 'TASKMANAGER_MEM': {'get_property': ['SELF', 'taskmanager_heap_mb']}, 'TASKMANAGER_SLOTS': {'get_property': ['SELF', 'taskmanager_numberOfTaskSlots']}, 'PARALLELISM_DEFAULT': {'get_property': ['SELF', 'parallelism_default']}, 'TASKMANAGER_TMP_DIRS': {'get_property': ['SELF', 'taskmanager_tmp_dirs']}, 'JAVA_HOME': {'get_attribute': ['SELF', 'java_home']}}, 'implementation': 'scripts/flink_tm_configure.sh'}, 'start': {'implementation': 'scripts/flink_tm_start.sh'}, 'stop': {'implementation': 'scripts/flink_stop.sh'}}}, 'artifacts': [{'scripts': {'file': 'scripts', 'type': 'tosca.artifacts.File'}}]}}",,137.0,0.0,0.0,87.0,0.0,403.0,7.46,0.0,0.0,1.0,0.0,0.0,0.0,7.0,0.0,0.0,4.0
2654,"{'org.ystia.yorc.alien4cloud.relationships.ConnectsToYorc': {'derived_from': 'tosca.relationships.ConnectsTo', 'valid_target_types': ['org.ystia.yorc.pub.capabilities.YorcRestAPI'], 'interfaces': {'Configure': {'pre_configure_source': {'inputs': {'yorc_address_ha': {'get_property': ['SOURCE', 'yorc_address_ha']}, 'yorc_url_ha': {'concat': [{'get_property': ['TARGET', 'rest', 'protocol']}, '://', {'get_property': ['SOURCE', 'yorc_address_ha']}, ':', {'get_property': ['TARGET', 'rest', 'port']}]}, 'yorc_url': {'concat': [{'get_property': ['TARGET', 'rest', 'protocol']}, '://', {'get_attribute': ['TARGET', 'rest', 'ip_address']}, ':', {'get_property': ['TARGET', 'rest', 'port']}]}, 'ca_pem': {'get_property': ['TARGET', 'ca_pem']}, 'ca_key': {'get_property': ['TARGET', 'ca_key']}, 'ca_passphrase': {'get_property': ['TARGET', 'ca_passphrase']}}, 'implementation': 'playbook/connect_yorc.yml'}}}}}",,56.0,0.0,0.0,26.0,0.0,58.0,4.36,0.0,0.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
1153,"{'alien.test.Software': {'derived_from': 'tosca.nodes.SoftwareComponent', 'requirements': [{'host': {'capability': 'tosca.capabilities.Container', 'relationship': 'tosca.relationships.HostedOn', 'occurrences': [1, 1], 'node_filter': {'capabilities': [{'tosca.capabilities.OperatingSystem': {'properties': [{'type': {'equal': 'LINUX'}}, {'architecture': {'valid_values': ['X86_32', 'x86_64']}}]}}]}}}]}}",,19.0,0.0,0.0,15.0,0.0,23.0,4.44,0.0,0.0,0.0,0.0,0.0,0.0,2.0,0.0,0.0,0.0
2522,"{'tosca.relationships.ConnectsTo': {'metadata': {'puccini.normative': 'true', 'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.2]', 'specification.location': '5.7.4'}, 'description': 'This type represents a network connection relationship between two nodes.', 'derived_from': 'tosca.relationships.Root', 'valid_target_types': ['tosca.capabilities.Endpoint'], 'properties': {'credential': {'type': 'tosca.datatypes.Credential', 'required': False}}}}",,14.0,0.0,0.0,12.0,0.0,29.0,4.79,0.0,0.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0
748,"{'tosca.nodes.BlockStorage': {'metadata': {'puccini.normative': 'true', 'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.9.11'}, 'description': '', 'derived_from': 'tosca.nodes.Abstract.Storage', 'properties': {'volume_id': {'description': 'ID of an existing volume (that is in the accessible scope of the requesting application).', 'type': 'string', 'required': False}, 'snapshot_id': {'description': 'Some identifier that represents an existing snapshot that should be used when creating the block storage (volume).', 'type': 'string', 'required': False}}, 'capabilities': {'attachment': {'type': 'tosca.capabilities.Attachment'}}}}",,21.0,0.0,0.0,19.0,0.0,61.0,5.47,0.0,0.0,0.0,0.0,0.0,0.0,2.0,0.0,0.0,0.0
1584,"{'org.alien4cloud.diamond.pub.nodes.DiamondAgent': {'derived_from': 'tosca.nodes.SoftwareComponent', 'abstract': True, 'description': 'A Diamond Agent.', 'metadata': {'icon': '/images/diamond.png'}, 'capabilities': {'collector_container': {'type': 'org.alien4cloud.diamond.pub.capabilities.DiamondCollectorContainer', 'occurrences': [0, 'UNBOUNDED']}}}}",,12.0,0.0,0.0,10.0,0.0,19.0,4.25,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
1326,"{'org.ystia.ntp.pub.nodes.NtpServer': {'derived_from': 'tosca.nodes.SoftwareComponent', 'abstract': True, 'metadata': {'icon': '/images/ntp-icon.png'}, 'capabilities': {'ntp_endpoint': 'org.ystia.ntp.pub.capabilities.NtpEndpoint'}}}",,7.0,0.0,0.0,7.0,0.0,11.0,3.46,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
2766,{'aria.openstack.server_connected_to_keypair': {'derived_from': 'ConnectsTo'}},,2.0,0.0,0.0,2.0,0.0,3.0,1.58,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
2539,"{'tosca.relationships.AttachesTo': {'metadata': {'puccini.normative': 'true', 'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.3]', 'specification.location': '5.7.5'}, 'description': 'This type represents an attachment relationship between two nodes. For example, an AttachesTo relationship type would be used for attaching a storage node to a Compute node.', 'derived_from': 'tosca.relationships.Root', 'valid_target_types': ['tosca.capabilities.Attachment'], 'properties': {'location': {'description': 'The relative location (e.g., path on the file system), which provides the root location to address an attached node. e.g., a mount point / path such as \'/usr/data\'. Note: The user must provide it and it cannot be ""root"".', 'type': 'string', 'constraints': [{'min_length': 1}]}, 'device': {'description': ""The logical device name which for the attached device (which is represented by the target node in the model). e.g., '/dev/hda1'."", 'type': 'string', 'required': False}}, 'attributes': {'device': {'description': 'The logical name of the device as exposed to the instance. Note: A runtime property that gets set when the model gets instantiated by the orchestrator.', 'type': 'string'}}}}",,,,,,,,,,,,,,,,,,
1184,"{'tosca.nodes.SoftwareComponent.MyElasticsearch': {'derived_from': 'tosca.nodes.SoftwareComponent.Elasticsearch', 'capabilities': {'search_endpoint': {'type': 'tosca.capabilities.MyEndpoint'}}}}",,5.0,0.0,0.0,5.0,0.0,7.0,2.81,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
2263,"{'tosca.nodes.indigo.AmsCondorExecuteConfig': {'derived_from': 'tosca.nodes.SoftwareComponent', 'properties': {'marathon_username': {'type': 'string', 'required': True}, 'marathon_password': {'type': 'string', 'required': True}, 'htcondor_config_ccb_ip': {'type': 'string', 'required': True}, 'htcondor_config_schedd_ip': {'type': 'string', 'required': True}, 'proxycache_host': {'type': 'string', 'required': True}, 'config_proxycache_serviceport': {'type': 'string', 'required': True, 'default': '8080'}, 'htcondor_config_ccb_address': {'type': 'string', 'required': False}, 'htcondor_config_condor_host': {'type': 'string', 'required': False}, 'htcondor_config_condor_image': {'type': 'string', 'required': False}, 'master_ips': {'required': True, 'type': 'list', 'entry_schema': {'type': 'string'}}}, 'artifacts': {'ams_config_role': {'file': 'indigo-dc.ams_config,v1.0.0-dodas-pre1', 'type': 'tosca.artifacts.AnsibleGalaxy.role'}}, 'interfaces': {'Standard': {'start': {'implementation': 'https://raw.githubusercontent.com/indigo-dc/tosca-types/dodas_roll/artifacts/mesos/ams_execute_config.yaml', 'inputs': {'mesos_masters_list': {'get_property': ['SELF', 'master_ips']}, 'consul_servers': {'get_property': ['SELF', 'master_ips']}, 'zookeeper_host_list': {'get_property': ['SELF', 'master_ips']}, 'zookeeper_peers': {'get_property': ['SELF', 'master_ips']}, 'marathon_username': {'get_property': ['SELF', 'marathon_username']}, 'marathon_password': {'get_property': ['SELF', 'marathon_password']}, 'htcondor_config_ccb_ip': {'get_property': ['SELF', 'htcondor_config_ccb_ip']}, 'htcondor_config_schedd_ip': {'get_property': ['SELF', 'htcondor_config_schedd_ip']}, 'proxycache_host': {'get_property': ['SELF', 'proxycache_host']}, 'config_proxycache_serviceport': {'get_property': ['SELF', 'config_proxycache_serviceport']}, 'ccb_address': {'get_property': ['SELF', 'htcondor_config_ccb_address']}, 'condor_host': {'get_property': ['SELF', 'htcondor_config_condor_host']}, 'htcondor_config_condor_image': {'get_property': ['SELF', 'htcondor_config_condor_image']}}}}}, 'requirements': [{'host': {'capability': 'tosca.capabilities.indigo.MesosMaster', 'relationship': 'tosca.relationships.HostedOn', 'node': 'tosca.nodes.SoftwareComponent', 'occurrences': [1, 1]}}]}}",,105.0,0.0,0.0,77.0,0.0,134.0,4.95,0.0,0.0,1.0,0.0,0.0,0.0,10.0,0.0,0.0,0.0
1401,"{'radon.policies.createRole': {'derived_from': 'tosca.nodes.SoftwareComponent', 'properties': {'aws_region': {'type': 'string'}, 'role_name': {'type': 'string'}, 'role_description': {'type': 'string'}}, 'attributes': {'role_arn': {'type': 'string', 'description': 'AWS role arn identifier'}}, 'interfaces': {'Standard': {'type': 'tosca.interfaces.node.lifecycle.Standard', 'inputs': {'aws_region': {'default': {'get_property': ['SELF', 'aws_region']}, 'type': 'string'}, 'role_name': {'default': {'get_property': ['SELF', 'role_name']}, 'type': 'string'}, 'role_description': {'default': {'get_property': ['SELF', 'role_description']}, 'type': 'string'}}, 'operations': {'create': 'playbooks/aws_role/create.yml'}}}, 'capabilities': {'requires_role': {'type': 'tosca.capabilities.Compute', 'valid_source_types': ['radon.nodes.function.aws_lambda']}}}}",,,,,,,,,,,,,,,,,,
2574,"{'org.ystia.yorc.test.implem.JoinAppARelType': {'derived_from': 'tosca.relationships.ConnectsTo', 'description': 'Connects to an App A instance\n', 'valid_target_types': ['org.ystia.yorc.test.pub.AppACapAType'], 'interfaces': {'Configure': {'pre_configure_source': {'inputs': {'SERVER_IP': {'get_attribute': ['TARGET', 'private_address']}}, 'implementation': 'test_playbook.yml'}}}}}",,14.0,0.0,0.0,11.0,0.0,22.0,4.46,0.0,0.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
2624,"{'alien.test.relationships.DependsOnJVM': {'derived_from': 'tosca.relationships.DependsOn', 'properties': {'context': {'type': 'string', 'required': False}}}}",,6.0,0.0,0.0,6.0,0.0,9.0,3.17,0.0,0.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0
2723,"{'org.ystia.yorc.samples.relationships.noscheduler.DisplayResult': {'derived_from': 'tosca.relationships.DependsOn', 'interfaces': {'Configure': {'target_changed': {'inputs': {'DISPLAY_COMMAND_SPAWNED': {'get_attribute': ['TARGET', 'commandSpawned']}, 'DISPLAY_COMMAND_STDOUT': {'get_attribute': ['TARGET', 'commandStdout']}, 'DISPLAY_COMMAND_STDERR': {'get_attribute': ['TARGET', 'commandStderr']}}, 'implementation': 'scripts/operations/on_target_change.sh'}}}}}",,19.0,0.0,0.0,13.0,0.0,21.0,3.94,0.0,0.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,1.0
1661,"{'org.alien4cloud.kubernetes.api.types.EndpointResource': {'derived_from': 'org.alien4cloud.kubernetes.api.types.BaseResource', 'properties': {'resource_id': {'type': 'string', 'required': True, 'description': ""a unique id set by a4c to identify a resource. it should be added as a label named 'a4c_id'\n""}, 'subsets': {'type': 'list', 'required': True, 'entry_schema': {'type': 'org.alien4cloud.kubernetes.api.datatypes.EndpointSubsets'}}}, 'attributes': {'spec_path': {'get_operation_output': ['SELF', 'Standard', 'create', 'KUBE_SPEC_PATH']}}, 'requirements': [{'endpoint': {'capability': 'tosca.capabilities.Endpoint', 'relationship': 'org.alien4cloud.kubernetes.api.relationships.K8SEndpointConnectToEndpoint', 'occurrences': [1, 1]}}], 'interfaces': {'Standard': {'create': {'inputs': {'KUBE_RESOURCE_CONFIG': {'get_property': ['SELF', 'resource_spec']}, 'NAMESPACE': {'get_property': ['SELF', 'namespace']}}, 'implementation': 'scripts/kubectl_endpoint_create.sh'}, 'start': {'inputs': {'KUBE_RESOURCE_ID': {'get_property': ['SELF', 'resource_id']}, 'KUBE_SPEC_PATH': {'get_attribute': ['SELF', 'spec_path']}, 'NAMESPACE': {'get_property': ['SELF', 'namespace']}, 'KUBE_CONFIG': {'get_property': ['SELF', 'kube_config']}}, 'implementation': 'scripts/kubectl_endpoint_start.sh'}, 'delete': {'inputs': {'KUBE_RESOURCE_TYPE': 'endpoints', 'KUBE_RESOURCE_ID': {'get_attribute': ['SELF', 'resource_id']}, 'NAMESPACE': {'get_property': ['SELF', 'namespace']}, 'KUBE_CONFIG': {'get_property': ['SELF', 'kube_config']}}, 'implementation': 'scripts/kubectl_resource_wrapper_uninstall.sh'}}}}}",,76.0,1.0,0.0,50.0,0.0,105.0,5.71,0.0,0.0,1.0,0.0,0.0,0.0,2.0,0.0,0.0,3.0
693,"{'tosca.nodes.Container.Runtime': {'metadata': {'puccini.normative': 'true', 'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.1]', 'specification.location': '5.9.10'}, 'description': 'The TOSCA Container Runtime node represents operating system-level virtualization technology used to run multiple application services on a single Compute host.', 'derived_from': 'tosca.nodes.SoftwareComponent', 'capabilities': {'host': {'type': 'tosca.capabilities.Container'}, 'scalable': {'type': 'tosca.capabilities.Scalable'}}}}",,14.0,0.0,0.0,12.0,0.0,39.0,5.23,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
2633,"{'alien.test.MyRelationshipDerivedFromNothing': {'valid_target_types': ['alien.test.MyCapabilityTypeDerivedFromNothing'], 'interfaces': {'Configure': {'pre_configure_source': 'scripts/myscript.sh'}}}}",,6.0,0.0,0.0,5.0,0.0,7.0,2.81,0.0,0.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,1.0
153,"{'org.alien4cloud.aws.cloudify.EC2Instance': {'derived_from': 'org.alien4cloud.aws.EC2Instance', 'description': ""Launch an ec2 instance. Needs aws cli to be installed on the host (usually a 'manager' since this is a compute resource).\nInformation about the key and the user is needed for cloudify manager to establish connection to the created compute\n"", 'properties': {'agent_config': {'type': 'org.alien4cloud.datatypes.AgentConfig'}}}}",,10.0,2.0,0.0,6.0,0.0,49.0,5.27,0.0,0.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0
2332,"{'tosca.relationships.nfv.Monitor': {'derived_from': 'tosca.relationships.ConnectsTo', 'valid_target_types': ['tosca.capabilities.nfv.Metric']}}",,4.0,0.0,0.0,3.0,0.0,5.0,2.32,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
2264,"{'tosca.nodes.indigo.AmsCondorWnConfig': {'derived_from': 'tosca.nodes.SoftwareComponent', 'properties': {'marathon_username': {'type': 'string', 'required': True}, 'marathon_password': {'type': 'string', 'required': True}, 'ams_default_squid': {'type': 'string', 'required': True}, 'number_of_wn_instances': {'type': 'integer', 'required': True}, 'number_of_slaves': {'type': 'integer', 'required': True}, 'cpu_x_wn': {'type': 'float', 'required': True}, 'ram_x_wn': {'type': 'float', 'required': True}, 'docker_cpu_x_wn': {'type': 'float', 'required': True}, 'docker_ram_x_wn': {'type': 'float', 'required': True}, 'master_ips': {'required': True, 'type': 'list', 'entry_schema': {'type': 'string'}}, 'ams_repo_server_url': {'type': 'string'}, 'ams_repo_public_key_path': {'type': 'string'}, 'ams_repo_repository_name': {'type': 'string'}, 'ams_repo_public_key': {'type': 'string'}, 'ams_repo_public_key_url': {'type': 'string'}}, 'artifacts': {'ams_config_role': {'file': 'indigo-dc.ams_config,v1.0.0-dodas-pre1', 'type': 'tosca.artifacts.AnsibleGalaxy.role'}}, 'interfaces': {'Standard': {'start': {'implementation': 'https://raw.githubusercontent.com/indigo-dc/tosca-types/dodas_roll/artifacts/mesos/ams_wn_config.yml', 'inputs': {'mesos_masters_list': {'get_property': ['SELF', 'master_ips']}, 'consul_servers': {'get_property': ['SELF', 'master_ips']}, 'zookeeper_host_list': {'get_property': ['SELF', 'master_ips']}, 'zookeeper_peers': {'get_property': ['SELF', 'master_ips']}, 'marathon_username': {'get_property': ['SELF', 'marathon_username']}, 'marathon_password': {'get_property': ['SELF', 'marathon_password']}, 'ams_default_squid': {'get_property': ['SELF', 'ams_default_squid']}, 'ams_number_of_wn_instances': {'get_property': ['SELF', 'number_of_wn_instances']}, 'ams_number_of_slaves': {'get_property': ['SELF', 'number_of_slaves']}, 'ams_cpu_x_wn': {'get_property': ['SELF', 'cpu_x_wn']}, 'ams_ram_x_wn': {'get_property': ['SELF', 'ram_x_wn']}, 'ams_docker_cpu_x_wn': {'get_property': ['SELF', 'docker_cpu_x_wn']}, 'ams_docker_ram_x_wn': {'get_property': ['SELF', 'docker_ram_x_wn']}, 'ams_repo_server_url': {'get_property': ['SELF', 'ams_repo_server_url']}, 'ams_repo_public_key_path': {'get_property': ['SELF', 'ams_repo_public_key_path']}, 'ams_repo_repository_name': {'get_property': ['SELF', 'ams_repo_repository_name']}, 'ams_repo_public_key': {'get_property': ['SELF', 'ams_repo_public_key']}, 'ams_repo_public_key_url': {'get_property': ['SELF', 'ams_repo_public_key_url']}}}}}, 'requirements': [{'host': {'capability': 'tosca.capabilities.indigo.MesosSlave', 'relationship': 'tosca.relationships.HostedOn', 'node': 'tosca.nodes.SoftwareComponent', 'occurrences': [1, 1]}}]}}",,134.0,0.0,0.0,96.0,0.0,167.0,5.05,0.0,0.0,1.0,0.0,0.0,0.0,15.0,0.0,0.0,0.0
1839,"{'rnc.nodes.CP.DM': {'derived_from': 'tosca.nodes.nfv.CP', 'requirements': [{'virtualLink': {'capability': 'tosca.capabilities.nfv.VirtualLinkable', 'relationship': 'tosca.relationships.nfv.VirtualLinksTo', 'node': 'rnc.nodes.VL'}}, {'virtualBinding': {'capability': 'tosca.capabilities.nfv.VirtualBindable', 'relationship': 'tosca.relationships.nfv.VirtualBindsTo', 'node': 'rnc.nodes.compute.DM'}}]}}",,11.0,0.0,0.0,11.0,0.0,18.0,3.84,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
2485,"{'org.alien4cloud.alien4cloud.config.backupRestoreS3.relationships.BackupRestoreS3DependsOnAwsCli': {'derived_from': 'tosca.relationships.DependsOn', 'valid_target_types': ['org.alien4cloud.aws-cli.pub.capabilities.AwsCli']}}",,4.0,0.0,0.0,3.0,0.0,5.0,2.32,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
1475,"{'org.ystia.yorc.samples.orchestratorhost.ansible.Component': {'derived_from': 'tosca.nodes.Root', 'properties': {'myinput': {'type': 'string', 'default': 'test'}}, 'attributes': {'output': {'get_operation_output': ['SELF', 'Standard', 'create', 'MY_OUTPUT']}}, 'interfaces': {'Standard': {'create': {'inputs': {'MY_INPUT': {'get_property': ['SELF', 'myinput']}}, 'implementation': 'playbooks/create.yml'}}}}}",,22.0,0.0,0.0,16.0,0.0,26.0,4.39,0.0,0.0,1.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0
1926,"{'tosca.nodes.slot': {'derived_from': 'tosca.nodes.TMForum.Models.SIDModels.ResourceDomain.ResourceABE.PhysicalResource.Hardware.ManagedHardware.PhysicalContainer.EquipmentHolder', 'requirements': [{'chassis': {'node': 'tosca.nodes.chassis', 'relationship': 'dependancy'}}]}}",,6.0,0.0,0.0,6.0,0.0,9.0,3.17,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
1762,{'cloudshell.nodes.Cisco 5108': {'derived_from': 'cloudshell.nodes.resource'}},,2.0,0.0,0.0,2.0,0.0,3.0,2.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
1553,{'com.toscaruntime.mock.nodes.MockNetwork': {'derived_from': 'tosca.nodes.Network'}},,2.0,0.0,0.0,2.0,0.0,3.0,1.58,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
542,"{'org.alien4cloud.php.debian_sh.nodes.PHP': {'derived_from': 'tosca.nodes.SoftwareComponent', 'description': 'PHP install through apt-get.', 'metadata': {'icon': '/images/php.png'}, 'properties': {'component_version': {'type': 'version', 'default': 5, 'constraints': [{'equal': 5}]}}, 'capabilities': {'runtime': {'type': 'org.alien4cloud.php.pub.capabilities.Runtime'}}, 'requirements': [{'host': {'capability': 'tosca.capabilities.Container', 'node': 'tosca.nodes.Compute', 'relationship': 'tosca.relationships.HostedOn', 'occurrences': [1, 1], 'node_filter': {'capabilities': [{'tosca.capabilities.OperatingSystem': {'properties': [{'type': {'equal': 'linux'}}, {'architecture': {'equal': 'x86_64'}}, {'distribution': {'valid_values': ['debian', 'ubuntu', 'knoppix']}}]}}]}}}], 'interfaces': {'Standard': {'create': 'scripts/install_php.sh'}}}}",,38.0,0.0,0.0,33.0,0.0,54.0,5.43,0.0,0.0,1.0,0.0,0.0,0.0,4.0,0.0,0.0,1.0
2549,"{'tosca.relationships.network.LinksTo': {'metadata': {'puccini.normative': 'true', 'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.1]', 'specification.location': '8.5.4'}, 'description': 'This relationship type represents an association relationship between Port and Network node types.', 'derived_from': 'tosca.relationships.DependsOn', 'valid_target_types': ['tosca.capabilities.network.Linkable']}}",,10.0,0.0,0.0,8.0,0.0,26.0,4.62,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
2159,"{'dcae.nodes.ContainerizedServiceComponentUsingDmaap': {'derived_from': 'dcae.nodes.ContainerizedServiceComponent', 'properties': {'streams_publishes': {'type': 'list'}, 'streams_subscribes': {'type': 'list'}}}}",,7.0,0.0,0.0,7.0,0.0,10.0,2.92,0.0,0.0,0.0,0.0,0.0,0.0,2.0,0.0,0.0,0.0
2350,"{'my.types.WordpressDbConnection': {'derived_from': 'tosca.relationships.ConnectsTo', 'properties': {'credential': {'user': 'db_user', 'token': 'db_pwd'}}}}",,6.0,0.0,0.0,6.0,0.0,9.0,3.17,0.0,0.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0
2521,"{'tosca.relationships.HostedOn': {'metadata': {'puccini.normative': 'true', 'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.2]', 'specification.location': '5.7.3', 'role': 'host'}, 'description': 'This type represents a hosting relationship between two nodes.', 'derived_from': 'tosca.relationships.Root', 'valid_target_types': ['tosca.capabilities.Container']}}",,10.0,0.0,0.0,9.0,0.0,24.0,4.58,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
1165,{'alien.nodes.test.TestWorkflow': {'derived_from': 'tosca.nodes.SoftwareComponent'}},,2.0,0.0,0.0,2.0,0.0,3.0,1.58,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
1578,"{'org.ystia.yorc.samples.tests.BashIterationComponent': {'description': 'This component iterates on printing a message n times, sleeping a given\nnumber of seconds between each iteration.\n', 'derived_from': 'tosca.nodes.SoftwareComponent', 'properties': {'messageToPrint': {'description': 'Message to print on each iteration', 'type': 'string', 'default': 'Message'}, 'numberOfIterations': {'description': 'Number of iterations to perform', 'type': 'integer', 'default': 12}, 'pauseDuration': {'description': 'Duration in seconds of the pause after each iteration', 'type': 'integer', 'default': 5}}, 'interfaces': {'Standard': {'create': {'inputs': {'ITERATIONS': {'get_property': ['SELF', 'numberOfIterations']}, 'PAUSE_DURATION': {'get_property': ['SELF', 'pauseDuration']}}, 'implementation': 'scripts/create.sh'}, 'start': {'inputs': {'MESSAGE': {'get_property': ['SELF', 'messageToPrint']}, 'ITERATIONS': {'get_property': ['SELF', 'numberOfIterations']}, 'PAUSE_DURATION': {'get_property': ['SELF', 'pauseDuration']}}, 'implementation': 'scripts/iterate.sh'}}, 'custom': {'iterate': {'inputs': {'MESSAGE': {'get_property': ['SELF', 'messageToPrint']}, 'ITERATIONS': {'get_property': ['SELF', 'numberOfIterations']}, 'PAUSE_DURATION': {'get_property': ['SELF', 'pauseDuration']}}, 'implementation': 'scripts/iterate.sh'}}}}}",,61.0,0.0,0.0,44.0,0.0,107.0,5.5,0.0,0.0,2.0,0.0,0.0,0.0,3.0,0.0,0.0,3.0
1813,"{'tosca.nodes.WebServer': {'derived_from': 'tosca.nodes.SoftwareComponent', 'capabilities': {'data_endpoint': 'tosca.capabilities.Endpoint', 'admin_endpoint': 'tosca.capabilities.Endpoint.Admin', 'host': {'type': 'tosca.capabilities.compute.Container', 'valid_source_types': ['tosca.nodes.WebApplication']}}}}",,9.0,0.0,0.0,8.0,0.0,13.0,3.7,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
305,"{'tosca.nodes.indigo.GalaxyPortalFastConfig': {'derived_from': 'tosca.nodes.indigo.GalaxyPortalAndStorage', 'artifacts': {'nfs_role': {'file': 'indigo-dc.nfs,master', 'type': 'tosca.artifacts.AnsibleGalaxy.role'}, 'galaxy_os_role': {'file': 'indigo-dc.galaxycloud-os,master', 'type': 'tosca.artifacts.AnsibleGalaxy.role'}, 'galaxy_role_fastconfig': {'file': 'indigo-dc.galaxycloud-fastconfig,master', 'type': 'tosca.artifacts.AnsibleGalaxy.role'}}, 'interfaces': {'Standard': {'configure': {'implementation': 'https://raw.githubusercontent.com/indigo-dc/tosca-types/master/artifacts/galaxy/galaxy_fastconfig.yml', 'inputs': {'storage_encryption': {'get_property': ['SELF', 'storage_encryption']}, 'vault_url': {'get_property': ['SELF', 'vault_url']}, 'vault_wrapping_token': {'get_property': ['SELF', 'vault_wrapping_token']}, 'vault_secret_path': {'get_property': ['SELF', 'vault_secret_path']}, 'vault_secret_key': {'get_property': ['SELF', 'vault_secret_key']}, 'wn_ips': {'get_property': ['SELF', 'wn_ips']}, 'galaxy_install_path': {'get_property': ['SELF', 'install_path']}, 'galaxy_user': {'get_property': ['SELF', 'user']}, 'galaxy_admin': {'get_property': ['SELF', 'admin_email']}, 'galaxy_admin_api_key': {'get_property': ['SELF', 'admin_api_key']}, 'galaxy_lrms': {'get_property': ['SELF', 'lrms', 'type']}, 'galaxy_version': {'get_property': ['SELF', 'version']}, 'galaxy_instance_description': {'get_property': ['SELF', 'instance_description']}, 'galaxy_instance_key_pub': {'get_property': ['SELF', 'instance_key_pub']}, 'export_dir': {'get_property': ['SELF', 'export_dir']}, 'galaxy_flavor': {'get_property': ['SELF', 'flavor']}, 'get_refdata': {'get_property': ['SELF', 'reference_data']}}}}}}}",,86.0,0.0,0.0,51.0,0.0,94.0,4.74,0.0,0.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
1932,"{'tosca.nodes.PhysicalPort.OnCard.Acme.Advanced': {'derived_from': 'tosca.nodes.PhysicalPort.OnCard.Acme', 'capabilities': {'complexQoS': {'type': 'Acme.ComplexQosFeature'}}}}",,5.0,0.0,0.0,5.0,0.0,7.0,2.81,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
1846,"{'db_match': {'derived_from': 'seaclouds.nodes.Compute', 'attributes': {'num_cpus': 6, 'disk_size': '1 TB', 'scaling_vertical': 'auto', 'availability': 99.8}}}",,7.0,0.0,0.0,7.0,0.0,13.0,3.7,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
2479,"{'org.alien4cloud.diamond.collectors.relationships.DiamondJolokiaCollector': {'derived_from': 'tosca.relationships.ConnectsTo', 'valid_target_types': ['org.alien4cloud.java.jmx.jolokia.capabilities.JolokiaEndpoint'], 'interfaces': {'Configure': {'pre_configure_source': {'inputs': {'ANSIBLE_VERBOSE': False, 'PLAYBOOK_ENTRY': 'collect_jolokia.yml', 'datasource_name': {'get_attribute': ['SOURCE', 'datasource_name']}, 'collectors_conf_path': {'get_attribute': ['SOURCE', 'collectors_conf_path']}, 'dashboard_dir': {'get_attribute': ['SOURCE', 'dashboard_dir']}, 'jolokia_host': {'get_attribute': ['TARGET', 'ip_address']}, 'jolokia_port': {'get_attribute': ['TARGET', 'jolokia', 'port']}}, 'implementation': 'playbook/playbook.ansible'}}}}}",,32.0,0.0,0.0,20.0,0.0,36.0,4.49,0.0,0.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
2096,"{'sodalite.nodes.Tests.File.Size': {'derived_from': 'sodalite.nodes.Tests.File', 'properties': {'size': {'type': 'integer', 'description': ""File's supposed/comparable size""}, 'comparator': {'type': 'string', 'description': 'The comparator used to test the supposed file size with', 'default': 'eq', 'constraints': [{'valid_values': ['eq', 'lt', 'gt', 'le', 'ge']}]}}, 'interfaces': {'Standard': {'type': 'tosca.interfaces.node.lifecycle.Standard', 'operations': {'create': {'inputs': {'file_location': {'type': 'string', 'default': {'get_property': ['SELF', 'file_location']}}, 'follow': {'type': 'string', 'default': {'get_property': ['SELF', 'follow']}}, 'size': {'type': 'integer', 'default': {'get_property': ['SELF', 'size']}}, 'comparator': {'type': 'string', 'default': {'get_property': ['SELF', 'comparator']}}}, 'implementation': {'primary': 'file/size.yaml'}}}}}}}",,49.0,0.0,0.0,36.0,0.0,72.0,4.99,0.0,4.0,1.0,0.0,0.0,0.0,2.0,0.0,0.0,0.0
61,"{'tosca.nodes.DatabaseWithListParam': {'derived_from': 'tosca.nodes.Database', 'properties': {'list_prop': {'type': 'list', 'entry_schema': {'type': 'integer'}}}}}",,7.0,0.0,0.0,7.0,0.0,10.0,3.12,0.0,0.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0
998,"{'tosca.nodes.MessageBus': {'abstract': True, 'derived_from': 'tosca.nodes.SoftwareComponent', 'description': 'The TOSCA MessageBus Node Type represents a generic message bus. It should be inherited to define an actual message bus (Such as RabbitMQ) and lifecycle implementation.\n'}}",,6.0,0.0,0.0,4.0,0.0,32.0,4.94,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
625,"{'radon.nodes.testing.CTTAgent': {'derived_from': 'radon.nodes.docker.DockerApplication', 'metadata': {'targetNamespace': 'radon.nodes.testing', 'abstract': 'true', 'final': 'false'}}}",,6.0,0.0,0.0,6.0,0.0,10.0,3.32,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
2664,"{'org.ystia.yorc.pub.relationships.SaveSecretsToVault': {'derived_from': 'tosca.relationships.HostedOn', 'description': 'Saves secrets to a Vault Server\n', 'valid_target_types': ['org.alien4cloud.vault.pub.capabilities.VaultServer']}}",,5.0,0.0,0.0,4.0,0.0,12.0,3.58,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
878,"{'tosca.nodes.Container.Application.ConfigurableDockerContainer': {'description': ""A specification of a DockerContainer that is configurable. In K8S, we'll use configMaps."", 'derived_from': 'tosca.nodes.Container.Application.DockerContainer', 'properties': {'config_settings': {'type': 'list', 'required': False, 'entry_schema': {'type': 'org.alien4cloud.extended.container.datatypes.ConfigSetting'}}}}}",,10.0,0.0,0.0,9.0,0.0,26.0,4.62,0.0,0.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0
1358,"{'org.ystia.beats.linux.bash.nodes.PacketBeat': {'derived_from': 'org.ystia.beats.linux.bash.nodes.Beat', 'description': 'A PacketBeat ships information about network traffic', 'tags': {'icon': '/images/packet-icon.png'}, 'properties': {'repository': {'type': 'string', 'description': 'This property give the opportunity to specify an alternative download repository for this component artifacts.  It is your responsibility to provide an accessible download url and to store required artifacts on it. You should specify only the base repository url. Artifacts names will be appended to it, so this property could be shared among several components using the inputs feature.\n', 'required': True, 'default': 'https://artifacts.elastic.co/downloads/beats/packetbeat', 'constraints': [{'pattern': '^(http|https|ftp)://.+/.*$'}]}, 'device': {'type': 'string', 'default': 'any', 'description': 'Select the network interfaces to sniff the data. You can use the any keyword to sniff on all connected interfaces.'}}, 'interfaces': {'Standard': {'configure': {'inputs': {'DEVICE': {'get_property': ['SELF', 'device']}}, 'implementation': 'scripts/configure_packetbeat.sh'}}}, 'artifacts': [{'scripts': {'type': 'tosca.artifacts.File', 'file': 'scripts'}}, {'beat_v5_config': {'file': 'configs/v5/packetbeat.yml', 'type': 'tosca.artifacts.File'}}, {'beat_v6_config': {'file': 'configs/v6/packetbeat.yml', 'type': 'tosca.artifacts.File'}}]}}",,42.0,0.0,0.0,34.0,0.0,138.0,6.39,0.0,0.0,1.0,0.0,0.0,0.0,2.0,0.0,0.0,1.0
1370,"{'org.ystia.nodes.Database': {'derived_from': 'tosca.nodes.Database', 'abstract': True, 'description': 'Abstract Ystia Database component', 'artifacts': [{'utils_scripts': {'type': 'tosca.artifacts.File', 'file': 'utils_scripts'}}]}}",,8.0,0.0,0.0,8.0,0.0,16.0,3.88,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
1973,"{'org.lexis.datatransfer.nodes.CopyFilesToStagingAreaDirectory': {'derived_from': 'tosca.nodes.SoftwareComponent', 'description': 'Copy files from a source directory to a staging area directory\n', 'properties': {'source_directory': {'description': 'Source directory', 'type': 'string', 'required': True}, 'source_files_patterns': {'type': 'list', 'entry_schema': {'type': 'string'}, 'description': 'List of file patterns to copy from source directory\n', 'required': True}, 'destination_subdirectory': {'description': 'Subdirectory in staging area where to store the source directory content', 'type': 'string', 'required': False}}, 'attributes': {'directory_absolute_path': {'get_operation_output': ['SELF', 'Standard', 'start', 'DIRECTORY_ABSOLUTE_PATH']}}, 'capabilities': {'cloud_area_directory_provider': {'type': 'org.ddi.capabilities.CloudAreaDirectoryProvider'}}, 'requirements': [{'cloud_area_directory_provider': {'capability': 'org.ddi.capabilities.CloudAreaDirectoryProvider', 'relationship': 'org.ddi.relationships.CloudAreaDirectoryProvider', 'occurrences': [1, 1]}}], 'interfaces': {'Standard': {'create': {'implementation': 'playbooks/noop.yaml'}, 'start': {'inputs': {'source_directory': {'get_property': ['SELF', 'source_directory']}, 'destination_subdirectory': {'get_property': ['SELF', 'destination_subdirectory']}, 'destination_directory': {'get_attribute': ['REQ_TARGET', 'cloud_area_directory_provider', 'directory_absolute_path']}, 'source_files_patterns': {'get_property': ['SELF', 'source_files_patterns']}, 'user_name': {'get_attribute': ['REQ_TARGET', 'cloud_area_directory_provider', 'user_name']}}, 'implementation': 'playbooks/copy_to_staging_area_directory.yaml'}}}}}",,65.0,0.0,0.0,46.0,0.0,110.0,5.8,0.0,0.0,1.0,0.0,0.0,0.0,3.0,0.0,0.0,0.0
164,"{'org.alien4cloud.automation.a4c.config.plugin.nodes.UploadPlugin': {'description': 'Upload CFY orchestrator plugin and configure a CFY orchestrator for A4C\n', 'derived_from': 'org.alien4cloud.automation.a4c.pub.nodes.AlienConfigurator', 'interfaces': {'Standard': {'start': {'inputs': {'ANSIBLE_VERBOSE': False, 'PLAYBOOK_ENTRY': 'upload_plugin.yml', 'alien_user': {'get_property': ['HOST', 'rest', 'user']}, 'alien_password': {'get_property': ['HOST', 'rest', 'password']}, 'alien_url': {'get_attribute': ['HOST', 'alien_url']}}, 'implementation': 'playbook/playbook.ansible'}}}, 'artifacts': [{'plugin_artifact': {'type': 'tosca.artifacts.File'}}]}}",,28.0,0.0,0.0,19.0,0.0,43.0,5.08,0.0,0.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
1871,"{'aria.openstack.nodes.Volume': {'derived_from': 'tosca.nodes.Root', 'properties': {'volume': {'default': {}, 'type': 'aria.openstack.datatypes.Volume', 'description': 'key-value volume configuration as described in http://developer.openstack.org/api-ref-blockstorage-v1.html#volumes-v1. (**DEPRECATED - Use the `args` input in create operation instead**)'}, 'use_external_resource': {'type': 'boolean', 'default': False, 'description': 'a boolean for setting whether to create the resource or use an existing one. See the using existing resources section.'}, 'create_if_missing': {'default': False, 'type': 'boolean', 'description': 'If use_external_resource is ``true`` and the resource is missing, create it instead of failing.'}, 'resource_id': {'default': None, 'type': 'string', 'description': ""name to give to the new resource or the name or ID of an existing resource when the ``use_external_resource`` property is set to ``true`` (see the using existing resources section). Defaults to '' (empty string).""}, 'device_name': {'default': 'auto', 'type': 'string', 'description': 'The device name this volume will be attached to. Default value is *auto*, which means openstack will auto-assign a device. Note that if you do explicitly set a value, this value may not be the actual device name assigned. Sometimes the device requested will not be available and openstack will assign it to a different device, this is why we recommend using *auto*.'}, 'openstack_config': {'type': 'aria.openstack.datatypes.Config', 'required': False}, 'boot': {'type': 'boolean', 'default': False, 'description': 'If a Server instance is connected to this Volume by a relationship, this volume will be used as the boot volume for that Server.'}}, 'interfaces': {'Standard': {'create': {'implementation': 'cloudify-openstack-plugin > cinder_plugin.volume.create', 'inputs': {'args': {'default': {}, 'type': 'aria.openstack.datatypes.Volume', 'required': False}, 'status_attempts': {'description': ""Number of times to check for the creation's status before failing"", 'type': 'integer', 'default': 20}, 'status_timeout': {'description': ""Interval (in seconds) between subsequent inquiries of the creation's status"", 'type': 'integer', 'default': 15}}}, 'delete': 'cloudify-openstack-plugin > cinder_plugin.volume.delete'}, 'Validation': {'type': 'aria.openstack.interfaces.validation', 'creation': 'cloudify-openstack-plugin > cinder_plugin.volume.creation_validation'}}, 'requirements': [{'server': {'capability': 'tosca.capabilities.Node', 'node': 'aria.openstack.nodes.Server', 'relationship': 'aria.openstack.volume_attached_to_server'}}]}}",,68.0,0.0,1.0,56.0,0.0,283.0,6.85,0.0,0.0,2.0,0.0,0.0,0.0,7.0,0.0,0.0,0.0
2255,"{'tosca.nodes.indigo.Container.Application.Docker.Chronos': {'derived_from': 'tosca.nodes.indigo.Container.Application.Docker', 'properties': {'schedule': {'required': False, 'type': 'string'}, 'command': {'required': True, 'type': 'string'}, 'description': {'required': False, 'type': 'string'}, 'retries': {'required': False, 'type': 'integer'}, 'epsilon': {'required': False, 'type': 'string', 'default': 'PT10S'}, 'priviliged': {'required': False, 'type': 'boolean', 'default': True}, 'force_pull_image': {'required': False, 'type': 'boolean', 'default': True}}, 'capabilities': {'parent_job': {'type': 'tosca.capabilities.indigo.Container.Application.Docker.Chronos', 'valid_source_types': ['tosca.nodes.indigo.Container.Application.Docker.Chronos'], 'occurrences': [0, 'UNBOUNDED']}}, 'requirements': [{'parent_job': {'capability': 'tosca.capabilities.indigo.Container.Application.Docker.Chronos', 'node': 'tosca.nodes.indigo.Container.Application.Docker.Chronos', 'relationship': 'tosca.relationships.DependsOn', 'occurrences': [0, 1]}}]}}",,43.0,0.0,0.0,38.0,0.0,65.0,4.62,0.0,0.0,0.0,0.0,0.0,0.0,7.0,0.0,0.0,0.0
1266,"{'tosca.nodes.LoadBalancer': {'derived_from': 'tosca.nodes.Root', 'properties': {'algorithm': {'type': 'string', 'required': False, 'status': 'experimental'}}, 'capabilities': {'client': {'type': 'tosca.capabilities.Endpoint.Public', 'occurrences': [0, 'UNBOUNDED'], 'description': 'The Floating (IP) client’s on the public network can connect to'}}, 'requirements': [{'application': {'capability': 'tosca.capabilities.Endpoint', 'relationship': 'tosca.relationships.RoutesTo', 'occurrences': [0, 'UNBOUNDED'], 'description': 'Connection to one or more load balanced applications'}}]}}",,23.0,0.0,0.0,18.0,0.0,48.0,5.33,0.0,0.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0
1710,"{'tosca.nodes.indigo.CmsServices': {'derived_from': 'tosca.nodes.SoftwareComponent', 'properties': {'cms_local_site': {'type': 'string', 'required': True}, 'cms_squid_image': {'type': 'string', 'required': False, 'default': 'spiga/frontiersquidv1'}, 'cms_wn_image': {'type': 'string', 'default': 'spiga/cmswn', 'required': False}, 'cms_proxycache_image': {'type': 'string', 'required': False, 'default': 'spiga/ttscache'}, 'mysquid_host': {'type': 'string', 'required': True}, 'proxycache_host': {'type': 'string', 'required': True}, 'iam_access_token': {'type': 'string', 'description': 'INDIGO IAM access token', 'required': True}, 'iam_client_id': {'type': 'string', 'description': 'INDIGO IAM client id', 'required': True}, 'iam_client_secret': {'type': 'string', 'description': 'INDIGO IAM client secret', 'required': True}, 'marathon_username': {'type': 'string', 'required': False, 'default': 'admin'}, 'marathon_password': {'type': 'string', 'required': True}}, 'artifacts': {'cms_config_role': {'file': 'indigo-dc.cms_config', 'type': 'tosca.artifacts.AnsibleGalaxy.role'}}, 'interfaces': {'Standard': {'start': {'implementation': 'https://raw.githubusercontent.com/indigo-dc/tosca-types/master/artifacts/mesos/cms_services_start.yml', 'inputs': {'cms_config_mysquid_host': {'get_property': ['SELF', 'mysquid_host']}, 'cms_config_proxycache_host': {'get_property': ['SELF', 'proxycache_host']}, 'cms_config_iamtoken': {'get_property': ['SELF', 'iam_access_token']}, 'cms_config_iam_client_id': {'get_property': ['SELF', 'iam_client_id']}, 'cms_config_iam_client_secret': {'get_property': ['SELF', 'iam_client_secret']}, 'cms_config_cms_local_site': {'get_property': ['SELF', 'cms_local_site']}, 'cms_config_squid_image': {'get_property': ['SELF', 'cms_squid_image']}, 'cms_config_wn_image': {'get_property': ['SELF', 'cms_wn_image']}, 'cms_config_proxycache_image': {'get_property': ['SELF', 'cms_proxycache_image']}, 'marathon_user': {'get_property': ['SELF', 'marathon_username']}, 'marathon_pass': {'get_property': ['SELF', 'marathon_password']}}}}}, 'requirements': [{'host': {'capability': 'tosca.capabilities.indigo.MesosMaster', 'relationship': 'tosca.relationships.HostedOn', 'node': 'tosca.nodes.SoftwareComponent', 'occurrences': [1, 1]}}]}}",,104.0,0.0,0.0,80.0,0.0,149.0,5.39,0.0,0.0,1.0,0.0,0.0,0.0,11.0,0.0,0.0,0.0
1508,"{'tosca.nodes.openstack.network.port.security_group.rule': {'derived_from': 'tosca.nodes.Root', 'properties': {'direction': {'type': 'string', 'required': True, 'constraints': [{'valid_values': ['ingress', 'egress']}]}, 'ethertype': {'type': 'string', 'constraints': [{'valid_values': ['IPv4', 'IPv6']}], 'required': True}, 'port_range_min': {'type': 'integer', 'required': True, 'constraints': [{'valid_values': [1, 65535]}]}, 'port_range_max': {'type': 'integer', 'required': True, 'constraints': [{'valid_values': [1, 65535]}]}, 'protocol': {'type': 'string', 'constraints': [{'valid_values': ['tcp', 'icmp', 'udp']}], 'required': True}, 'remote_ip_prefix': {'type': 'string', 'required': True}}, 'interfaces': {'Standard': {'type': 'tosca.interfaces.node.lifecycle.Standard', 'create': {'implementation': 'aiorchestra.core.noop:noop'}, 'delete': {'implementation': 'aiorchestra.core.noop:noop'}}}}}",,49.0,0.0,0.0,38.0,0.0,65.0,4.61,0.0,0.0,1.0,0.0,0.0,0.0,6.0,0.0,0.0,0.0
89,{'tosca.nodes.SomeNode': {'derived_from': 'tosca.nodes.SoftwareComponent'}},,2.0,0.0,0.0,2.0,0.0,3.0,1.58,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
1557,"{'com.toscaruntime.nodes.Error': {'derived_from': 'tosca.nodes.SoftwareComponent', 'description': ""This type throws error if it's required to do so\n"", 'properties': {'create_throw_error': {'type': 'boolean', 'default': False}, 'configure_throw_error': {'type': 'boolean', 'default': False}, 'start_throw_error': {'type': 'boolean', 'default': False}, 'stop_throw_error': {'type': 'boolean', 'default': False}, 'delete_throw_error': {'type': 'boolean', 'default': False}}, 'interfaces': {'Standard': {'create': {'inputs': {'THROW_ERROR': {'get_property': ['SELF', 'create_throw_error']}}, 'implementation': 'scripts/error.sh'}, 'configure': {'inputs': {'THROW_ERROR': {'get_property': ['SELF', 'configure_throw_error']}}, 'implementation': 'scripts/error.sh'}, 'start': {'inputs': {'THROW_ERROR': {'get_property': ['SELF', 'start_throw_error']}}, 'implementation': 'scripts/error.sh'}, 'stop': {'inputs': {'THROW_ERROR': {'get_property': ['SELF', 'stop_throw_error']}}, 'implementation': 'scripts/error.sh'}, 'delete': {'inputs': {'THROW_ERROR': {'get_property': ['SELF', 'delete_throw_error']}}, 'implementation': 'scripts/error.sh'}}}}}",,57.0,1.0,0.0,46.0,0.0,82.0,4.81,0.0,0.0,1.0,0.0,0.0,0.0,5.0,0.0,0.0,5.0
2304,"{'tosca.nodes.MiCADO.CloudSigma.Compute': {'description': 'CloudSigma compute node', 'derived_from': 'tosca.nodes.MiCADO.Compute', 'properties': {'num_cpus': {'type': 'integer', 'required': True, 'constraints': [{'greater_or_equal': 250}, {'less_or_equal': 100000}]}, 'mem_size': {'type': 'integer', 'required': True, 'constraints': [{'greater_or_equal': 268435456}, {'less_or_equal': 137438953472}]}, 'libdrive_id': {'type': 'string', 'required': True}, 'vnc_password': {'type': 'string', 'required': True}, 'public_key_id': {'type': 'string', 'required': True}, 'host_name': {'type': 'string', 'required': False}, 'hv_relaxed': {'type': 'boolean', 'required': False}, 'hv_tsc': {'type': 'boolean', 'required': False}, 'nics': {'type': 'list', 'required': True}}, 'interfaces': {'Occopus': {'type': 'tosca.interfaces.MiCADO.Occopus'}, 'Terraform': {'type': 'tosca.interfaces.MiCADO.Terraform'}}}}",,42.0,0.0,0.0,42.0,0.0,70.0,4.63,0.0,0.0,2.0,0.0,0.0,0.0,9.0,0.0,0.0,0.0
1586,"{'org.atos.visualization.Xrv': {'derived_from': 'tosca.nodes.SoftwareComponent', 'properties': {'port': {'type': 'integer', 'description': 'Port to use'}}, 'attributes': {'url': {'concat': ['http://', {'get_attribute': ['HOST', 'public_ip_address']}, ':', {'get_property': ['SELF', 'port']}]}}, 'interfaces': {'Standard': {'create': {'implementation': 'playbooks/create.yaml'}, 'start': {'inputs': {'PORT': {'get_property': ['SELF', 'port']}}, 'implementation': 'playbooks/start.yaml'}, 'stop': {'implementation': 'playbooks/stop.yaml'}, 'delete': {'implementation': 'playbooks/delete.yaml'}}}}}",,32.0,0.0,0.0,24.0,0.0,41.0,4.95,0.0,0.0,1.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0
2544,"{'tosca.relationships.DependsOn': {'metadata': {'puccini.normative': 'true', 'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.1]', 'specification.location': '5.7.2'}, 'description': 'This type represents a general dependency relationship between two nodes.', 'derived_from': 'tosca.relationships.Root', 'valid_target_types': ['tosca.capabilities.Node']}}",,10.0,0.0,0.0,8.0,0.0,23.0,4.52,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
1513,"{'tosca.artifacts.openstack.compute.userdata': {'derived_from': 'tosca.artifacts.Implementation.Bash', 'description': 'Nova compute boot user data', 'script': {'type': 'string'}}}",,5.0,0.0,0.0,5.0,0.0,12.0,3.58,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
2768,{'aria.openstack.server_depends_on_image': {'derived_from': 'DependsOn'}},,2.0,0.0,0.0,2.0,0.0,3.0,1.58,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
1729,"{'tosca.nodes.nfv.Cp': {'derived_from': 'tosca.nodes.Root', 'properties': {'layer_protocol': {'type': 'list', 'entry_schema': {'constraints': [{'valid_values': ['ethernet', 'mpls', 'odu2', 'ipv4', 'ipv6', 'pseudo_wire']}], 'type': 'string'}, 'required': True}, 'role': {'type': 'string', 'constraints': [{'valid_values': ['root', 'leaf']}], 'required': False}, 'description': {'type': 'string', 'required': False}, 'protocol_data': {'type': 'list', 'entry_schema': {'type': 'tosca.datatypes.nfv.CpProtocolData'}, 'required': True}, 'trunk_mode': {'type': 'boolean', 'required': True}, 'allowedAddressData': {'type': 'tosca.datatypes.nfv.AddressData', 'required': False}}}}",,37.0,0.0,0.0,29.0,0.0,52.0,4.51,0.0,0.0,0.0,0.0,0.0,0.0,6.0,0.0,0.0,0.0
761,"{'tosca.nodes.Root': {'metadata': {'puccini.normative': 'true', 'specification.citation': '[TOSCA-Simple-Profile-YAML-v1.2]', 'specification.location': '5.9.1'}, 'description': 'The TOSCA Root Node Type is the default type that all other TOSCA base Node Types derive from. This allows for all TOSCA nodes to have a consistent set of features for modeling and management (e.g., consistent definitions for requirements, capabilities and lifecycle interfaces).', 'attributes': {'tosca_id': {'description': 'A unique identifier of the realized instance of a Node Template that derives from any TOSCA normative type.', 'type': 'string'}, 'tosca_name': {'description': 'This attribute reflects the name of the Node Template as defined in the TOSCA service template. This name is not unique to the realized instance model of corresponding deployed application as each template in the model can result in one or more instances (e.g., scaled) when orchestrated to a provider environment.', 'type': 'string'}, 'state': {'description': 'The state of the node instance.', 'type': 'string', 'default': 'initial'}}, 'interfaces': {'Standard': {'type': 'tosca.interfaces.node.lifecycle.Standard'}}, 'capabilities': {'feature': {'type': 'tosca.capabilities.Node'}}, 'requirements': [{'dependency': {'capability': 'tosca.capabilities.Node', 'node': 'tosca.nodes.Root', 'relationship': 'tosca.relationships.DependsOn', 'occurrences': [0, 'UNBOUNDED']}}]}}",,39.0,0.0,0.0,29.0,0.0,162.0,6.41,0.0,0.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
1597,"{'tosca.nodes.QC.Application.TIC': {'derived_from': 'tosca.nodes.QC.Application', 'description': 'description of TIC', 'requirements': [{'storage': {'capability': 'tosca.capabilities.QC.GlusterFS', 'node': 'tosca.nodes.QC.Application.GlusterFS', 'relationship': 'tosca.relationships.DependsOn'}}, {'host': {'capability': 'tosca.capabilities.QC.VM.topology', 'node': 'tosca.nodes.QC.VM.topology', 'relationship': 'tosca.relationships.HostedOn'}}], 'attributes': {'service_urls': {'type': 'list', 'required': False, 'entry_schema': {'type': 'string'}}}, 'interfaces': {'Standard': {'type': 'tosca.interfaces.QC.Standard', 'create': {'inputs': {'repository': 'https://github.com/QCDIS/fabric_as_code.git', 'resources': ['011.initialize_hosts.yml', '012.prepare_docker_images.yml', '013.mount_fs.yml', '014.spawn_swarm.yml', '016.deploy_portainer.yml', '100.deploy_ca.yml', '101.deploy_orderer.yml', '102.deploy_peers.yml', '103.deploy_cli.yml', '104.deploy_hlf_explorer.yml']}}}}, 'properties': {'gluster_cluster_volume': {'type': 'string', 'required': True, 'default': 'gv0'}}}}",,40.0,0.0,0.0,30.0,0.0,58.0,5.51,0.0,0.0,1.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0
1146,"{'org.alien4cloud.test.nodes.ComputeWindows': {'derived_from': 'tosca.nodes.Compute', 'properties': {'customHostName': {'type': 'string'}}, 'interfaces': {'Standard': {'create': 'scripts/dummy.sh', 'configure': {'inputs': {'FILENAME': 'configured.txt'}, 'implementation': 'scripts/dummy.sh'}}, 'custom': {'checkFile': {'inputs': {'FILENAME': {'type': 'string', 'required': True}}, 'implementation': 'scripts/dummy.sh'}}}}}",,19.0,0.0,0.0,19.0,0.0,27.0,4.21,0.0,0.0,2.0,0.0,0.0,0.0,1.0,0.0,0.0,3.0
2593,{'alien.test.relationships.CapaToBeDeleted': {'derived_from': 'tosca.relationships.DependsOn'}},,2.0,0.0,0.0,2.0,0.0,3.0,1.58,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
573,"{'org.alien4cloud.diamond.agent_linux.nodes.DiamondLinuxAgent': {'description': 'Deploy a Diamond Agent on linux.\n', 'derived_from': 'org.alien4cloud.diamond.pub.nodes.DiamondAgent', 'properties': {'datasource_name': {'type': 'string', 'description': 'The datasource that connects grafana to graphite.\nWe need it to prepare grafana dashboards.\n', 'required': True, 'default': 'Graphite_DS'}, 'collectors_path': {'type': 'string', 'description': 'The path where the collector sources are (read only).', 'required': True, 'default': '/opt/ansible_diamond/env/share/diamond/collectors'}, 'collectors_conf_path': {'type': 'string', 'description': 'The path where the collector configuration are (read only).', 'required': True, 'default': '/etc/ansible_diamond/collectors'}}, 'attributes': {'dashboard_dir': {'get_operation_output': ['SELF', 'Standard', 'create', 'dashboard_dir']}, 'grafana_url': {'get_operation_output': ['SELF', 'Standard', 'configure', 'grafana_url']}, 'grafana_user': {'get_operation_output': ['SELF', 'Standard', 'configure', 'grafana_user']}, 'grafana_password': {'get_operation_output': ['SELF', 'Standard', 'configure', 'grafana_password']}, 'grafana_dashboads_urls': {'get_operation_output': ['SELF', 'Standard', 'start', 'grafana_dashboads_urls']}}, 'requirements': [{'data_endpoint': {'capability': 'org.alien4cloud.graphite.pub.capabilities.GraphiteDataEndpoint', 'relationship': 'org.alien4cloud.diamond.agent_linux.relationships.DiamondLinuxAgentConnectsToGraphite', 'occurrences': [0, 1]}}, {'grafana': {'capability': 'org.alien4cloud.grafana.pub.capabilities.GrafanaHttpEndpoint', 'relationship': 'org.alien4cloud.diamond.agent_linux.relationships.DiamondLinuxAgentConnectsToGrafana', 'occurrences': [0, 1]}}, {'host': {'capability': 'tosca.capabilities.Container', 'node': 'tosca.nodes.Compute', 'relationship': 'tosca.relationships.HostedOn', 'occurrences': [1, 1], 'node_filter': {'capabilities': [{'tosca.capabilities.OperatingSystem': {'properties': [{'type': {'equal': 'linux'}}, {'architecture': {'equal': 'x86_64'}}]}}]}}}], 'interfaces': {'Standard': {'create': {'inputs': {'ANSIBLE_VERBOSE': False, 'PLAYBOOK_ENTRY': 'create.yml', 'collectors_conf_path': {'get_property': ['SELF', 'collectors_conf_path']}}, 'implementation': 'playbook/playbook.ansible'}, 'configure': {'inputs': {'ANSIBLE_VERBOSE': False, 'PLAYBOOK_ENTRY': 'configure.yml', 'datasource_name': {'get_property': ['SELF', 'datasource_name']}}, 'implementation': 'playbook/playbook.ansible'}, 'start': {'inputs': {'ANSIBLE_VERBOSE': False, 'PLAYBOOK_ENTRY': 'start.yml', 'dashboard_dir': {'get_attribute': ['SELF', 'dashboard_dir']}, 'grafana_url': {'get_attribute': ['SELF', 'grafana_url']}, 'grafana_user': {'get_attribute': ['SELF', 'grafana_user']}, 'grafana_password': {'get_attribute': ['SELF', 'grafana_password']}}, 'implementation': 'playbook/playbook.ansible'}, 'stop': {'inputs': {'ANSIBLE_VERBOSE': False, 'PLAYBOOK_ENTRY': 'stop.yml'}, 'implementation': 'playbook/playbook.ansible'}, 'delete': {'inputs': {'ANSIBLE_VERBOSE': False, 'PLAYBOOK_ENTRY': 'delete.yml', 'dashboard_dir': {'get_attribute': ['SELF', 'dashboard_dir']}, 'grafana_url': {'get_attribute': ['SELF', 'grafana_url']}, 'grafana_user': {'get_attribute': ['SELF', 'grafana_user']}, 'grafana_password': {'get_attribute': ['SELF', 'grafana_password']}}, 'implementation': 'playbook/playbook.ansible'}}}}}",,146.0,0.0,0.0,99.0,0.0,216.0,6.11,0.0,0.0,1.0,0.0,0.0,0.0,5.0,0.0,0.0,0.0
2374,"{'org.alien4cloud.automation.cloudify.manager.v4.relationships.ConfigureOpenstackKey': {'derived_from': 'tosca.relationships.Root', 'interfaces': {'Configure': {'pre_configure_source': {'inputs': {'SSH_KEY_FILENAME': {'get_property': ['TARGET', 'key_file_name']}, 'KEYPAIR_NAME': {'get_property': ['TARGET', 'keypair_name']}}, 'implementation': 'scripts/openstack_configure_key.sh'}}}}}",,15.0,0.0,0.0,11.0,0.0,17.0,3.85,0.0,0.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,1.0
576,"{'org.alien4cloud.cloudify.manager.v3.nodes.Cloudify3AwsConfiguration': {'derived_from': 'org.alien4cloud.cloudify.manager.v4.nodes.CloudifyAwsConfiguration', 'description': 'Configure the cloudify manager for aws.', 'interfaces': {'Standard': {'start': {'inputs': {'SSH_KEY_FILENAME': {'get_property': ['HOST', 'ssh_key_filename']}, 'KEYPAIR_NAME': {'get_property': ['HOST', 'keypair_name']}, 'ADMIN_USERNAME': {'get_property': ['HOST', 'cloudify_api_v3', 'admin_username']}, 'ADMIN_PASSWORD': {'get_property': ['HOST', 'cloudify_api_v3', 'admin_password']}}, 'implementation': 'scripts/Cloudify3Manager/aws_do_configure.sh'}}}, 'artifacts': [{'resources': {'file': 'files/Cloudify3Manager', 'type': 'tosca.artifacts.File'}}]}}",,30.0,0.0,0.0,20.0,0.0,40.0,4.87,0.0,0.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,1.0
824,"{'org.alien4cloud.kubernetes.api.types.volume.PersistentVolumeClaimStorageClassSource': {'description': 'An extension of PersistentVolumeClaimSource that allows to specify a storageClass.\nIf no volume that match this claim is found in the PersistentVolume pool, a volume will be allocated in the IAAS.\nWhen using this kind of volume, your Kube admin should ensure to have a storageClass defined in the cluster.\n', 'derived_from': 'org.alien4cloud.kubernetes.api.types.volume.PersistentVolumeClaimSource', 'properties': {'storageClassName': {'type': 'string', 'default': 'default'}}}}",,10.0,0.0,0.0,7.0,0.0,58.0,5.41,0.0,0.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0
63,"{'tosca.nodes.WebApplication.TestApp': {'derived_from': 'tosca.nodes.WebApplication', 'capabilities': {'test_cap': {'type': 'tosca.capabilities.TestCapabilityAA'}}}}",,5.0,0.0,0.0,5.0,0.0,7.0,2.81,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
1077,"{'fastconnect.nodes.Equinox': {'description': 'This type represents an Equinox application server\n', 'tags': {'icon': '/images/equinox.png'}, 'properties': {'version': {'type': 'version', 'default': '3.9.1.v20140110-1610'}}, 'requirements': {'java': {'type': 'tosca.capabilities.Java'}}, 'capabilities': {'osgi_container': {'type': 'tosca.capabilities.OsgiContainer'}}}}",,14.0,0.0,0.0,14.0,0.0,26.0,4.32,0.0,0.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0
2176,"{'tosca.nodes.Container.WebApplication.Wordpress': {'description': 'Wordpress container from the Docker Hub repository\n', 'derived_from': 'tosca.nodes.Container.WebApplication', 'requirements': [{'wordpress_db_host': {'capability': 'tosca.capabilities.Endpoint.Database', 'relationship': 'tosca.relationships.ConnectsTo'}}, {'volume': {'capability': 'tosca.capabilities.Attachment', 'relationship': 'tosca.relationships.AttachesTo', 'occurrences': [0, 1]}}]}}",,13.0,0.0,0.0,11.0,0.0,25.0,4.48,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
246,"{'my.nodes.GSLB': {'derived_from': 'tosca.nodes.LoadBalancer', 'description': 'represents a Global Server Load Balancer.', 'properties': {'domain_name': {'description': 'Resolved domain name', 'type': 'string', 'required': True}, 'policy': {'description': 'Balancing policy', 'type': 'string', 'required': True, 'constraints': [{'valid_values': ['oredered_list', 'static_dns', 'round_robin', 'weighted_round_robin', 'least_loaded', 'geo_database']}]}}, 'interfaces': {'Standard': {'configure': {'implementation': 'scripts/gslb-configure.sh', 'inputs': {'policy': {'type': 'string'}, 'targets': {'type': 'string'}}}, 'create': {'implementation': 'scripts/gslb-create.sh', 'inputs': {'domain_name': {'type': 'string'}}}}}}}",,34.0,0.0,0.0,28.0,0.0,55.0,5.0,0.0,0.0,1.0,0.0,0.0,0.0,2.0,0.0,0.0,2.0
1503,"{'tosca.nodes.openstack.network.subnet': {'derived_from': 'tosca.nodes.network.Network', 'description': 'The TOSCA OpenStack Network subnet node type', 'properties': {'ip_version': {'type': 'integer', 'required': False, 'default': 4, 'constraints': [{'valid_values': [4, 6]}], 'description': 'The IP version of the requested network. Valid values are 4 for ipv4 or 6 for ipv6.\n'}, 'cidr': {'type': 'string', 'required': False, 'description': 'The cidr block of the requested network.\n'}, 'start_ip': {'type': 'string', 'required': False, 'description': 'The IP address to be used as the start of a pool of addresses within the full IP range derived from the cidr block.\n'}, 'end_ip': {'type': 'string', 'required': False, 'description': 'The IP address to be used as the end of a pool of addresses within the full IP range derived from the cidr block.\n'}, 'gateway_ip': {'type': 'string', 'required': False, 'description': 'The gateway IP address.\n'}, 'network_name': {'type': 'string', 'required': False, 'description': 'An identifier that represents an existing Network instance in the underlying cloud infrastructure or can be used as the name of the newly created network. If network_name is provided and no other properties are provided (with exception of network_id), then an existing network instance will be used. If network_name is provided alongside with more properties then a new network with this name will be created.\n'}, 'network_id': {'type': 'string', 'required': False, 'description': 'An identifier that represents an existing Network instance in the underlying cloud infrastructure. This property is mutually exclusive with all other properties except network_name. This can be used alone or together with network_name to identify an existing network.\n'}, 'segmentation_id': {'type': 'string', 'required': False, 'description': 'A segmentation identifier in the underlying cloud infrastructure. E.g. VLAN ID, GRE tunnel ID, etc..\n'}, 'network_type': {'type': 'string', 'required': False, 'description': 'It specifies the nature of the physical network in the underlying cloud infrastructure. Examples are flat, vlan, gre or vxlan. For flat and vlan types, physical_network should be provided too.\n'}, 'physical_network': {'type': 'string', 'required': False, 'description': 'It identifies the physical network on top of which the network is implemented, e.g. physnet1. This property is required if network_type is flat or vlan.\n'}, 'dhcp_enabled': {'type': 'boolean', 'required': False, 'default': True, 'description': 'Indicates should DHCP service be enabled on the network or not.\n'}, 'dns_nameservers': {'type': 'list', 'required': False, 'default': ['8.8.8.8', '8.8.4.4'], 'description': 'DNS nameserver'}}, 'attributes': {'link_id': {'type': 'string'}, 'network_id': {'type': 'string'}, 'network_name': {'type': 'string'}}, 'capabilities': {'link': {'type': 'tosca.capabilities.network.Linkable'}}, 'requirements': [{'link': {'capability': 'tosca.capabilities.network.Linkable', 'node': 'tosca.nodes.openstack.network', 'relationship': 'tosca.relationships.openstack.network.linked'}}], 'interfaces': {'Standard': {'type': 'tosca.interfaces.node.lifecycle.Standard', 'create': {'implementation': 'openstack_plugin.tasks.subnet:subnet_create', 'inputs': {'task_retries': 10, 'task_retry_interval': 10}}, 'delete': {'implementation': 'openstack_plugin.tasks.subnet:subnet_delete', 'inputs': {'task_retries': 10, 'task_retry_interval': 10}}}}}}",,105.0,0.0,0.0,85.0,0.0,399.0,6.87,0.0,0.0,1.0,0.0,0.0,0.0,12.0,0.0,0.0,0.0
1107,"{'org.alien4cloud.test.matching.nodes.LocationCustomImplTwo': {'derived_from': 'org.alien4cloud.test.matching.nodes.TopologyAbstractNode', 'description': 'A node to add as custom resource to the location (do not defined props values)', 'properties': {'type_variant_prop': {'type': 'integer'}, 'constraint_variant_prop': {'type': 'string', 'constraints': [{'min_length': 6}]}}, 'capabilities': {'my_capability': 'org.alien4cloud.test.matching.capabilities.CapabilityTypeTwo'}}}",,13.0,0.0,0.0,12.0,0.0,32.0,4.88,0.0,0.0,0.0,0.0,0.0,0.0,2.0,0.0,0.0,0.0
2750,"{'micro.relationships.InteractsWith': {'derived_from': 'micro.relationships.Root', 'valid_target_types': ['micro.capabilities.Node'], 'properties': {'circuit_breaker': {'type': 'boolean', 'default': False}, 'dynamic_discovery': {'type': 'boolean', 'default': False}, 'timeout': {'type': 'boolean', 'default': False}}}}",,14.0,0.0,0.0,13.0,0.0,21.0,3.49,0.0,0.0,0.0,0.0,0.0,0.0,3.0,0.0,0.0,0.0
191,"{'org.alien4cloud.monitoring.diamond.collectors.nodes.ElasticSearchCollector': {'derived_from': 'org.alien4cloud.monitoring.diamond.pub.nodes.DiamondCollector', 'description': 'Collect elasticsearch health metrics.', 'requirements': [{'collec_elasticsearch': {'capability': 'org.alien4cloud.storage.elasticsearch.pub.capabilities.ElasticSearchRestAPI', 'relationship': 'org.alien4cloud.monitoring.diamond.collectors.relationships.DiamondCollectElasticSearch', 'occurrences': [0, 1]}}, {'diamond': {'capability': 'org.alien4cloud.monitoring.diamond.pub.capabilities.DiamondCollectorContainer', 'relationship': 'org.alien4cloud.monitoring.diamond.agent_linux.relationships.DiamondCollectorHostedOnAgent', 'occurrences': [1, 1]}}]}}",,16.0,0.0,0.0,12.0,0.0,25.0,4.21,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
1279,"{'org.ystia.yorc.alien4cloud.nodes.YorcPlugin': {'description': 'Upload Yorc orchestrator plugin\n', 'derived_from': 'org.alien4cloud.alien4cloud.config.pub.nodes.OrchestratorConfigurator', 'requirements': [{'yorc': {'capability': 'org.ystia.yorc.pub.capabilities.YorcRestAPI', 'relationship': 'org.ystia.yorc.alien4cloud.relationships.ConnectsToYorc', 'occurrences': [1, 1]}}], 'attributes': {'orchestratorId': {'get_operation_output': ['SELF', 'Standard', 'start', 'orchestratorId']}}, 'properties': {'download_url': {'description': 'The URL used to download the Yorc plugin zip.', 'type': 'string', 'required': True, 'default': 'https://dl.bintray.com/ystia/yorc-a4c-plugin/releases/alien4cloud-yorc-plugin-3.1.0.zip'}, 'name': {'type': 'string', 'required': True, 'default': 'Yorc'}, 'discriminator': {'type': 'string', 'description': 'a prefix for all deployments', 'required': True, 'default': 'YourInitials'}, 'pluginId': {'type': 'string', 'required': True, 'default': 'alien4cloud-yorc-plugin'}, 'pluginBean': {'type': 'string', 'required': True, 'default': 'yorc-orchestrator-factory'}, 'yorc_address_ha': {'type': 'string', 'required': False}}, 'interfaces': {'Standard': {'start': {'inputs': {'alien_user': {'get_property': ['HOST', 'rest', 'user']}, 'alien_password': {'get_property': ['HOST', 'rest', 'password']}, 'alien_url': {'get_attribute': ['HOST', 'alien_url']}, 'download_url': {'get_property': ['SELF', 'download_url']}, 'orchestrator_name': {'get_property': ['SELF', 'name']}, 'pluginId': {'get_property': ['SELF', 'pluginId']}, 'pluginBean': {'get_property': ['SELF', 'pluginBean']}, 'discriminator': {'get_property': ['SELF', 'discriminator']}}, 'implementation': 'playbook/start.yml'}}}}}",,82.0,0.0,0.0,58.0,0.0,121.0,5.66,0.0,0.0,1.0,0.0,0.0,0.0,6.0,0.0,0.0,0.0
2659,"{'org.ystia.flink.linux.bash.relationships.TaskManagerToJobManager': {'derived_from': 'tosca.relationships.ConnectsTo', 'description': 'Connects a Flink TaskmManager to a Flink JobManager\n', 'valid_target_types': ['org.ystia.flink.linux.bash.nodes.JobManager'], 'interfaces': {'Configure': {'pre_configure_source': {'inputs': {'JOBMANAGER_IP': {'get_attribute': ['TARGET', 'ip_address']}, 'TASKMANAGER_IP': {'get_attribute': ['SOURCE', 'ip_address']}}, 'implementation': 'scripts/taskmanager_to_jobmanager.sh'}}}, 'artifacts': [{'scripts': {'file': 'scripts', 'type': 'tosca.artifacts.File'}}]}}",,22.0,0.0,0.0,17.0,0.0,34.0,4.79,0.0,0.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,1.0
1267,"{'tosca.nodes.network.Network': {'derived_from': 'tosca.nodes.Root', 'properties': {'ip_version': {'type': 'integer', 'required': False, 'default': 4, 'constraints': [{'valid_values': [4, 6]}]}, 'cidr': {'type': 'string', 'required': False}, 'start_ip': {'type': 'string', 'required': False}, 'end_ip': {'type': 'string', 'required': False}, 'gateway_ip': {'type': 'string', 'required': False}, 'network_name': {'type': 'string', 'required': False}, 'network_id': {'type': 'string', 'required': False}, 'segmentation_id': {'type': 'string', 'required': False}, 'network_type': {'type': 'string', 'required': False}, 'physical_network': {'type': 'string', 'required': False}, 'dhcp_enabled': {'type': 'boolean', 'required': False, 'default': True}}, 'capabilities': {'link': {'type': 'tosca.capabilities.network.Linkable'}}}}",,45.0,0.0,0.0,43.0,0.0,71.0,4.01,0.0,0.0,0.0,0.0,0.0,0.0,11.0,0.0,0.0,0.0
1704,"{'tosca.nodes.indigo.Container.Runtime.Docker': {'derived_from': 'tosca.nodes.SoftwareComponent', 'capabilities': {'host': {'type': 'tosca.capabilities.indigo.Container.Docker'}, 'scalable': {'type': 'tosca.capabilities.Scalable'}}}}",,7.0,0.0,0.0,7.0,0.0,10.0,3.12,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
906,"{'tosker.nodes.Container': {'derived_from': 'tosca.nodes.Root', 'attributes': {'id': {'type': 'string'}, 'private_address': {'type': 'string'}, 'public_address': {'type': 'string'}, 'ports': {'type': 'map'}, 'env_variable': {'type': 'map'}, 'command': {'type': 'string'}, 'share_data': {'type': 'map'}, 'supported_sw': {'type': 'map'}, 'os_distribution': {'type': 'string'}}, 'properties': {'ports': {'type': 'map', 'required': False}, 'env_variable': {'type': 'map', 'required': False}, 'command': {'type': 'string', 'required': False}, 'share_data': {'type': 'map', 'required': False}, 'supported_sw': {'type': 'map', 'required': False}, 'os_distribution': {'type': 'string', 'required': False}}, 'requirements': [{'storage': {'capability': 'tosca.capabilities.Attachment', 'occurrences': [0, 'UNBOUNDED'], 'node': 'tosker.nodes.Volume', 'relationship': 'tosca.relationships.AttachesTo'}}, {'connection': {'capability': 'tosca.capabilities.Endpoint', 'occurrences': [0, 'UNBOUNDED'], 'node': 'tosker.nodes.Root', 'relationship': 'tosca.relationships.ConnectsTo'}}, {'dependency': {'capability': 'tosca.capabilities.Node', 'occurrences': [0, 'UNBOUNDED'], 'node': 'tosker.nodes.Root', 'relationship': 'tosca.relationships.DependsOn'}}], 'capabilities': {'host': {'type': 'tosca.capabilities.Container', 'valid_source_types': ['tosker.nodes.Software'], 'occurrences': [0, 'UNBOUNDED']}, 'endpoint': {'type': 'tosca.capabilities.Endpoint', 'valid_source_types': ['tosker.nodes.Software', 'tosker.nodes.Container'], 'occurrences': [0, 'UNBOUNDED']}, 'feature': {'type': 'tosca.capabilities.Node', 'valid_source_types': ['tosker.nodes.Software', 'tosker.nodes.Container'], 'occurrences': [0, 'UNBOUNDED']}}}}",,86.0,0.0,0.0,69.0,0.0,120.0,4.88,0.0,0.0,0.0,0.0,0.0,0.0,6.0,0.0,0.0,0.0
1488,"{'tosca.asyncssh.software_configuration.script': {'derived_from': 'tosca.nodes.Root', 'properties': {'username': {'type': 'string', 'required': True}, 'password': {'type': 'string', 'default': '', 'required': False}, 'port': {'type': 'integer', 'required': False, 'default': 22}, 'install_script': {'type': 'string', 'required': True}, 'uninstall_script': {'type': 'string', 'required': False, 'default': ''}}, 'requirements': [{'compute': {'node': 'tosca.nodes.Root', 'relationship': 'tosca.relationships.DependsOn', 'occurrences': [0, 1]}}, {'environment': {'node': 'tosca.nodes.Root', 'relationship': 'tosca.asyncssh.software_configuration.inject_environment', 'occurrences': [0, 1]}}], 'interfaces': {'Standard': {'type': 'tosca.interfaces.node.lifecycle.Standard', 'create': {'implementation': 'asyncssh_plugin.tasks:create'}, 'start': {'implementation': 'asyncssh_plugin.tasks:install', 'inputs': {'task_retries': 10, 'task_retry_interval': 10}}, 'stop': {'implementation': 'asyncssh_plugin.tasks:uninstall', 'inputs': {'task_retries': 10, 'task_retry_interval': 10}}, 'delete': {'implementation': 'asyncssh_plugin.tasks:delete'}}}}}",,51.0,0.0,0.0,47.0,0.0,78.0,5.19,0.0,0.0,1.0,0.0,0.0,0.0,5.0,0.0,0.0,0.0
578,"{'org.alien4cloud.cloudify.hostpool.awsfeeder.nodes.AWSHostpoolFeeder': {'derived_from': 'tosca.nodes.SoftwareComponent', 'description': 'Feed a hostpool with many instanciated EC2 instances.\nYou can use custom commands to populate and clear the host pool and EC2.\nYou can share EC2 instances between several Hostpool hosts (if host_per_instance > 1). Ideal for isolated and compatibles components, load tests, or containers but just understand it will be a colloc ;)\nHostpool is cleared and instances are stopped at Standard.stop operation.\nTODO: add tags\n', 'metadata': {'icon': 'images/aws.png'}, 'properties': {'aws_access_key': {'type': 'string', 'required': True, 'description': 'The AWS access key'}, 'aws_secret_key': {'type': 'string', 'required': True, 'description': 'The AWS secret key'}, 'key_name': {'type': 'string', 'required': True, 'description': 'The AWS key name'}, 'key_content': {'type': 'string', 'required': True, 'description': 'The AWS key'}, 'region': {'type': 'string', 'required': False, 'description': 'The region where to start instances', 'default': 'eu-west-1'}, 'instance_groups': {'type': 'string', 'required': True, 'description': 'Security groups the instances will be associated with'}, 'instance_username': {'type': 'string', 'required': True, 'default': 'ubuntu', 'constraints': [{'valid_values': ['ubuntu', 'ec2-user']}], 'description': 'The user to use to connect to the instance'}, 'instance_type': {'type': 'string', 'required': True, 'default': 't2.nano', 'constraints': [{'valid_values': ['t2.nano', 't2.small', 't2.medium', 'm4.large', 'c4.8xlarge']}], 'description': 'The AWS instance type'}, 'instance_image': {'type': 'string', 'required': True, 'constraints': [{'valid_values': ['ami-4c4b003b', 'ami-47a23a30']}], 'default': 'ami-47a23a30', 'description': 'The AWS ami (Centos:4c or Ubuntu:47)'}, 'instance_count': {'type': 'integer', 'required': True, 'default': 1, 'description': 'Number of instances to start'}, 'host_per_instance': {'type': 'integer', 'required': True, 'default': 1, 'description': 'Number of host to declare in hostpool per EC2 instance'}, 'instance_name': {'type': 'string', 'required': True, 'default': 'HostpoolInstance', 'description': 'The AWS instance name'}, 'instance_os': {'type': 'string', 'required': True, 'default': 'linux', 'description': 'The instance os for hostpool config', 'constraints': [{'valid_values': ['linux', 'windows']}]}}, 'attributes': {'hostpool_url': {'get_property': ['SELF', 'instance_name']}}, 'requirements': [{'hostpool': {'capability': 'org.alien4cloud.cloudify.hostpool.pub.capabilities.HostPoolServiceApi', 'relationship': 'org.alien4cloud.cloudify.hostpool.awsfeeder.relationships.HostpoolFeederConnectToHostpool', 'occurrences': [1, 1]}}], 'interfaces': {'Standard': {'stop': {'inputs': {'ANSIBLE_VERBOSE': False, 'PLAYBOOK_ENTRY': 'stop.yml', 'aws_access_key': {'get_property': ['SELF', 'aws_access_key']}, 'aws_secret_key': {'get_property': ['SELF', 'aws_secret_key']}, 'key_name': {'get_property': ['SELF', 'key_name']}, 'key_content': {'get_property': ['SELF', 'key_content']}, 'region': {'get_property': ['SELF', 'region']}, 'instance_name': {'get_property': ['SELF', 'instance_name']}, 'instance_count': {'get_property': ['SELF', 'instance_count']}}, 'implementation': 'playbook/playbook.ansible'}}, 'org.alien4cloud.cloudify.hostpool.awsfeeder.Admin': {'clear': {'description': ""Clear Hostpool from all it's entries and shutdown related EC2 instances.\nThe 'instance_name' property is used to detect and stop EC2 instances.\n"", 'inputs': {'ANSIBLE_VERBOSE': False, 'PLAYBOOK_ENTRY': 'stop.yml', 'aws_access_key': {'get_property': ['SELF', 'aws_access_key']}, 'aws_secret_key': {'get_property': ['SELF', 'aws_secret_key']}, 'key_name': {'get_property': ['SELF', 'key_name']}, 'key_content': {'get_property': ['SELF', 'key_content']}, 'region': {'get_property': ['SELF', 'region']}, 'instance_name': {'get_property': ['SELF', 'instance_name']}, 'instance_count': {'get_property': ['SELF', 'instance_count']}}, 'implementation': 'playbook/playbook.ansible'}, 'feed': {'description': 'Start EC2 instances and populate Hostpool.\nThe node properties are used for instance properties and count.\n', 'inputs': {'ANSIBLE_VERBOSE': False, 'PLAYBOOK_ENTRY': 'feed.yml', 'aws_access_key': {'get_property': ['SELF', 'aws_access_key']}, 'aws_secret_key': {'get_property': ['SELF', 'aws_secret_key']}, 'key_name': {'get_property': ['SELF', 'key_name']}, 'key_content': {'get_property': ['SELF', 'key_content']}, 'region': {'get_property': ['SELF', 'region']}, 'instance_name': {'get_property': ['SELF', 'instance_name']}, 'instance_count': {'get_property': ['SELF', 'instance_count']}, 'host_per_instance': {'get_property': ['SELF', 'host_per_instance']}, 'instance_username': {'get_property': ['SELF', 'instance_username']}, 'instance_groups': {'get_property': ['SELF', 'instance_groups']}, 'instance_image': {'get_property': ['SELF', 'instance_image']}, 'instance_type': {'get_property': ['SELF', 'instance_type']}, 'instance_os': {'get_property': ['SELF', 'instance_os']}}, 'implementation': 'playbook/playbook.ansible'}, 'feed_custom': {'description': 'Start EC2 instances and populate Hostpool.\nThe node properties are used for instance properties and count.\n', 'inputs': {'ANSIBLE_VERBOSE': False, 'PLAYBOOK_ENTRY': 'feed.yml', 'aws_access_key': {'get_property': ['SELF', 'aws_access_key']}, 'aws_secret_key': {'get_property': ['SELF', 'aws_secret_key']}, 'key_name': {'get_property': ['SELF', 'key_name']}, 'key_content': {'get_property': ['SELF', 'key_content']}, 'region': {'get_property': ['SELF', 'region']}, 'instance_os': {'get_property': ['SELF', 'instance_os']}, 'instance_groups': {'get_property': ['SELF', 'instance_groups']}, 'instance_count': {'type': 'integer', 'required': True, 'default': 1}, 'instance_username': {'type': 'string', 'required': True, 'default': 'ubuntu', 'constraints': [{'valid_values': ['ubuntu', 'ec2-user']}], 'description': 'The user to use to connect to the instance'}, 'instance_type': {'type': 'string', 'required': True, 'default': 't2.nano', 'constraints': [{'valid_values': ['t2.nano', 't2.small', 't2.medium', 'm4.large', 'c4.8xlarge']}], 'description': 'The AWS instance type'}, 'instance_image': {'type': 'string', 'required': True, 'constraints': [{'valid_values': ['ami-4c4b003b', 'ami-47a23a30']}], 'default': 'ami-47a23a30', 'description': 'The AWS ami (Centos:4c or Ubuntu:47)'}, 'host_per_instance': {'type': 'integer', 'required': True, 'default': 1, 'description': 'Number of host to declare in hostpool per EC2 instance'}, 'instance_name': {'type': 'string', 'required': True, 'default': 'HostpoolInstance', 'description': 'The AWS instance name'}}, 'implementation': 'playbook/playbook.ansible'}}}}}",,313.0,2.0,0.0,211.0,0.0,592.0,6.48,0.0,0.0,2.0,0.0,0.0,0.0,13.0,0.0,0.0,0.0
2655,"{'org.ystia.mysql.linux.bash.relationships.HostedOn.MySQLServer': {'derived_from': 'org.ystia.relationships.HostedOn', 'description': 'This type represents a hosting relationship between MySQLServer and MySQLDataBase nodes components\n', 'valid_target_types': ['org.ystia.mysql.pub.capabilities.Container.MySQLServer']}}",,6.0,0.0,0.0,4.0,0.0,18.0,4.17,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
546,"{'org.alien4cloud.alien4cloud.demo.nodes.Alien4CloudDemo': {'derived_from': 'org.alien4cloud.alien4cloud.webapp.nodes.Alien4Cloud', 'description': 'Add backup/restore features to the A4C webapp.\n'}}",,3.0,0.0,0.0,3.0,0.0,11.0,3.46,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
205,"{'org.alien4cloud.automation.a4c.config.location_resources.cfy_byon.nodes.ByonLocationResourcesConfigurator': {'description': 'Configure a BYON location for A4C with a single on-demand resource\n', 'derived_from': 'org.alien4cloud.automation.a4c.config.location.nodes.SimpleLocationConfigurator', 'properties': {'type': {'type': 'string', 'required': True, 'default': 'byon', 'constraints': [{'valid_values': ['byon']}]}, 'resourceType': {'type': 'string', 'required': True, 'default': 'alien.cloudify.byon.nodes.LinuxCompute'}, 'resourceName': {'type': 'string', 'required': True, 'default': 'MyResource'}, 'resourceArchiveName': {'type': 'string', 'required': True, 'default': 'cloudify-byon-types'}, 'resourceArchiveVersion': {'type': 'string', 'required': True, 'default': '1.4.0'}, 'resourceAgentInstallMethod': {'type': 'string', 'required': True, 'default': 'none'}}, 'requirements': [{'hostpool': {'capability': 'org.alien4cloud.automation.cloudify.hostpool.pub.capabilities.HostPoolServiceApi', 'relationship': 'org.alien4cloud.automation.a4c.config.location_resources.cfy_byon.LocationConnectsToHostpool', 'occurrences': [1, 1]}}], 'interfaces': {'Standard': {'start': {'inputs': {'ANSIBLE_VERBOSE': False, 'PLAYBOOK_ENTRY': 'create_byon_location_resource.yml', 'orchestratorId': {'get_attribute': ['HOST', 'orchestratorId']}, 'locationId': {'get_attribute': ['SELF', 'locationId']}, 'alien_url': {'get_attribute': ['HOST', 'alien_url']}, 'alien_user': {'get_attribute': ['HOST', 'alien_user']}, 'alien_password': {'get_attribute': ['HOST', 'alien_password']}, 'resourceType': {'get_property': ['SELF', 'resourceType']}, 'resourceName': {'get_property': ['SELF', 'resourceName']}, 'resourceArchiveName': {'get_property': ['SELF', 'resourceArchiveName']}, 'resourceArchiveVersion': {'get_property': ['SELF', 'resourceArchiveVersion']}, 'resourceAgentInstallMethod': {'get_property': ['SELF', 'resourceAgentInstallMethod']}}, 'implementation': 'playbook/playbook.ansible'}}}}}",,85.0,0.0,0.0,62.0,0.0,120.0,5.51,0.0,0.0,1.0,0.0,0.0,0.0,6.0,0.0,0.0,0.0
1916,{'tosca.nodes.TMForum.Models.SIDModels.ResourceDomain.ResourceABE.PhysicalResource.Hardware.ManagedHardware.PhysicalContainer': {'derived_from': 'tosca.nodes.TMForum.Models.SIDModels.ResourceDomain.ResourceABE.PhysicalResource.Hardware.ManagedHardware'}},,2.0,0.0,0.0,2.0,0.0,3.0,1.58,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
2791,"{'tosca.relationships.AttachesTo': {'metadata': {'shorthand_name': 'AttachesTo', 'type_qualified_name': 'tosca:AttachesTo', 'type_uri': 'tosca.relationships.AttachesTo'}, 'derived_from': 'tosca.relationships.Root', 'valid_target_types': ['tosca.capabilities.Attachment'], 'properties': {'location': {'type': 'string', 'constraints': [{'min_length': 1}]}, 'device': {'type': 'string', 'required': False}}}}",,16.0,0.0,0.0,15.0,0.0,24.0,4.33,0.0,0.0,0.0,0.0,0.0,0.0,2.0,0.0,0.0,0.0
1463,"{'org.ystia.yorc.samples.kube.containers.nodes.Graphite': {'derived_from': 'tosca.nodes.Container.Application.DockerContainer', 'metadata': {'icon': 'images/graphite.png'}, 'capabilities': {'http_endpoint': {'type': 'org.ystia.yorc.samples.kube.containers.capabilities.Graphite', 'description': 'Endpoint to graphite Web UI'}, 'data_collection': {'type': 'org.ystia.yorc.samples.kube.containers.capabilities.GraphiteDataCollectionEndpoint', 'description': 'Endpoint to collect data'}}, 'interfaces': {'Standard': {'create': {'implementation': {'file': 'sitespeedio/graphite', 'repository': 'docker', 'type': 'tosca.artifacts.Deployment.Image.Container.Docker'}}}}}}",,18.0,0.0,0.0,18.0,0.0,34.0,4.77,0.0,0.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
14,{'tosca.nodes.mec.VL.ELAN': {'derived_from': 'tosca.nodes.mec.VL'}},,2.0,0.0,0.0,2.0,0.0,3.0,1.58,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
2705,"{'org.ystia.relationships.ConnectsTo': {'derived_from': 'tosca.relationships.ConnectsTo', 'description': 'Abstract Ystia ConnectsTo relationships', 'artifacts': [{'utils_scripts': {'type': 'tosca.artifacts.File', 'file': 'utils_scripts'}}]}}",,7.0,0.0,0.0,7.0,0.0,14.0,3.66,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
1300,"{'org.ystia.kubernetes.pub.nodes.KubernetesWorker': {'abstract': True, 'derived_from': 'tosca.nodes.Root', 'tags': {'icon': '/images/kubernetes-worker-icon.png'}, 'description': 'A KubernetesWorker contains Kubernetes services used to run pods.\n', 'requirements': [{'api_server': {'capability': 'org.ystia.kubernetes.pub.capabilities.KubernetesAPIServer', 'node': 'org.ystia.kubernetes.pub.nodes.KubernetesMaster', 'occurrences': [1, 1]}}]}}",,13.0,0.0,0.0,11.0,0.0,27.0,4.68,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
1993,"{'org.alien4cloud.nodes.AuroraScheduler': {'derived_from': 'tosca.nodes.SoftwareComponent', 'description': 'Aurora Scheduler\n', 'tags': {'icon': 'images/aurora_icon.png'}, 'properties': {'cluster_name': {'type': 'string', 'required': True, 'default': 'devcluster'}}, 'attributes': {'external_url': {'concat': ['http://', {'get_attribute': ['HOST', 'public_ip_address']}, ':8081/scheduler']}}, 'requirements': [{'host': {'capability': 'org.alien4cloud.capabilities.MesosMaster', 'relationship': 'org.alien4cloud.relationships.AuroraSchedulerHostedOnMaster', 'occurrences': [1, 1], 'node_filter': {'properties': [{'component_version': {'equal': '0.25.0-0.2.70'}}]}}}], 'interfaces': {'Standard': {'create': {'inputs': {'OS': {'get_property': ['HOST', 'os', 'distribution']}}, 'implementation': 'scripts/install_scheduler.sh'}, 'configure': {'inputs': {'AURORA_ZK_ENDPOINTS': {'get_attribute': ['HOST', 'zk_endpoints']}, 'AURORA_MESOS_MASTER': {'get_attribute': ['HOST', 'master_url']}, 'AURORA_CLUSTER_NAME': {'get_property': ['SELF', 'cluster_name']}, 'HOSTNAME': {'get_attribute': ['HOST', 'public_ip_address']}}, 'implementation': 'scripts/configure_scheduler.sh'}, 'start': {'inputs': {'OS': {'get_property': ['HOST', 'os', 'distribution']}}, 'implementation': 'scripts/start_scheduler.sh'}, 'stop': {'inputs': {'OS': {'get_property': ['HOST', 'os', 'distribution']}}, 'implementation': 'scripts/stop_scheduler.sh'}}}}}",,74.0,0.0,0.0,51.0,0.0,88.0,5.62,0.0,0.0,1.0,0.0,0.0,0.0,2.0,0.0,0.0,4.0
410,"{'tosca.nodes.nfv.VDU.Compute': {'metadata': {'puccini.normative': 'true', 'specification.citation': '[TOSCA-Simple-Profile-NFV-v1.0-csd04]', 'specification.location': '5.9.2'}, 'description': 'The TOSCA nfv.VDU.Compute node type represents the virtual compute part of a VDU entity which it mainly describes the deployment and operational behavior of a VNF component (VNFC), as defined by [ETSI NFV IFA011].', 'derived_from': 'tosca.nodes.Compute', 'properties': {'name': {'description': 'Human readable name of the VDU.', 'type': 'string', 'required': True}, 'description': {'description': 'Human readable description of the VDU.', 'type': 'string', 'required': True}, 'boot_order': {'description': 'The key indicates the boot index (lowest index defines highest boot priority). The Value references a descriptor from which a valid boot device is created e.g. VirtualStorageDescriptor from which a VirtualStorage instance is created. If no boot order is defined the default boot order defined in the VIM or NFVI shall be used.', 'type': 'list', 'entry_schema': {'type': 'string'}, 'required': False}, 'nfvi_constraints': {'description': 'Describes constraints on the NFVI for the VNFC instance(s) created from this VDU. For example, aspects of a secure hosting environment for the VNFC instance that involve additional entities or processes. More software images can be attached to the virtualization container using virtual_storage.', 'type': 'list', 'entry_schema': {'type': 'string'}, 'required': False}, 'configurable_properties': {'description': 'Describes the configurable properties of all VNFC instances based on this VDU.', 'type': 'map', 'entry_schema': {'type': 'tosca.datatypes.nfv.VnfcConfigurableProperties'}, 'required': True}}, 'attributes': {'private_address': {'type': 'string', 'status': 'deprecated'}, 'public_address': {'type': 'string', 'status': 'deprecated'}, 'networks': {'type': 'map', 'entry_schema': {'type': 'tosca.datatypes.network.NetworkInfo'}, 'status': 'deprecated'}, 'ports': {'type': 'map', 'entry_schema': {'type': 'tosca.datatypes.network.PortInfo'}, 'status': 'deprecated'}}, 'capabilities': {'virtual_compute': {'description': 'Describes virtual compute resources capabilities.', 'type': 'tosca.capabilities.nfv.VirtualCompute'}, 'virtual_binding': {'description': 'Defines ability of VirtualBindable.', 'type': 'tosca.capabilities.nfv.VirtualBindable'}, 'monitoring_parameter': {'description': 'Monitoring parameter, which can be tracked for a VNFC based on this VDU. Examples include: memory-consumption, CPU-utilisation, bandwidth-consumption, VNFC downtime, etc.', 'type': 'tosca.capabilities.nfv.Metric'}}, 'artifacts': {'sw_image': {'description': 'Describes the software image which is directly loaded on the virtualization container realizing this virtual storage.', 'file': '', 'type': 'tosca.artifacts.nfv.SwImage'}}}}",,79.0,0.0,0.0,66.0,0.0,298.0,6.8,0.0,0.0,0.0,0.0,0.0,0.0,5.0,0.0,0.0,0.0
1035,"{'test.nodes.Java': {'derived_from': 'test.nodes.Root', 'abstract': False, 'requirements': {'hosted': {'type': 'test.requirements.hosting', 'lower_bound': 0, 'upper_bound': 'unbounded'}}}}",,8.0,0.0,0.0,8.0,0.0,13.0,3.7,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
1651,"{'org.alien4cloud.kubernetes.api.types.HorizontalPodAutoscaler': {'derived_from': 'org.alien4cloud.kubernetes.api.types.Base', 'description': 'A kubernetes HorizontalPodAutoscaler object\nsee https://v1-7.docs.kubernetes.io/docs/api-reference/v1.7/#horizontalpodautoscaler-v2alpha1-autoscaling\n', 'properties': {'apiVersion': {'type': 'string', 'default': 'autoscaling/v2alpha1', 'constraints': [{'equal': 'autoscaling/v2alpha1'}]}, 'kind': {'type': 'string', 'default': 'HorizontalPodAutoscaler', 'constraints': [{'equal': 'HorizontalPodAutoscaler'}]}, 'spec': {'type': 'org.alien4cloud.kubernetes.api.datatypes.autoscaler.HorizontalPodAutoscalerSpec'}}}}",,16.0,0.0,1.0,16.0,0.0,29.0,4.19,0.0,0.0,0.0,0.0,0.0,0.0,3.0,0.0,0.0,0.0
867,"{'tosca.nodes.ObjectStorage': {'derived_from': 'tosca.nodes.Root', 'description': 'The TOSCA ObjectStorage node represents storage that provides the ability to store data as objects (or BLOBs of data) without consideration for the underlying filesystem or devices.\n', 'properties': {'name': {'type': 'string', 'description': 'The logical name of the object store (or container).'}, 'size': {'type': 'scalar-unit.size', 'description': 'The requested initial storage size (default unit is in Gigabytes).', 'constraints': [{'greater_or_equal': '0 GB'}]}, 'maxsize': {'type': 'scalar-unit.size', 'description': 'The requested maximum storage size (default unit is in Gigabytes).', 'constraints': [{'greater_or_equal': '0 GB'}]}}, 'capabilities': {'storage_endpoint': {'type': 'tosca.capabilities.Endpoint'}}}}",,22.0,0.0,0.0,20.0,0.0,85.0,5.61,0.0,0.0,0.0,0.0,0.0,0.0,3.0,0.0,0.0,0.0
1986,"{'org.alien4cloud.nodes.MesosMaster': {'derived_from': 'tosca.nodes.SoftwareComponent', 'description': 'A Mesos master agent.\n', 'tags': {'icon': '/images/mesos_icon.png'}, 'properties': {'firewall_rules': {'type': 'string', 'required': False}, 'hooks': {'type': 'string', 'required': False, 'description': 'A comma-separated list of hook modules to be installed inside master/slave.\n'}, 'modules': {'type': 'string', 'required': False, 'description': 'List of modules in a JSON-format to be loaded and be available to the internal subsystems.\n'}, 'work_dir': {'type': 'string', 'default': '/var/lib/mesos'}, 'log_dir': {'type': 'string', 'default': '/var/log/mesos', 'required': False}, 'port': {'type': 'integer', 'default': 5050}, 'cluster_name': {'type': 'string', 'default': 'Mesos cluster', 'required': False}}, 'artifacts': [{'zoo_config': {'file': 'artifacts/zoo.cfg', 'type': 'tosca.artifacts.File'}}], 'attributes': {'external_url': {'concat': ['http://', {'get_attribute': ['HOST', 'public_ip_address']}, ':', {'get_property': ['SELF', 'port']}]}, 'master_url': {'concat': ['zk://', {'get_operation_output': ['SELF', 'Standard', 'configure', 'zk_endpoints']}, '/mesos']}, 'zk_endpoints': {'get_operation_output': ['SELF', 'Standard', 'configure', 'zk_endpoints']}}, 'capabilities': {'master': 'org.alien4cloud.capabilities.MesosMaster', 'host': 'org.alien4cloud.capabilities.MesosMasterHost'}, 'requirements': [{'host': {'capability': 'tosca.capabilities.Container', 'node': 'tosca.nodes.Compute', 'relationship': 'tosca.relationships.HostedOn', 'occurrences': [1, 1], 'node_filter': {'capabilities': [{'tosca.capabilities.OperatingSystem': {'properties': [{'type': {'equal': 'linux'}}, {'architecture': {'equal': 'x86_64'}}, {'distribution': {'valid_values': ['debian', 'rhel', 'ubuntu', 'centos']}}]}}]}}}], 'interfaces': {'Standard': {'create': {'inputs': {'OS_DISTR': {'get_property': ['HOST', 'os', 'distribution']}, 'OS_VERS': {'get_property': ['HOST', 'os', 'version']}, 'IP': {'get_attribute': ['HOST', 'ip_address']}, 'MESOS_VERSION': {'get_property': ['SELF', 'component_version']}}, 'implementation': 'scripts/install_mesos.sh'}, 'configure': {'inputs': {'MESOS_CLUSTER': {'get_property': ['SELF', 'cluster_name']}, 'MESOS_IP': {'get_attribute': ['HOST', 'ip_address']}, 'MESOS_PORT': {'get_property': ['SELF', 'port']}, 'MESOS_HOSTNAME': {'get_attribute': ['HOST', 'public_ip_address']}, 'MESOS_WORK_DIR': {'get_property': ['SELF', 'work_dir']}, 'MESOS_LOG_DIR': {'get_property': ['SELF', 'log_dir']}}, 'implementation': 'scripts/master/configure.sh'}, 'start': {'implementation': 'scripts/master/start.sh'}, 'stop': {'implementation': 'scripts/master/stop.sh'}}}}}",,141.0,0.0,0.0,96.0,0.0,203.0,6.53,0.0,0.0,1.0,0.0,0.0,0.0,10.0,0.0,0.0,4.0
1525,"{'tosca.relationships.openstack.network.port.security_group.rule': {'derived_from': 'tosca.relationships.Root', 'valid_target_types': ['tosca.nodes.openstack.network.port.security_group.rule'], 'interfaces': {'Configure': {'type': 'tosca.interfaces.relationship.Configure', 'link': {'implementation': 'openstack_plugin.tasks.security_group:connect_security_groups_rule'}, 'unlink': {'implementation': 'openstack_plugin.tasks.security_group:disconnect_security_groups_rule'}}}}}",,11.0,0.0,0.0,10.0,0.0,15.0,3.77,0.0,0.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
556,"{'org.alien4cloud.samba.samba_sh.nodes.SambaServer': {'derived_from': 'org.alien4cloud.samba.pub.nodes.SambaServer', 'description': 'Configure a samba server\n', 'tags': {'icon': '/images/samba.png'}, 'properties': {'share_name': {'type': 'string', 'default': 'ALIEN4CLOUD'}, 'share_path': {'type': 'string', 'default': '/srv/samba/alien4cloud'}}, 'capabilities': {'smb_server': 'org.alien4cloud.samba.pub.capabilities.SambaServer'}, 'interfaces': {'Standard': {'create': 'scripts/smbServer/install.sh', 'configure': {'inputs': {'SHARE_NAME': {'get_property': ['SELF', 'share_name']}, 'SHARE_PATH': {'get_property': ['SELF', 'share_path']}}, 'implementation': 'scripts/smbServer/configure.sh'}, 'start': 'scripts/smbServer/start.sh', 'stop': 'scripts/smbServer/stop.sh'}}, 'artifacts': [{'config': {'file': 'config/samba/smb.conf', 'type': 'tosca.artifacts.File'}}, {'commons': {'file': 'scripts/commons', 'type': 'tosca.artifacts.File'}}]}}",,37.0,0.0,0.0,33.0,0.0,56.0,5.38,0.0,0.0,1.0,0.0,0.0,0.0,2.0,0.0,0.0,4.0
2793,"{'radon.relationships.datapipelines.ConnectNiFi': {'derived_from': 'tosca.relationships.ConnectsTo', 'description': 'Connecting two nifi data pipelines for forwarding data. The pipelines should be on same server.', 'interfaces': {'Configure': {'operations': {'post_configure_source': {'inputs': {'source_pipeline_id': {'default': {'get_attribute': ['SOURCE', 'id']}}, 'target_pipeline_id': {'default': {'get_attribute': ['TARGET', 'id']}}, 'source_pipeline_server_ip': {'default': {'get_attribute': ['SOURCE', 'host', 'host', 'public_address']}}, 'target_pipeline_server_ip': {'default': {'get_attribute': ['TARGET', 'host', 'host', 'public_address']}}}, 'implementation': {'primary': 'dpp/connectPipelines.yml'}}}}}}}",,35.0,0.0,0.0,22.0,0.0,51.0,5.01,0.0,4.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
2154,"{'dcae.nodes.ExistingTopic': {'derived_from': 'cloudify.dcae.nodes.Root', 'properties': {'fqtn': {'type': 'string'}}, 'capabilities': {'topic': {'type': 'dcae.capabilities.dmmap.topic'}}}}",,8.0,0.0,0.0,8.0,0.0,11.0,3.28,0.0,0.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0
1507,"{'tosca.nodes.openstack.network.port.security_group': {'derived_from': 'tosca.nodes.Root', 'properties': {'security_group_name': {'type': 'string', 'required': False}, 'security_group_id': {'type': 'string', 'required': False}, 'description': {'type': 'string', 'required': False}}, 'attributes': {'security_group_id': {'type': 'string'}}, 'interfaces': {'Standard': {'type': 'tosca.interfaces.node.lifecycle.Standard', 'create': {'implementation': 'openstack_plugin.tasks.security_group:security_group_create'}, 'delete': {'implementation': 'openstack_plugin.tasks.security_group:security_group_delete'}}}}}",,22.0,0.0,0.0,22.0,0.0,33.0,4.04,0.0,0.0,1.0,0.0,0.0,0.0,3.0,0.0,0.0,0.0
1763,{'cloudshell.nodes.Cisco 5548': {'derived_from': 'cloudshell.nodes.resource'}},,2.0,0.0,0.0,2.0,0.0,3.0,2.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
1313,"{'org.ystia.haproxy.linux.bash.nodes.HAProxyHTTP': {'derived_from': 'org.ystia.nodes.SoftwareComponent', 'description': 'HAProxy Server for HTTP connection on linux', 'tags': {'icon': '/images/logo.png'}, 'properties': {'port': {'type': 'integer', 'required': True, 'description': 'Port number for mode HTTP'}}, 'requirements': [{'host': {'capability': 'org.ystia.haproxy.pub.capabilities.Container.HAProxy', 'relationship': 'tosca.relationships.HostedOn', 'occurrences': [0, 'unbounded']}}], 'interfaces': {'Standard': {'configure': {'inputs': {'PORT': {'get_property': ['SELF', 'port']}}, 'implementation': 'scripts/haproxy_http/configure.sh'}, 'start': {'implementation': 'scripts/haproxy/reload.sh'}}}, 'artifacts': [{'scripts': {'type': 'tosca.artifacts.File', 'file': 'scripts'}}]}}",,32.0,0.0,0.0,28.0,0.0,54.0,5.5,0.0,0.0,1.0,0.0,0.0,0.0,1.0,0.0,0.0,2.0
1311,"{'org.ystia.nifi.linux.bash.nodes.NiFi': {'derived_from': 'org.ystia.consul.pub.nodes.ConsulUser', 'description': 'Apache NiFi component which enables the automation of data flow between systems', 'tags': {'icon': '/images/nifi.png'}, 'attributes': {'java_home': {'get_operation_output': ['SELF', 'Configure', 'pre_configure_source', 'JAVA_HOME']}, 'nifi_home': {'get_operation_output': ['SELF', 'Standard', 'create', 'NIFI_HOME']}, 'url': {'concat': ['http://', {'get_attribute': ['HOST', 'public_ip_address']}, ':8080/nifi/']}}, 'properties': {'component_version': {'type': 'version', 'description': 'Version of the installed NiFi component', 'default': '1.6.0', 'constraints': [{'valid_values': ['1.6.0']}]}, 'install_directory': {'type': 'string', 'default': '~/nifi', 'description': 'Home directory of NiFi installation'}, 'repository': {'type': 'string', 'description': 'This property give the opportunity to specify an alternative download repository for this component artifacts. It is your responsibility to provide an accessible download url and to store required artifacts on it. You should specify only the base repository url. Artifacts names will be appended to it, so this property could be shared among several components using the inputs feature.\n', 'required': True, 'default': 'http://archive.apache.org/dist/nifi/1.6.0', 'constraints': [{'pattern': '^(http|https|ftp)://.+/.*$'}]}}, 'requirements': [{'host': {'capability': 'org.ystia.java.pub.capabilities.JavaHosting', 'relationship': 'org.ystia.java.pub.relationships.HostedOnJavaRuntime', 'occurrences': [1, 1], 'node_filter': {'properties': [{'version': {'equal': 8}}]}}}], 'interfaces': {'Standard': {'create': {'inputs': {'NIFI_VERSION': {'get_property': ['SELF', 'component_version']}, 'NIFI_INSTALL_DIR': {'get_property': ['SELF', 'install_directory']}, 'REPOSITORY': {'get_property': ['SELF', 'repository']}}, 'implementation': 'scripts/nifi_install.sh'}, 'configure': {'inputs': {'JAVA_HOME': {'get_attribute': ['SELF', 'java_home']}, 'NIFI_HOME': {'get_attribute': ['SELF', 'nifi_home']}, 'IP_ADDRESS': {'get_attribute': ['SELF', 'ip_address']}}, 'implementation': 'scripts/nifi_configure.sh'}, 'start': {'implementation': 'scripts/nifi_start.sh'}, 'stop': {'implementation': 'scripts/nifi_stop.sh'}}}, 'artifacts': [{'scripts': {'type': 'tosca.artifacts.File', 'file': 'scripts'}}]}}",,101.0,0.0,0.0,68.0,0.0,197.0,6.8,0.0,0.0,1.0,0.0,0.0,0.0,4.0,0.0,0.0,4.0
2278,"{'tosca.nodes.indigo.LRMS.WorkerNode.Kubernetes': {'derived_from': 'tosca.nodes.indigo.LRMS.WorkerNode', 'artifacts': {'kube_role': {'file': 'indigo-dc.kubernetes', 'type': 'tosca.artifacts.AnsibleGalaxy.role'}, 'nfs_role': {'file': 'indigo-dc.nfs', 'type': 'tosca.artifacts.AnsibleGalaxy.role'}, 'openvpn_role': {'file': 'indigo-dc.openvpn', 'type': 'tosca.artifacts.AnsibleGalaxy.role'}}, 'interfaces': {'Standard': {'configure': {'implementation': 'https://raw.githubusercontent.com/indigo-dc/tosca-types/k8s/artifacts/lrms/kubernetes/kube_wn_install.yml', 'inputs': {'kube_front_end_ip': {'get_property': ['SELF', 'front_end_ip']}, 'wn_hybrid_cluster': {'get_property': ['SELF', 'hybrid']}}}}}}}",,25.0,0.0,0.0,21.0,0.0,33.0,4.49,0.0,0.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
1097,{'tosca.nodes.db_server': {'derived_from': 'tosca.nodes.middleware'}},,2.0,0.0,0.0,2.0,0.0,3.0,1.58,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
563,"{'org.alien4cloud.alien4cloud.config.location.nodes.SimpleLocationConfigurator': {'derived_from': 'org.alien4cloud.alien4cloud.config.pub.nodes.LocationConfigurator', 'description': 'Configure a location for an A4C orchestrator\n', 'properties': {'name': {'type': 'string', 'required': True, 'default': 'MyLocation'}, 'type': {'type': 'string', 'required': True, 'default': 'byon', 'constraints': [{'valid_values': ['amazon', 'byon', 'azure']}]}}, 'attributes': {'locationId': {'get_operation_output': ['SELF', 'Standard', 'create', 'locationId']}}, 'interfaces': {'Standard': {'create': {'inputs': {'ANSIBLE_VERBOSE': False, 'PLAYBOOK_ENTRY': 'create_location.yml', 'location_name': {'get_property': ['SELF', 'name']}, 'location_type': {'get_property': ['SELF', 'type']}, 'orchestratorId': {'get_attribute': ['HOST', 'orchestratorId']}, 'alien_url': {'get_attribute': ['HOST', 'alien_url']}, 'alien_user': {'get_attribute': ['HOST', 'alien_user']}, 'alien_password': {'get_attribute': ['HOST', 'alien_password']}}, 'implementation': 'playbook/playbook.ansible'}}}}}",,55.0,0.0,0.0,36.0,0.0,72.0,5.38,0.0,0.0,1.0,0.0,0.0,0.0,2.0,0.0,0.0,0.0
2505,"{'radon.relationships.apache.openwhisk.OpenWhiskKafkaTriggers': {'description': 'OpenWhisk-specific relationship type representing Kafka-to-OpenWhisk Function communication', 'derived_from': 'radon.relationships.Triggers', 'metadata': {'targetNamespace': 'radon.relationships.apache.openwhisk', 'abstract': 'false', 'final': 'false'}, 'properties': {'trigger_name': {'type': 'string', 'description': 'the name of the trigger created by this relationship. Used for proper cleanup when the relationship is removed.'}, 'events': {'type': 'string', 'constraints': [{'length': 1}]}}}}",,17.0,0.0,0.0,15.0,0.0,47.0,5.18,0.0,0.0,0.0,0.0,0.0,0.0,2.0,0.0,0.0,0.0
1270,{'some.nodetype.SomeService': {'derived_from': 'tosca.nodes.Root'}},,2.0,0.0,0.0,2.0,0.0,3.0,1.58,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
622,"{'radon.nodes.azure.AzureHttpTriggeredFunction': {'derived_from': 'radon.nodes.azure.AzureFunction', 'metadata': {'targetNamespace': 'radon.nodes.azure', 'abstract': 'false', 'final': 'false'}, 'attributes': {'url': {'type': 'string', 'default': {'get_operation_output': ['SELF', 'Standard', 'create', 'URL']}}}, 'properties': {'max_outstanding_requests': {'type': 'integer', 'default': 200}, 'max_concurrent_requests': {'type': 'integer', 'default': 100}, 'route': {'type': 'string', 'required': False}, 'auth_level': {'type': 'string', 'required': False, 'constraints': [{'valid_values': ['anonymous', 'function', 'admin']}]}, 'methods': {'type': 'list', 'required': False}, 'route_prefix': {'type': 'string', 'default': 'api'}}, 'interfaces': {'Standard': {'type': 'tosca.interfaces.node.lifecycle.Standard', 'inputs': {'AUTH_LEVEL': {'type': 'string', 'required': False, 'default': {'get_property': ['SELF', 'auth_level']}}, 'ROUTE': {'type': 'string', 'required': False, 'default': {'get_property': ['SELF', 'route']}}, 'ROUTE_PREFIX': {'type': 'string', 'required': True, 'default': {'get_property': ['SELF', 'route_prefix']}}, 'MAX_OUTSTANDING_REQUESTS': {'type': 'string', 'required': True, 'default': {'get_property': ['SELF', 'max_outstanding_requests']}}, 'METHODS': {'type': 'string', 'required': False, 'default': {'get_property': ['SELF', 'methods']}}, 'MAX_CONCURRENT_REQUESTS': {'type': 'string', 'required': True, 'default': {'get_property': ['SELF', 'max_concurrent_requests']}}}}}}}",,85.0,0.0,0.0,66.0,0.0,115.0,4.92,0.0,6.0,1.0,0.0,0.0,0.0,6.0,0.0,0.0,0.0
1841,"{'brooklyn.nodes.SoftwareProcess': {'derived_from': 'tosca.nodes.Root', 'requirements': [{'host': 'tosca.capabilities.Container', 'relationship': 'tosca.relationships.HostedOn'}]}}",,5.0,0.0,0.0,5.0,0.0,8.0,3.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
449,"{'tosca.nodes.MiCADO.Edge.CloudSigma': {'description': 'CS edge node for MiCADO', 'derived_from': 'tosca.nodes.MiCADO.CloudSigma.Compute', 'interfaces': {'Occopus': {'type': 'tosca.interfaces.MiCADO.Occopus'}}}}",,6.0,0.0,0.0,6.0,0.0,13.0,3.7,0.0,0.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
1777,{'cloudshell.nodes.Generic Sub Module': {'derived_from': 'cloudshell.nodes.resource'}},,2.0,0.0,0.0,2.0,0.0,3.0,2.32,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
